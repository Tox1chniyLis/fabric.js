{"version":3,"file":"wrapWithFixedAnchor.min.mjs","sources":["../../../src/controls/wrapWithFixedAnchor.ts"],"sourcesContent":["import type {\n  Transform,\n  TransformActionHandler,\n  TPointerEvent,\n} from '../EventTypeDefs';\n\n/**\n * Wrap an action handler with saving/restoring object position on the transform.\n * this is the code that permits to objects to keep their position while transforming.\n * @param {Function} actionHandler the function to wrap\n * @return {Function} a function with an action handler signature\n */\nexport function wrapWithFixedAnchor<T extends Transform>(\n  actionHandler: TransformActionHandler<T>,\n) {\n  return ((eventData, transform, x, y) => {\n    const target = transform.target;\n\n    const curTransform = {\n      ...transform,\n    };\n\n    if (isCtrlAction(eventData)) {\n      target.set('centeredScaling', true);\n      curTransform.originX = 'center';\n      curTransform.originY = 'center';\n    }\n\n    const originX = curTransform.originX;\n    const originY = curTransform.originY;\n\n    const centerPoint = target.getRelativeCenterPoint();\n    const constraint = target.translateToOriginPoint(\n      centerPoint,\n      originX,\n      originY,\n    );\n    const actionPerformed = actionHandler(eventData, curTransform, x, y);\n    // flipping requires to change the transform origin, so we read from the mutated transform\n    // instead of leveraging the one destructured before\n    target.setPositionByOrigin(\n      constraint,\n      curTransform.originX,\n      curTransform.originY,\n    );\n\n    target.centeredScaling = false;\n\n    return actionPerformed;\n  }) as TransformActionHandler<T>;\n}\n\nfunction isCtrlAction(eventData: TPointerEvent): boolean {\n  return eventData.ctrlKey;\n}\n"],"names":["wrapWithFixedAnchor","actionHandler","eventData","transform","x","y","target","curTransform","_objectSpread","ctrlKey","isCtrlAction","set","originX","originY","centerPoint","getRelativeCenterPoint","constraint","translateToOriginPoint","actionPerformed","setPositionByOrigin","centeredScaling"],"mappings":"iFAYO,SAASA,EACdC,GAEA,MAAQ,CAACC,EAAWC,EAAWC,EAAGC,KAChC,MAAMC,EAASH,EAAUG,OAEnBC,EAAYC,EAAA,CAAA,EACbL,IAiCT,SAAsBD,GACpB,OAAOA,EAAUO,OACnB,EAhCQC,CAAaR,KACfI,EAAOK,IAAI,mBAAmB,GAC9BJ,EAAaK,QAAU,SACvBL,EAAaM,QAAU,UAGzB,MAAMD,EAAUL,EAAaK,QACvBC,EAAUN,EAAaM,QAEvBC,EAAcR,EAAOS,yBACrBC,EAAaV,EAAOW,uBACxBH,EACAF,EACAC,GAEIK,EAAkBjB,EAAcC,EAAWK,EAAcH,EAAGC,GAWlE,OARAC,EAAOa,oBACLH,EACAT,EAAaK,QACbL,EAAaM,SAGfP,EAAOc,iBAAkB,EAElBF,CAAe,CAE1B"}