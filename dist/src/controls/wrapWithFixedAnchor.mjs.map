{"version":3,"file":"wrapWithFixedAnchor.mjs","sources":["../../../src/controls/wrapWithFixedAnchor.ts"],"sourcesContent":["import type {\n  Transform,\n  TransformActionHandler,\n  TPointerEvent,\n} from '../EventTypeDefs';\n\n/**\n * Wrap an action handler with saving/restoring object position on the transform.\n * this is the code that permits to objects to keep their position while transforming.\n * @param {Function} actionHandler the function to wrap\n * @return {Function} a function with an action handler signature\n */\nexport function wrapWithFixedAnchor<T extends Transform>(\n  actionHandler: TransformActionHandler<T>,\n) {\n  return ((eventData, transform, x, y) => {\n    const target = transform.target;\n\n    const curTransform = {\n      ...transform,\n    };\n\n    if (isCtrlAction(eventData)) {\n      target.set('centeredScaling', true);\n      curTransform.originX = 'center';\n      curTransform.originY = 'center';\n    }\n\n    const originX = curTransform.originX;\n    const originY = curTransform.originY;\n\n    const centerPoint = target.getRelativeCenterPoint();\n    const constraint = target.translateToOriginPoint(\n      centerPoint,\n      originX,\n      originY,\n    );\n    const actionPerformed = actionHandler(eventData, transform, x, y);\n    // flipping requires to change the transform origin, so we read from the mutated transform\n    // instead of leveraging the one destructured before\n    target.setPositionByOrigin(\n      constraint,\n      transform.originX,\n      transform.originY,\n    );\n\n    target.centeredScaling = false;\n\n    return actionPerformed;\n  }) as TransformActionHandler<T>;\n}\n\nfunction isCtrlAction(eventData: TPointerEvent): boolean {\n  return eventData.ctrlKey;\n}\n"],"names":["wrapWithFixedAnchor","actionHandler","eventData","transform","x","y","target","curTransform","_objectSpread","isCtrlAction","set","originX","originY","centerPoint","getRelativeCenterPoint","constraint","translateToOriginPoint","actionPerformed","setPositionByOrigin","centeredScaling","ctrlKey"],"mappings":";;AAMA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,mBAAmBA,CACjCC,aAAwC,EACxC;EACA,OAAQ,CAACC,SAAS,EAAEC,SAAS,EAAEC,CAAC,EAAEC,CAAC,KAAK;AACtC,IAAA,MAAMC,MAAM,GAAGH,SAAS,CAACG,MAAM;AAE/B,IAAA,MAAMC,YAAY,GAAAC,cAAA,CAAA,EAAA,EACbL,SAAS,CACb;AAED,IAAA,IAAIM,YAAY,CAACP,SAAS,CAAC,EAAE;AAC3BI,MAAAA,MAAM,CAACI,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC;MACnCH,YAAY,CAACI,OAAO,GAAG,QAAQ;MAC/BJ,YAAY,CAACK,OAAO,GAAG,QAAQ;AACjC;AAEA,IAAA,MAAMD,OAAO,GAAGJ,YAAY,CAACI,OAAO;AACpC,IAAA,MAAMC,OAAO,GAAGL,YAAY,CAACK,OAAO;AAEpC,IAAA,MAAMC,WAAW,GAAGP,MAAM,CAACQ,sBAAsB,EAAE;IACnD,MAAMC,UAAU,GAAGT,MAAM,CAACU,sBAAsB,CAC9CH,WAAW,EACXF,OAAO,EACPC,OACF,CAAC;IACD,MAAMK,eAAe,GAAGhB,aAAa,CAACC,SAAS,EAAEC,SAAS,EAAEC,CAAC,EAAEC,CAAC,CAAC;AACjE;AACA;AACAC,IAAAA,MAAM,CAACY,mBAAmB,CACxBH,UAAU,EACVZ,SAAS,CAACQ,OAAO,EACjBR,SAAS,CAACS,OACZ,CAAC;IAEDN,MAAM,CAACa,eAAe,GAAG,KAAK;AAE9B,IAAA,OAAOF,eAAe;GACvB;AACH;AAEA,SAASR,YAAYA,CAACP,SAAwB,EAAW;EACvD,OAAOA,SAAS,CAACkB,OAAO;AAC1B;;;;"}