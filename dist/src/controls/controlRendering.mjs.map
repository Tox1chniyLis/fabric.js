{"version":3,"file":"controlRendering.mjs","sources":["../../../src/controls/controlRendering.ts"],"sourcesContent":["import { FILL, STROKE, twoMathPi } from '../constants';\nimport type { InteractiveFabricObject } from '../shapes/Object/InteractiveObject';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport type { Control } from './Control';\n\nexport type ControlRenderingStyleOverride = Partial<\n  Pick<\n    InteractiveFabricObject,\n    | 'cornerStyle'\n    | 'cornerSize'\n    | 'cornerColor'\n    | 'cornerStrokeColor'\n    | 'cornerDashArray'\n    | 'transparentCorners' \n    | 'cornerSecondColor'\n  >\n>;\n\nexport type ControlRenderer<\n  O extends InteractiveFabricObject = InteractiveFabricObject,\n> = (\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: O,\n) => void;\n\nexport function renderPointControl(\n    this: Control,\n    ctx: CanvasRenderingContext2D,\n    left: number,\n    top: number,\n    styleOverride: ControlRenderingStyleOverride,\n    fabricObject: InteractiveFabricObject\n  ) {\n    styleOverride = styleOverride || {};\n    const xSize =\n      this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize;\n    const ySize =\n      this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize;\n\n    let myLeft = left;\n    let myTop = top;\n    let size = undefined;\n\n    ctx.save();\n    ctx.fillStyle =\n      styleOverride.cornerSecondColor || fabricObject.cornerSecondColor;\n    ctx.strokeStyle =\n      styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor || \"\";\n\n    if (xSize > ySize) {\n      size = xSize;\n      ctx.scale(1.0, ySize / xSize);\n      myTop = (top * xSize) / ySize;\n    } else if (ySize > xSize) {\n      size = ySize;\n      ctx.scale(xSize / ySize, 1.0);\n      myLeft = (left * ySize) / xSize;\n    } else {\n      size = xSize;\n    }\n\n    ctx.beginPath();\n    ctx.arc(myLeft, myTop, size / 1.5, 0, Math.PI * 2, false);\n    ctx.fill();\n\n    ctx.closePath();\n\n    ctx.arc(myLeft, myTop, size / 1.5, 0, Math.PI * 2, false);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  export function renderRoundedPointControl(\n    this: Control,\n    ctx: CanvasRenderingContext2D,\n    left: number,\n    top: number,\n    styleOverride: ControlRenderingStyleOverride,\n    fabricObject: InteractiveFabricObject\n  ) {\n    styleOverride = styleOverride || {};\n    const xSize =\n      this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize;\n    const ySize =\n      this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize;\n\n    let myLeft = left;\n    let myTop = top;\n    let size = undefined;\n\n    ctx.save();\n    ctx.fillStyle =\n      styleOverride.cornerSecondColor || fabricObject.cornerSecondColor;\n    ctx.strokeStyle =\n      styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor || \"\";\n\n    if (xSize > ySize) {\n      size = xSize;\n      ctx.scale(1.0, ySize / xSize);\n      myTop = (top * xSize) / ySize;\n    } else if (ySize > xSize) {\n      size = ySize;\n      ctx.scale(xSize / ySize, 1.0);\n      myLeft = (left * ySize) / xSize;\n    } else {\n      size = xSize;\n    }\n\n    ctx.beginPath();\n\n    ctx.fillStyle =\n      styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor || \"\";\n\n    ctx.arc(myLeft, myTop, size / 1, 0, Math.PI * 2, false);\n    ctx.fill();\n\n    ctx.closePath();\n\n    ctx.beginPath();\n\n    ctx.fillStyle =\n      styleOverride.cornerSecondColor || fabricObject.cornerSecondColor || \"\";\n\n    ctx.arc(myLeft, myTop, size / 2, 0, Math.PI * 2, false);\n    ctx.fill();\n\n    ctx.closePath();\n    ctx.beginPath();\n\n    ctx.strokeStyle =\n      styleOverride.cornerSecondColor || fabricObject.cornerSecondColor || \"\";\n\n    ctx.arc(myLeft, myTop, size / 1.2, 0, Math.PI * 2, false);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n/**\n * Render a round control, as per fabric features.\n * This function is written to respect object properties like transparentCorners, cornerSize\n * cornerColor, cornerStrokeColor\n * plus the addition of offsetY and offsetX.\n * @param {CanvasRenderingContext2D} ctx context to render on\n * @param {Number} left x coordinate where the control center should be\n * @param {Number} top y coordinate where the control center should be\n * @param {Object} styleOverride override for FabricObject controls style\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\n */\nexport function renderCircleControl(\n  this: Control,\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: InteractiveFabricObject,\n) {\n  styleOverride = styleOverride || {};\n  const xSize =\n      this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize,\n    ySize = this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize,\n    transparentCorners =\n      typeof styleOverride.transparentCorners !== 'undefined'\n        ? styleOverride.transparentCorners\n        : fabricObject.transparentCorners,\n    methodName = transparentCorners ? STROKE : FILL,\n    stroke =\n      !transparentCorners &&\n      (styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor);\n  let myLeft = left,\n    myTop = top,\n    size;\n  ctx.save();\n  ctx.fillStyle = styleOverride.cornerColor || fabricObject.cornerColor || '';\n  ctx.strokeStyle =\n    styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor || '';\n  // TODO: use proper ellipse code.\n  if (xSize > ySize) {\n    size = xSize;\n    ctx.scale(1.0, ySize / xSize);\n    myTop = (top * xSize) / ySize;\n  } else if (ySize > xSize) {\n    size = ySize;\n    ctx.scale(xSize / ySize, 1.0);\n    myLeft = (left * ySize) / xSize;\n  } else {\n    size = xSize;\n  }\n  ctx.beginPath();\n  ctx.arc(myLeft, myTop, size / 2, 0, twoMathPi, false);\n  ctx[methodName]();\n  if (stroke) {\n    ctx.stroke();\n  }\n  ctx.restore();\n} \n\n/**\n * Render a square control, as per fabric features.\n * This function is written to respect object properties like transparentCorners, cornerSize\n * cornerColor, cornerStrokeColor\n * plus the addition of offsetY and offsetX.\n * @param {CanvasRenderingContext2D} ctx context to render on\n * @param {Number} left x coordinate where the control center should be\n * @param {Number} top y coordinate where the control center should be\n * @param {Object} styleOverride override for FabricObject controls style\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\n */\nexport function renderSquareControl(\n  this: Control,\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: InteractiveFabricObject,\n) {\n  styleOverride = styleOverride || {};\n  const xSize =\n      this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize,\n    ySize = this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize,\n    transparentCorners =\n      typeof styleOverride.transparentCorners !== 'undefined'\n        ? styleOverride.transparentCorners\n        : fabricObject.transparentCorners,\n    methodName = transparentCorners ? STROKE : FILL,\n    stroke =\n      !transparentCorners &&\n      (styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor),\n    xSizeBy2 = xSize / 2,\n    ySizeBy2 = ySize / 2;\n  ctx.save();\n  ctx.fillStyle = styleOverride.cornerColor || fabricObject.cornerColor || '';\n  ctx.strokeStyle =\n    styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor || '';\n  ctx.translate(left, top);\n  //  angle is relative to canvas plane\n  const angle = fabricObject.getTotalAngle();\n  ctx.rotate(degreesToRadians(angle));\n  // this does not work, and fixed with ( && ) does not make sense.\n  // to have real transparent corners we need the controls on upperCanvas\n  // transparentCorners || ctx.clearRect(-xSizeBy2, -ySizeBy2, xSize, ySize);\n  ctx[`${methodName}Rect`](-xSizeBy2, -ySizeBy2, xSize, ySize);\n  if (stroke) {\n    ctx.strokeRect(-xSizeBy2, -ySizeBy2, xSize, ySize);\n  }\n  ctx.restore();\n}\n"],"names":["renderPointControl","ctx","left","top","styleOverride","fabricObject","xSize","sizeX","cornerSize","ySize","sizeY","myLeft","myTop","size","undefined","save","fillStyle","cornerSecondColor","strokeStyle","cornerStrokeColor","scale","beginPath","arc","Math","PI","fill","closePath","stroke","restore","renderRoundedPointControl","renderCircleControl","transparentCorners","methodName","STROKE","FILL","cornerColor","twoMathPi","renderSquareControl","xSizeBy2","ySizeBy2","translate","angle","getTotalAngle","rotate","degreesToRadians","concat","strokeRect"],"mappings":"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"}