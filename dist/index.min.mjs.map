{"version":3,"file":"index.min.mjs","sources":["../src/config.ts","../src/util/internals/console.ts","../src/filters/GLProbes/GLProbe.ts","../src/filters/GLProbes/WebGLProbe.ts","../src/env/browser.ts","../src/env/index.ts","../src/cache.ts","../src/constants.ts","../src/ClassRegistry.ts","../src/util/animation/AnimationRegistry.ts","../src/Observable.ts","../src/util/internals/removeFromArray.ts","../src/util/misc/cos.ts","../src/util/misc/sin.ts","../src/Point.ts","../src/Collection.ts","../src/CommonMethods.ts","../src/util/animation/AnimationFrameProvider.ts","../src/util/internals/uid.ts","../src/util/misc/dom.ts","../src/util/misc/radiansDegreesConversion.ts","../src/util/misc/matrix.ts","../src/util/misc/objectEnlive.ts","../src/util/misc/pick.ts","../src/color/color_map.ts","../src/color/util.ts","../src/color/Color.ts","../src/color/constants.ts","../src/util/misc/toFixed.ts","../src/util/misc/svgParsing.ts","../src/util/typeAssertions.ts","../src/util/dom_misc.ts","../src/canvas/DOMManagers/util.ts","../src/canvas/DOMManagers/StaticCanvasDOMManager.ts","../src/canvas/StaticCanvasOptions.ts","../src/canvas/StaticCanvas.ts","../src/util/dom_event.ts","../src/util/misc/boundingBoxFromPoints.ts","../src/util/misc/objectTransforms.ts","../src/util/misc/planeChange.ts","../src/controls/fireEvent.ts","../src/util/misc/resolveOrigin.ts","../src/controls/util.ts","../src/controls/drag.ts","../src/shapes/Object/FabricObjectSVGExportMixin.ts","../src/parser/getSvgRegex.ts","../src/parser/constants.ts","../src/util/misc/vectors.ts","../src/Shadow.ts","../src/util/misc/capValue.ts","../src/shapes/Object/defaultValues.ts","../src/util/animation/easing.ts","../src/util/animation/AnimationBase.ts","../src/util/animation/ValueAnimation.ts","../src/util/animation/ArrayAnimation.ts","../src/util/animation/ColorAnimation.ts","../src/util/animation/animate.ts","../src/Intersection.ts","../src/shapes/Object/ObjectGeometry.ts","../src/shapes/Object/Object.ts","../src/controls/wrapWithFireEvent.ts","../src/controls/wrapWithFixedAnchor.ts","../src/controls/changeWidth.ts","../src/controls/controlRendering.ts","../src/controls/Control.ts","../src/controls/rotate.ts","../src/controls/scale.ts","../src/controls/skew.ts","../src/controls/scaleSkew.ts","../src/controls/commonControls.ts","../src/shapes/Object/InteractiveObject.ts","../src/util/applyMixins.ts","../src/shapes/Object/FabricObject.ts","../src/util/misc/isTransparent.ts","../src/util/misc/projectStroke/StrokeProjectionsBase.ts","../src/util/misc/projectStroke/StrokeLineJoinProjections.ts","../src/util/misc/projectStroke/StrokeLineCapProjections.ts","../src/util/misc/projectStroke/index.ts","../src/util/internals/findRight.ts","../src/util/internals/cloneStyles.ts","../src/util/lang_string.ts","../src/util/misc/textStyles.ts","../src/parser/attributes.ts","../src/parser/selectorMatches.ts","../src/parser/elementMatchesRule.ts","../src/parser/doesSomeParentMatch.ts","../src/parser/normalizeAttr.ts","../src/util/internals/cleanupSvgAttribute.ts","../src/parser/parseTransformAttribute.ts","../src/parser/normalizeValue.ts","../src/parser/parseFontDeclaration.ts","../src/parser/parseStyleString.ts","../src/parser/parseStyleAttribute.ts","../src/parser/parseStyleObject.ts","../src/parser/setStrokeFillOpacity.ts","../src/parser/parseAttributes.ts","../src/parser/getGlobalStylesForElement.ts","../src/shapes/Rect.ts","../src/LayoutManager/constants.ts","../src/LayoutManager/LayoutStrategies/utils.ts","../src/LayoutManager/LayoutStrategies/LayoutStrategy.ts","../src/LayoutManager/LayoutStrategies/FitContentLayout.ts","../src/LayoutManager/LayoutManager.ts","../src/shapes/Group.ts","../src/util/misc/groupSVGElements.ts","../src/util/misc/findScaleTo.ts","../src/util/path/regex.ts","../src/util/path/index.ts","../src/util/dom_style.ts","../src/util/misc/mergeClipPaths.ts","../src/util/internals/getRandomInt.ts","../src/util/internals/dom_request.ts","../src/util/transform_matrix_removal.ts","../src/util/misc/rotatePoint.ts","../src/canvas/DOMManagers/CanvasDOMManager.ts","../src/canvas/SelectableCanvas.ts","../src/canvas/CanvasOptions.ts","../src/canvas/TextEditingManager.ts","../src/canvas/Canvas.ts","../src/gradient/constants.ts","../src/util/internals/ifNaN.ts","../src/parser/percent.ts","../src/gradient/parser/parseColorStops.ts","../src/gradient/parser/misc.ts","../src/gradient/parser/parseCoords.ts","../src/gradient/Gradient.ts","../src/Pattern/Pattern.ts","../src/brushes/BaseBrush.ts","../src/shapes/Path.ts","../src/brushes/PencilBrush.ts","../src/shapes/Circle.ts","../src/brushes/CircleBrush.ts","../src/brushes/SprayBrush.ts","../src/brushes/PatternBrush.ts","../src/shapes/Line.ts","../src/shapes/Triangle.ts","../src/shapes/Ellipse.ts","../src/parser/parsePointsAttribute.ts","../src/shapes/Polyline.ts","../src/shapes/Polygon.ts","../src/shapes/Text/constants.ts","../src/shapes/Text/StyledText.ts","../src/shapes/Text/TextSVGExportMixin.ts","../src/shapes/Text/Text.ts","../src/shapes/IText/DraggableTextDelegate.ts","../src/shapes/IText/ITextBehavior.ts","../src/shapes/IText/ITextKeyBehavior.ts","../src/shapes/IText/ITextClickBehavior.ts","../src/shapes/IText/constants.ts","../src/shapes/IText/IText.ts","../src/shapes/Textbox.ts","../src/LayoutManager/LayoutStrategies/ClipPathLayout.ts","../src/LayoutManager/LayoutStrategies/FixedLayout.ts","../src/LayoutManager/ActiveSelectionLayoutManager.ts","../src/shapes/ActiveSelection.ts","../src/filters/Canvas2dFilterBackend.ts","../src/filters/WebGLFilterBackend.ts","../src/filters/FilterBackend.ts","../src/shapes/Image.ts","../src/parser/applyViewboxTransform.ts","../src/parser/getTagName.ts","../src/parser/hasInvalidAncestor.ts","../src/parser/getMultipleNodes.ts","../src/parser/recursivelyParseGradientsXlink.ts","../src/parser/getGradientDefs.ts","../src/parser/getCSSRules.ts","../src/parser/elements_parser.ts","../src/parser/parseSVGDocument.ts","../src/parser/parseUseDirectives.ts","../src/parser/loadSVGFromString.ts","../src/parser/loadSVGFromURL.ts","../src/controls/polyControl.ts","../src/controls/pathControl.ts","../src/filters/utils.ts","../src/filters/shaders/baseFilter.ts","../src/filters/BaseFilter.ts","../src/filters/shaders/blendColor.ts","../src/filters/BlendColor.ts","../src/filters/shaders/blendImage.ts","../src/filters/BlendImage.ts","../src/filters/Blur.ts","../src/filters/shaders/blur.ts","../src/filters/Brightness.ts","../src/filters/shaders/brightness.ts","../src/filters/shaders/colorMatrix.ts","../src/filters/ColorMatrix.ts","../src/filters/ColorMatrixFilters.ts","../src/filters/Composed.ts","../src/filters/Contrast.ts","../src/filters/shaders/constrast.ts","../src/filters/shaders/convolute.ts","../src/filters/Convolute.ts","../src/filters/shaders/gamma.ts","../src/filters/Gamma.ts","../src/filters/shaders/grayscale.ts","../src/filters/Grayscale.ts","../src/filters/HueRotation.ts","../src/filters/Invert.ts","../src/filters/shaders/invert.ts","../src/filters/Noise.ts","../src/filters/shaders/noise.ts","../src/filters/Pixelate.ts","../src/filters/shaders/pixelate.ts","../src/filters/RemoveColor.ts","../src/filters/shaders/removeColor.ts","../src/filters/Resize.ts","../src/filters/Saturation.ts","../src/filters/shaders/saturation.ts","../src/filters/Vibrance.ts","../src/filters/shaders/vibrance.ts"],"sourcesContent":["export type TConfiguration = Partial<BaseConfiguration>;\n\nclass BaseConfiguration {\n  /**\n   * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n   * which is unitless and not rendered equally across browsers.\n   *\n   * Values that work quite well (as of October 2017) are:\n   * - Chrome: 1.5\n   * - Edge: 1.75\n   * - Firefox: 0.9\n   * - Safari: 0.95\n   *\n   * @since 2.0.0\n   * @type Number\n   * @default 1\n   */\n  browserShadowBlurConstant = 1;\n\n  /**\n   * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n   */\n  DPI = 96;\n\n  /**\n   * Device Pixel Ratio\n   * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n   */\n  devicePixelRatio =\n    typeof window !== 'undefined' ? window.devicePixelRatio : 1; // eslint-disable-line no-restricted-globals\n\n  /**\n   * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n   * @since 1.7.14\n   * @type Number\n   * @default\n   */\n  perfLimitSizeTotal = 2097152;\n\n  /**\n   * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n   * @since 1.7.14\n   * @type Number\n   * @default\n   */\n  maxCacheSideLimit = 4096;\n\n  /**\n   * Lowest pixel limit for cache canvases, set at 256PX\n   * @since 1.7.14\n   * @type Number\n   * @default\n   */\n  minCacheSideLimit = 256;\n\n  /**\n   * When 'true', style information is not retained when copy/pasting text, making\n   * pasted text use destination style.\n   * Defaults to 'false'.\n   * @type Boolean\n   * @default\n   * @deprecated\n   */\n  disableStyleCopyPaste = false;\n\n  /**\n   * Enable webgl for filtering picture is available\n   * A filtering backend will be initialized, this will both take memory and\n   * time since a default 2048x2048 canvas will be created for the gl context\n   * @since 2.0.0\n   * @type Boolean\n   * @default\n   */\n  enableGLFiltering = true;\n\n  /**\n   * if webgl is enabled and available, textureSize will determine the size\n   * of the canvas backend\n   *\n   * In order to support old hardware set to `2048` to avoid OOM\n   *\n   * @since 2.0.0\n   * @type Number\n   * @default\n   */\n  textureSize = 4096;\n\n  /**\n   * Skip performance testing of setupGLContext and force the use of putImageData that seems to be the one that works best on\n   * Chrome + old hardware. if your users are experiencing empty images after filtering you may try to force this to true\n   * this has to be set before instantiating the filtering backend ( before filtering the first image )\n   * @type Boolean\n   * @default false\n   */\n  forceGLPutImageData = false;\n\n  /**\n   * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\n   * With the standard behaviour of fabric to translate all curves in absolute commands and by not subtracting the starting point from\n   * the curve is very hard to hit any cache.\n   * Enable only if you know why it could be useful.\n   * Candidate for removal/simplification\n   * @default false\n   */\n  cachesBoundsOfCurve = false;\n\n  /**\n   * Map of font files\n   * Map<fontFamily, pathToFile> of font files\n   */\n  fontPaths: Record</** fontFamily */ string, /** pathToFile */ string> = {};\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * Used in exporting methods (`toObject`, `toJSON`, `toSVG`)\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   */\n  NUM_FRACTION_DIGITS = 4;\n}\n\nexport class Configuration extends BaseConfiguration {\n  constructor(config?: TConfiguration) {\n    super();\n    this.configure(config);\n  }\n\n  configure(config: TConfiguration = {}) {\n    Object.assign(this, config);\n  }\n\n  /**\n   * Map<fontFamily, pathToFile> of font files\n   */\n  addFonts(\n    paths: Record</** fontFamily */ string, /** pathToFile */ string> = {},\n  ) {\n    this.fontPaths = {\n      ...this.fontPaths,\n      ...paths,\n    };\n  }\n\n  removeFonts(fontFamilys: string[] = []) {\n    fontFamilys.forEach((fontFamily) => {\n      delete this.fontPaths[fontFamily];\n    });\n  }\n\n  clearFonts() {\n    this.fontPaths = {};\n  }\n\n  restoreDefaults<T extends BaseConfiguration>(keys?: (keyof T)[]) {\n    const defaults = new BaseConfiguration() as T;\n    const config =\n      keys?.reduce((acc, key) => {\n        acc[key] = defaults[key];\n        return acc;\n      }, {} as T) || defaults;\n    this.configure(config);\n  }\n}\n\nexport const config = new Configuration();\n","export const log = (\n  severity: 'log' | 'warn' | 'error',\n  ...optionalParams: any[]\n) =>\n  // eslint-disable-next-line no-restricted-syntax\n  console[severity]('fabric', ...optionalParams);\n\nexport class FabricError extends Error {\n  constructor(message?: string, options?: ErrorOptions) {\n    super(`fabric: ${message}`, options);\n  }\n}\n\nexport class SignalAbortedError extends FabricError {\n  constructor(context: string) {\n    super(`${context} 'options.signal' is in 'aborted' state`);\n  }\n}\n","export type GLPrecision = 'lowp' | 'mediump' | 'highp';\n\nexport abstract class GLProbe {\n  declare GLPrecision: GLPrecision | undefined;\n  abstract queryWebGL(canvas: HTMLCanvasElement): void;\n  abstract isSupported(textureSize: number): boolean;\n}\n","import { log } from '../../util/internals/console';\nimport { GLProbe } from './GLProbe';\nimport type { GLPrecision } from './GLProbe';\n\n/**\n * Lazy initialize WebGL constants\n */\nexport class WebGLProbe extends GLProbe {\n  declare maxTextureSize?: number;\n\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {GLPrecision} Precision to test can be any of following\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n  private testPrecision(\n    gl: WebGLRenderingContext,\n    precision: GLPrecision,\n  ): boolean {\n    const fragmentSource = `precision ${precision} float;\\nvoid main(){}`;\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    if (!fragmentShader) {\n      return false;\n    }\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    return !!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS);\n  }\n\n  /**\n   * query browser for WebGL\n   */\n  queryWebGL(canvas: HTMLCanvasElement) {\n    const gl = canvas.getContext('webgl');\n    if (gl) {\n      this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      this.GLPrecision = (['highp', 'mediump', 'lowp'] as const).find(\n        (precision) => this.testPrecision(gl, precision),\n      );\n      gl.getExtension('WEBGL_lose_context')!.loseContext();\n      log('log', `WebGL: max texture size ${this.maxTextureSize}`);\n    }\n  }\n\n  isSupported(textureSize: number) {\n    return !!this.maxTextureSize && this.maxTextureSize >= textureSize;\n  }\n}\n","/* eslint-disable no-restricted-globals */\nimport { WebGLProbe } from '../filters/GLProbes/WebGLProbe';\nimport type { TCopyPasteData, TFabricEnv } from './types';\n\nconst copyPasteData: TCopyPasteData = {};\n\nexport const getEnv = (): TFabricEnv => {\n  return {\n    document,\n    window,\n    isTouchSupported:\n      'ontouchstart' in window ||\n      'ontouchstart' in document ||\n      (window && window.navigator && window.navigator.maxTouchPoints > 0),\n    WebGLProbe: new WebGLProbe(),\n    dispose() {\n      // noop\n    },\n    copyPasteData,\n  };\n};\n","/**\n * This file is consumed by fabric.\n * The `./node` and `./browser` files define the env variable that is used by this module.\n * The `./browser` module is defined to be the default env and doesn't set the env at all.\n * This is done in order to support isomorphic usage for browser and node applications\n * since window and document aren't defined at time of import in SSR, we can't set env so we avoid it by deferring to the default env.\n */\n\nimport { config } from '../config';\nimport { getEnv as getBrowserEnv } from './browser';\nimport type { TFabricEnv } from './types';\nimport type { DOMWindow } from 'jsdom';\n\nlet env: TFabricEnv;\n\n/**\n * Sets the environment variables used by fabric.\\\n * This is exposed for special cases, such as configuring a test environment, and should be used with care.\n *\n * **CAUTION**: Must be called before using the package.\n *\n * @example\n * <caption>Passing `window` and `document` objects to fabric (in case they are mocked or something)</caption>\n * import { getEnv, setEnv } from 'fabric';\n * // we want fabric to use the `window` and `document` objects exposed by the environment we are running in.\n * setEnv({ ...getEnv(), window, document });\n * // done with setup, using fabric is now safe\n */\nexport const setEnv = (value: TFabricEnv) => {\n  env = value;\n};\n\n/**\n * In order to support SSR we **MUST** access the browser env only after the window has loaded\n */\nexport const getEnv = () => env || (env = getBrowserEnv());\n\nexport const getFabricDocument = (): Document => getEnv().document;\n\nexport const getFabricWindow = (): (Window & typeof globalThis) | DOMWindow =>\n  getEnv().window;\n\n/**\n * @returns the config value if defined, fallbacks to the environment value\n */\nexport const getDevicePixelRatio = () =>\n  Math.max(config.devicePixelRatio ?? getFabricWindow().devicePixelRatio, 1);\n","import { config } from './config';\nimport type { TRectBounds } from './typedefs';\n\nexport class Cache {\n  /**\n   * Cache of widths of chars in text rendering.\n   */\n  charWidthsCache: Record<\n    /** fontFamily */ string,\n    Record<\n      /** fontStyleCacheKey */ string,\n      Record</** char */ string, /** width */ number>\n    >\n  > = {};\n\n  /**\n   * @return {Object} reference to cache\n   */\n  getFontCache({\n    fontFamily,\n    fontStyle,\n    fontWeight,\n  }: {\n    fontFamily: string;\n    fontStyle: string;\n    fontWeight: string | number;\n  }) {\n    fontFamily = fontFamily.toLowerCase();\n    if (!this.charWidthsCache[fontFamily]) {\n      this.charWidthsCache[fontFamily] = {};\n    }\n    const fontCache = this.charWidthsCache[fontFamily];\n    const cacheKey = `${fontStyle.toLowerCase()}_${(\n      fontWeight + ''\n    ).toLowerCase()}`;\n    if (!fontCache[cacheKey]) {\n      fontCache[cacheKey] = {};\n    }\n    return fontCache[cacheKey];\n  }\n\n  /**\n   * Clear char widths cache for the given font family or all the cache if no\n   * fontFamily is specified.\n   * Use it if you know you are loading fonts in a lazy way and you are not waiting\n   * for custom fonts to load properly when adding text objects to the canvas.\n   * If a text object is added when its own font is not loaded yet, you will get wrong\n   * measurement and so wrong bounding boxes.\n   * After the font cache is cleared, either change the textObject text content or call\n   * initDimensions() to trigger a recalculation\n   * @param {String} [fontFamily] font family to clear\n   */\n  clearFontCache(fontFamily?: string) {\n    fontFamily = (fontFamily || '').toLowerCase();\n    if (!fontFamily) {\n      this.charWidthsCache = {};\n    } else if (this.charWidthsCache[fontFamily]) {\n      delete this.charWidthsCache[fontFamily];\n    }\n  }\n\n  /**\n   * Given current aspect ratio, determines the max width and height that can\n   * respect the total allowed area for the cache.\n   * @param {number} ar aspect ratio\n   * @return {number[]} Limited dimensions X and Y\n   */\n  limitDimsByArea(ar: number) {\n    const { perfLimitSizeTotal } = config;\n    const roughWidth = Math.sqrt(perfLimitSizeTotal * ar);\n    // we are not returning a point on purpose, to avoid circular dependencies\n    // this is an internal utility\n    return [\n      Math.floor(roughWidth),\n      Math.floor(perfLimitSizeTotal / roughWidth),\n    ];\n  }\n\n  /**\n   * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\n   * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\n   * you do not get any speed benefit and you get a big object in memory.\n   * The object was a private variable before, while now is appended to the lib so that you have access to it and you\n   * can eventually clear it.\n   * It was an internal variable, is accessible since version 2.3.4\n   */\n  boundsOfCurveCache: Record<string, TRectBounds> = {};\n}\n\nexport const cache = new Cache();\n","import type { TMat2D } from './typedefs';\n// use this syntax so babel plugin see this import here\nimport { version } from '../package.json';\n\nexport const VERSION = version;\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function noop() {}\n\nexport const halfPI = Math.PI / 2;\nexport const twoMathPi = Math.PI * 2;\nexport const PiBy180 = Math.PI / 180;\n\nexport const iMatrix = Object.freeze([1, 0, 0, 1, 0, 0]) as TMat2D;\nexport const DEFAULT_SVG_FONT_SIZE = 16;\nexport const ALIASING_LIMIT = 2;\n\n/* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\nexport const kRect = 1 - 0.5522847498;\n\nexport const CENTER = 'center';\nexport const LEFT = 'left';\nexport const TOP = 'top';\nexport const BOTTOM = 'bottom';\nexport const RIGHT = 'right';\nexport const NONE = 'none';\n\nexport const reNewline = /\\r?\\n/;\n\nexport const MOVING = 'moving';\nexport const SCALING = 'scaling';\nexport const ROTATING = 'rotating';\nexport const ROTATE = 'rotate';\nexport const SKEWING = 'skewing';\nexport const RESIZING = 'resizing';\nexport const MODIFY_POLY = 'modifyPoly';\nexport const MODIFY_PATH = 'modifyPath';\nexport const CHANGED = 'changed';\nexport const SCALE = 'scale';\nexport const SCALE_X = 'scaleX';\nexport const SCALE_Y = 'scaleY';\nexport const SKEW_X = 'skewX';\nexport const SKEW_Y = 'skewY';\nexport const FILL = 'fill';\nexport const STROKE = 'stroke';\nexport const MODIFIED = 'modified';\n","import { FabricError } from './util/internals/console';\n\n/*\n * This Map connects the objects type value with their\n * class implementation. It used from any object to understand which are\n * the classes to enlive when requesting a object.type = 'path' for example.\n * Objects uses it for clipPath, Canvas uses it for everything.\n * This is necessary for generic code to run and enlive instances from serialized representation.\n * You can customize which classes get enlived from SVG parsing using this classRegistry.\n * The Registry start empty and gets filled in depending which files you import.\n * If you want to be able to parse arbitrary SVGs or JSON representation of canvases, coming from\n * different sources you will need to import all fabric because you may need all classes.\n */\n\nexport const JSON = 'json';\nexport const SVG = 'svg';\n\nexport class ClassRegistry {\n  declare [JSON]: Map<string, any>;\n  declare [SVG]: Map<string, any>;\n\n  constructor() {\n    this[JSON] = new Map();\n    this[SVG] = new Map();\n  }\n\n  has(classType: string): boolean {\n    return this[JSON].has(classType);\n  }\n\n  getClass<T>(classType: string): T {\n    const constructor = this[JSON].get(classType);\n    if (!constructor) {\n      throw new FabricError(`No class registered for ${classType}`);\n    }\n    return constructor;\n  }\n\n  setClass(classConstructor: any, classType?: string) {\n    if (classType) {\n      this[JSON].set(classType, classConstructor);\n    } else {\n      this[JSON].set(classConstructor.type, classConstructor);\n      // legacy\n      // @TODO: needs to be removed in fabric 7 or 8\n      this[JSON].set(classConstructor.type.toLowerCase(), classConstructor);\n    }\n  }\n\n  getSVGClass(SVGTagName: string): any {\n    return this[SVG].get(SVGTagName);\n  }\n\n  setSVGClass(classConstructor: any, SVGTagName?: string) {\n    this[SVG].set(\n      SVGTagName ?? classConstructor.type.toLowerCase(),\n      classConstructor,\n    );\n  }\n}\n\nexport const classRegistry = new ClassRegistry();\n","import type { StaticCanvas } from '../../canvas/StaticCanvas';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport type { AnimationBase } from './AnimationBase';\n\n/**\n * Array holding all running animations\n */\nclass AnimationRegistry extends Array<AnimationBase> {\n  /**\n   * Remove a single animation using an animation context\n   * @param {AnimationBase} context\n   */\n  remove(context: AnimationBase) {\n    const index = this.indexOf(context);\n    index > -1 && this.splice(index, 1);\n  }\n\n  /**\n   * Cancel all running animations on the next frame\n   */\n  cancelAll() {\n    const animations = this.splice(0);\n    animations.forEach((animation) => animation.abort());\n    return animations;\n  }\n\n  /**\n   * Cancel all running animations attached to a canvas on the next frame\n   * @param {StaticCanvas} canvas\n   */\n  cancelByCanvas(canvas: StaticCanvas) {\n    if (!canvas) {\n      return [];\n    }\n    const animations = this.filter(\n      (animation) =>\n        animation.target === canvas ||\n        (typeof animation.target === 'object' &&\n          (animation.target as FabricObject)?.canvas === canvas),\n    );\n    animations.forEach((animation) => animation.abort());\n    return animations;\n  }\n\n  /**\n   * Cancel all running animations for target on the next frame\n   * @param target\n   */\n  cancelByTarget(target: AnimationBase['target']) {\n    if (!target) {\n      return [];\n    }\n    const animations = this.filter((animation) => animation.target === target);\n    animations.forEach((animation) => animation.abort());\n    return animations;\n  }\n}\n\nexport const runningAnimations = new AnimationRegistry();\n","export type TEventCallback<T = any> = (options: T) => any;\n\ntype EventRegistryObject<E> = {\n  [K in keyof E]?: TEventCallback<E[K]>;\n};\n\n/**\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n * @see {@link http://fabricjs.com/events|Events demo}\n */\nexport class Observable<EventSpec> {\n  private __eventListeners: Record<keyof EventSpec, TEventCallback[]> =\n    {} as Record<keyof EventSpec, TEventCallback[]>;\n\n  /**\n   * Observes specified event\n   * @alias on\n   * @param {string} eventName Event name (eg. 'after:render')\n   * @param {EventRegistryObject} handlers key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Function} disposer\n   */\n  on<K extends keyof EventSpec, E extends EventSpec[K]>(\n    eventName: K,\n    handler: TEventCallback<E>,\n  ): VoidFunction;\n  on(handlers: EventRegistryObject<EventSpec>): VoidFunction;\n  on<K extends keyof EventSpec, E extends EventSpec[K]>(\n    arg0: K | EventRegistryObject<EventSpec>,\n    handler?: TEventCallback<E>,\n  ): VoidFunction {\n    if (!this.__eventListeners) {\n      this.__eventListeners = {} as Record<keyof EventSpec, TEventCallback[]>;\n    }\n    if (typeof arg0 === 'object') {\n      // one object with key/value pairs was passed\n      Object.entries(arg0).forEach(([eventName, handler]) => {\n        this.on(eventName as K, handler as TEventCallback);\n      });\n      return () => this.off(arg0);\n    } else if (handler) {\n      const eventName = arg0;\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n      return () => this.off(eventName, handler);\n    } else {\n      // noop\n      return () => false;\n    }\n  }\n\n  /**\n   * Observes specified event **once**\n   * @alias once\n   * @param {string} eventName Event name (eg. 'after:render')\n   * @param {EventRegistryObject} handlers key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Function} disposer\n   */\n  once<K extends keyof EventSpec, E extends EventSpec[K]>(\n    eventName: K,\n    handler: TEventCallback<E>,\n  ): VoidFunction;\n  once(handlers: EventRegistryObject<EventSpec>): VoidFunction;\n  once<K extends keyof EventSpec, E extends EventSpec[K]>(\n    arg0: K | EventRegistryObject<EventSpec>,\n    handler?: TEventCallback<E>,\n  ): VoidFunction {\n    if (typeof arg0 === 'object') {\n      // one object with key/value pairs was passed\n      const disposers: VoidFunction[] = [];\n      Object.entries(arg0).forEach(([eventName, handler]) => {\n        disposers.push(this.once(eventName as K, handler as TEventCallback));\n      });\n      return () => disposers.forEach((d) => d());\n    } else if (handler) {\n      const disposer = this.on<K, E>(\n        arg0,\n        function onceHandler(this: Observable<EventSpec>, ...args) {\n          handler.call(this, ...args);\n          disposer();\n        },\n      );\n      return disposer;\n    } else {\n      // noop\n      return () => false;\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} eventName\n   * @param {Function} [handler]\n   */\n  private _removeEventListener<K extends keyof EventSpec>(\n    eventName: K,\n    handler?: TEventCallback,\n  ) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n\n    if (handler) {\n      const eventListener = this.__eventListeners[eventName];\n      const index = eventListener.indexOf(handler);\n      index > -1 && eventListener.splice(index, 1);\n    } else {\n      this.__eventListeners[eventName] = [];\n    }\n  }\n\n  /**\n   * Unsubscribe all event listeners for eventname.\n   * Do not use this pattern. You could kill internal fabricJS events.\n   * We know we should have protected events for internal flows, but we don't have yet\n   * @deprecated\n   * @param {string} eventName event name (eg. 'after:render')\n   */\n  off<K extends keyof EventSpec>(eventName: K): void;\n  /**\n   * unsubscribe an event listener\n   * @param {string} eventName event name (eg. 'after:render')\n   * @param {TEventCallback} handler event listener to unsubscribe\n   */\n  off<K extends keyof EventSpec>(eventName: K, handler: TEventCallback): void;\n  /**\n   * unsubscribe event listeners\n   * @param handlers handlers key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   */\n  off(handlers: EventRegistryObject<EventSpec>): void;\n  /**\n   * unsubscribe all event listeners\n   */\n  off(): void;\n  off<K extends keyof EventSpec>(\n    arg0?: K | EventRegistryObject<EventSpec>,\n    handler?: TEventCallback,\n  ) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (typeof arg0 === 'undefined') {\n      for (const eventName in this.__eventListeners) {\n        this._removeEventListener(eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (typeof arg0 === 'object') {\n      Object.entries(arg0).forEach(([eventName, handler]) => {\n        this._removeEventListener(eventName as K, handler as TEventCallback);\n      });\n    } else {\n      this._removeEventListener(arg0, handler);\n    }\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   */\n  fire<K extends keyof EventSpec>(eventName: K, options?: EventSpec[K]) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    const listenersForEvent = this.__eventListeners[eventName]?.concat();\n    if (listenersForEvent) {\n      for (let i = 0; i < listenersForEvent.length; i++) {\n        listenersForEvent[i].call(this, options || {});\n      }\n    }\n  }\n}\n","/**\n * Removes value from an array.\n * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n * @param {Array} array\n * @param {*} value\n * @return {Array} original array\n */\nexport const removeFromArray = <T>(array: T[], value: T): T[] => {\n  const idx = array.indexOf(value);\n  if (idx !== -1) {\n    array.splice(idx, 1);\n  }\n  return array;\n};\n","import type { TRadian } from '../../typedefs';\nimport { halfPI } from '../../constants';\n\n/**\n * Calculate the cos of an angle, avoiding returning floats for known results\n * This function is here just to avoid getting 0.999999999999999 when dealing\n * with numbers that are really 1 or 0.\n * @param {TRadian} angle the angle\n * @return {Number} the cosin value for angle.\n */\nexport const cos = (angle: TRadian): number => {\n  if (angle === 0) {\n    return 1;\n  }\n  const angleSlice = Math.abs(angle) / halfPI;\n  switch (angleSlice) {\n    case 1:\n    case 3:\n      return 0;\n    case 2:\n      return -1;\n  }\n  return Math.cos(angle);\n};\n","import type { TRadian } from '../../typedefs';\nimport { halfPI } from '../../constants';\n\n/**\n * Calculate the cos of an angle, avoiding returning floats for known results\n * This function is here just to avoid getting 0.999999999999999 when dealing\n * with numbers that are really 1 or 0.\n * @param {TRadian} angle the angle\n * @return {Number} the sin value for angle.\n */\nexport const sin = (angle: TRadian): number => {\n  if (angle === 0) {\n    return 0;\n  }\n  const angleSlice = angle / halfPI;\n  const value = Math.sign(angle);\n  switch (angleSlice) {\n    case 1:\n      return value;\n    case 2:\n      return 0;\n    case 3:\n      return -value;\n  }\n  return Math.sin(angle);\n};\n","import type { TMat2D, TRadian } from './typedefs';\nimport { cos } from './util/misc/cos';\nimport { sin } from './util/misc/sin';\n\nexport interface XY {\n  x: number;\n  y: number;\n}\n\n/**\n * Adaptation of work of Kevin Lindsey(kevin@kevlindev.com)\n */\nexport class Point implements XY {\n  declare x: number;\n\n  declare y: number;\n\n  constructor();\n  constructor(x: number, y: number);\n  constructor(point?: XY);\n  constructor(arg0: number | XY = 0, y = 0) {\n    if (typeof arg0 === 'object') {\n      this.x = arg0.x;\n      this.y = arg0.y;\n    } else {\n      this.x = arg0;\n      this.y = y;\n    }\n  }\n\n  /**\n   * Adds another point to this one and returns another one\n   * @param {XY} that\n   * @return {Point} new Point instance with added values\n   */\n  add(that: XY): Point {\n    return new Point(this.x + that.x, this.y + that.y);\n  }\n\n  /**\n   * Adds another point to this one\n   * @param {XY} that\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  addEquals(that: XY): Point {\n    this.x += that.x;\n    this.y += that.y;\n    return this;\n  }\n\n  /**\n   * Adds value to this point and returns a new one\n   * @param {Number} scalar\n   * @return {Point} new Point with added value\n   */\n  scalarAdd(scalar: number): Point {\n    return new Point(this.x + scalar, this.y + scalar);\n  }\n\n  /**\n   * Adds value to this point\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarAddEquals(scalar: number): Point {\n    this.x += scalar;\n    this.y += scalar;\n    return this;\n  }\n\n  /**\n   * Subtracts another point from this point and returns a new one\n   * @param {XY} that\n   * @return {Point} new Point object with subtracted values\n   */\n  subtract(that: XY): Point {\n    return new Point(this.x - that.x, this.y - that.y);\n  }\n\n  /**\n   * Subtracts another point from this point\n   * @param {XY} that\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  subtractEquals(that: XY): Point {\n    this.x -= that.x;\n    this.y -= that.y;\n    return this;\n  }\n\n  /**\n   * Subtracts value from this point and returns a new one\n   * @param {Number} scalar\n   * @return {Point}\n   */\n  scalarSubtract(scalar: number): Point {\n    return new Point(this.x - scalar, this.y - scalar);\n  }\n\n  /**\n   * Subtracts value from this point\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarSubtractEquals(scalar: number): Point {\n    this.x -= scalar;\n    this.y -= scalar;\n    return this;\n  }\n\n  /**\n   * Multiplies this point by another value and returns a new one\n   * @param {XY} that\n   * @return {Point}\n   */\n  multiply(that: XY): Point {\n    return new Point(this.x * that.x, this.y * that.y);\n  }\n\n  /**\n   * Multiplies this point by a value and returns a new one\n   * @param {Number} scalar\n   * @return {Point}\n   */\n  scalarMultiply(scalar: number): Point {\n    return new Point(this.x * scalar, this.y * scalar);\n  }\n\n  /**\n   * Multiplies this point by a value\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarMultiplyEquals(scalar: number): Point {\n    this.x *= scalar;\n    this.y *= scalar;\n    return this;\n  }\n\n  /**\n   * Divides this point by another and returns a new one\n   * @param {XY} that\n   * @return {Point}\n   */\n  divide(that: XY): Point {\n    return new Point(this.x / that.x, this.y / that.y);\n  }\n\n  /**\n   * Divides this point by a value and returns a new one\n   * @param {Number} scalar\n   * @return {Point}\n   */\n  scalarDivide(scalar: number): Point {\n    return new Point(this.x / scalar, this.y / scalar);\n  }\n\n  /**\n   * Divides this point by a value\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarDivideEquals(scalar: number): Point {\n    this.x /= scalar;\n    this.y /= scalar;\n    return this;\n  }\n\n  /**\n   * Returns true if this point is equal to another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  eq(that: XY): boolean {\n    return this.x === that.x && this.y === that.y;\n  }\n\n  /**\n   * Returns true if this point is less than another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  lt(that: XY): boolean {\n    return this.x < that.x && this.y < that.y;\n  }\n\n  /**\n   * Returns true if this point is less than or equal to another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  lte(that: XY): boolean {\n    return this.x <= that.x && this.y <= that.y;\n  }\n\n  /**\n\n   * Returns true if this point is greater another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  gt(that: XY): boolean {\n    return this.x > that.x && this.y > that.y;\n  }\n\n  /**\n   * Returns true if this point is greater than or equal to another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  gte(that: XY): boolean {\n    return this.x >= that.x && this.y >= that.y;\n  }\n\n  /**\n   * Returns new point which is the result of linear interpolation with this one and another one\n   * @param {XY} that\n   * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n   * @return {Point}\n   */\n  lerp(that: XY, t = 0.5): Point {\n    t = Math.max(Math.min(1, t), 0);\n    return new Point(\n      this.x + (that.x - this.x) * t,\n      this.y + (that.y - this.y) * t,\n    );\n  }\n\n  /**\n   * Returns distance from this point and another one\n   * @param {XY} that\n   * @return {Number}\n   */\n  distanceFrom(that: XY): number {\n    const dx = this.x - that.x,\n      dy = this.y - that.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  /**\n   * Returns the point between this point and another one\n   * @param {XY} that\n   * @return {Point}\n   */\n  midPointFrom(that: XY): Point {\n    return this.lerp(that);\n  }\n\n  /**\n   * Returns a new point which is the min of this and another one\n   * @param {XY} that\n   * @return {Point}\n   */\n  min(that: XY): Point {\n    return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n  }\n\n  /**\n   * Returns a new point which is the max of this and another one\n   * @param {XY} that\n   * @return {Point}\n   */\n  max(that: XY): Point {\n    return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n  }\n\n  /**\n   * Returns string representation of this point\n   * @return {String}\n   */\n  toString(): string {\n    return `${this.x},${this.y}`;\n  }\n\n  /**\n   * Sets x/y of this point\n   * @param {Number} x\n   * @param {Number} y\n   * @chainable\n   */\n  setXY(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  /**\n   * Sets x of this point\n   * @param {Number} x\n   * @chainable\n   */\n  setX(x: number) {\n    this.x = x;\n    return this;\n  }\n\n  /**\n   * Sets y of this point\n   * @param {Number} y\n   * @chainable\n   */\n  setY(y: number) {\n    this.y = y;\n    return this;\n  }\n\n  /**\n   * Sets x/y of this point from another point\n   * @param {XY} that\n   * @chainable\n   */\n  setFromPoint(that: XY) {\n    this.x = that.x;\n    this.y = that.y;\n    return this;\n  }\n\n  /**\n   * Swaps x/y of this point and another point\n   * @param {XY} that\n   */\n  swap(that: XY) {\n    const x = this.x,\n      y = this.y;\n    this.x = that.x;\n    this.y = that.y;\n    that.x = x;\n    that.y = y;\n  }\n\n  /**\n   * return a cloned instance of the point\n   * @return {Point}\n   */\n  clone(): Point {\n    return new Point(this.x, this.y);\n  }\n\n  /**\n   * Rotates `point` around `origin` with `radians`\n   * @static\n   * @memberOf fabric.util\n   * @param {XY} origin The origin of the rotation\n   * @param {TRadian} radians The radians of the angle for the rotation\n   * @return {Point} The new rotated point\n   */\n  rotate(radians: TRadian, origin: XY = ZERO): Point {\n    // TODO benchmark and verify the add and subtract how much cost\n    // and then in case early return if no origin is passed\n    const sinus = sin(radians),\n      cosinus = cos(radians);\n    const p = this.subtract(origin);\n    const rotated = new Point(\n      p.x * cosinus - p.y * sinus,\n      p.x * sinus + p.y * cosinus,\n    );\n    return rotated.add(origin);\n  }\n\n  /**\n   * Apply transform t to point p\n   * @static\n   * @memberOf fabric.util\n   * @param  {TMat2D} t The transform\n   * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n   * @return {Point} The transformed point\n   */\n  transform(t: TMat2D, ignoreOffset = false): Point {\n    return new Point(\n      t[0] * this.x + t[2] * this.y + (ignoreOffset ? 0 : t[4]),\n      t[1] * this.x + t[3] * this.y + (ignoreOffset ? 0 : t[5]),\n    );\n  }\n}\n\nexport const ZERO = new Point(0, 0);\n","import type { Constructor, TBBox } from './typedefs';\nimport { removeFromArray } from './util/internals/removeFromArray';\nimport { Point } from './Point';\nimport type { ActiveSelection } from './shapes/ActiveSelection';\nimport type { Group } from './shapes/Group';\nimport type { InteractiveFabricObject } from './shapes/Object/InteractiveObject';\nimport type { FabricObject } from './shapes/Object/FabricObject';\n\nexport const isCollection = (\n  fabricObject?: FabricObject,\n): fabricObject is Group | ActiveSelection => {\n  return !!fabricObject && Array.isArray((fabricObject as Group)._objects);\n};\n\nexport function createCollectionMixin<TBase extends Constructor>(Base: TBase) {\n  class Collection extends Base {\n    /**\n     * @type {FabricObject[]}\n     * @TODO needs to end up in the constructor too\n     */\n    _objects: FabricObject[] = [];\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _onObjectAdded(object: FabricObject) {\n      // subclasses should override this method\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _onObjectRemoved(object: FabricObject) {\n      // subclasses should override this method\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _onStackOrderChanged(object: FabricObject) {\n      // subclasses should override this method\n    }\n\n    /**\n     * Adds objects to collection\n     * Objects should be instances of (or inherit from) FabricObject\n     * @param {...FabricObject[]} objects to add\n     * @returns {number} new array length\n     */\n    add(...objects: FabricObject[]): number {\n      const size = this._objects.push(...objects);\n      objects.forEach((object) => this._onObjectAdded(object));\n      return size;\n    }\n\n    /**\n     * Inserts an object into collection at specified index\n     * @param {number} index Index to insert object at\n     * @param {...FabricObject[]} objects Object(s) to insert\n     * @returns {number} new array length\n     */\n    insertAt(index: number, ...objects: FabricObject[]) {\n      this._objects.splice(index, 0, ...objects);\n      objects.forEach((object) => this._onObjectAdded(object));\n      return this._objects.length;\n    }\n\n    /**\n     * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n     * @private\n     * @param {...FabricObject[]} objects objects to remove\n     * @returns {FabricObject[]} removed objects\n     */\n    remove(...objects: FabricObject[]) {\n      const array = this._objects,\n        removed: FabricObject[] = [];\n      objects.forEach((object) => {\n        const index = array.indexOf(object);\n        // only call onObjectRemoved if an object was actually removed\n        if (index !== -1) {\n          array.splice(index, 1);\n          removed.push(object);\n          this._onObjectRemoved(object);\n        }\n      });\n      return removed;\n    }\n\n    /**\n     * Executes given function for each object in this group\n     * A simple shortcut for getObjects().forEach, before es6 was more complicated,\n     * now is just a shortcut.\n     * @param {Function} callback\n     *                   Callback invoked with current object as first argument,\n     *                   index - as second and an array of all objects - as third.\n     */\n    forEachObject(\n      callback: (\n        object: FabricObject,\n        index: number,\n        array: FabricObject[],\n      ) => any,\n    ) {\n      this.getObjects().forEach((object, index, objects) =>\n        callback(object, index, objects),\n      );\n    }\n\n    /**\n     * Returns an array of children objects of this instance\n     * @param {...String} [types] When specified, only objects of these types are returned\n     * @return {Array}\n     */\n    getObjects(...types: string[]) {\n      if (types.length === 0) {\n        return [...this._objects];\n      }\n      return this._objects.filter((o) => o.isType(...types));\n    }\n\n    /**\n     * Returns object at specified index\n     * @param {Number} index\n     * @return {Object} object at index\n     */\n    item(index: number) {\n      return this._objects[index];\n    }\n\n    /**\n     * Returns true if collection contains no objects\n     * @return {Boolean} true if collection is empty\n     */\n    isEmpty() {\n      return this._objects.length === 0;\n    }\n\n    /**\n     * Returns a size of a collection (i.e: length of an array containing its objects)\n     * @return {Number} Collection size\n     */\n    size() {\n      return this._objects.length;\n    }\n\n    /**\n     * Returns true if collection contains an object.\\\n     * **Prefer using {@link FabricObject#isDescendantOf} for performance reasons**\n     * instead of `a.contains(b)` use `b.isDescendantOf(a)`\n     * @param {Object} object Object to check against\n     * @param {Boolean} [deep=false] `true` to check all descendants, `false` to check only `_objects`\n     * @return {Boolean} `true` if collection contains an object\n     */\n    contains(object: FabricObject, deep?: boolean): boolean {\n      if (this._objects.includes(object)) {\n        return true;\n      } else if (deep) {\n        return this._objects.some(\n          (obj) =>\n            obj instanceof Collection &&\n            (obj as unknown as Collection).contains(object, true),\n        );\n      }\n      return false;\n    }\n\n    /**\n     * Returns number representation of a collection complexity\n     * @return {Number} complexity\n     */\n    complexity() {\n      return this._objects.reduce((memo, current) => {\n        memo += current.complexity ? current.complexity() : 0;\n        return memo;\n      }, 0);\n    }\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @returns {boolean} true if change occurred\n     */\n    sendObjectToBack(object: FabricObject) {\n      if (!object || object === this._objects[0]) {\n        return false;\n      }\n      removeFromArray(this._objects, object);\n      this._objects.unshift(object);\n      this._onStackOrderChanged(object);\n      return true;\n    }\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @returns {boolean} true if change occurred\n     */\n    bringObjectToFront(object: FabricObject) {\n      if (!object || object === this._objects[this._objects.length - 1]) {\n        return false;\n      }\n      removeFromArray(this._objects, object);\n      this._objects.push(object);\n      this._onStackOrderChanged(object);\n      return true;\n    }\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional parameter, `intersecting` allows to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @returns {boolean} true if change occurred\n     */\n    sendObjectBackwards(object: FabricObject, intersecting?: boolean) {\n      if (!object) {\n        return false;\n      }\n      const idx = this._objects.indexOf(object);\n      if (idx !== 0) {\n        // if object is not on the bottom of stack\n        const newIdx = this.findNewLowerIndex(object, idx, intersecting);\n        removeFromArray(this._objects, object);\n        this._objects.splice(newIdx, 0, object);\n        this._onStackOrderChanged(object);\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional parameter, intersecting allows to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @returns {boolean} true if change occurred\n     */\n    bringObjectForward(object: FabricObject, intersecting?: boolean) {\n      if (!object) {\n        return false;\n      }\n      const idx = this._objects.indexOf(object);\n      if (idx !== this._objects.length - 1) {\n        // if object is not on top of stack (last item in an array)\n        const newIdx = this.findNewUpperIndex(object, idx, intersecting);\n        removeFromArray(this._objects, object);\n        this._objects.splice(newIdx, 0, object);\n        this._onStackOrderChanged(object);\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {number} index Position to move to\n     * @returns {boolean} true if change occurred\n     */\n    moveObjectTo(object: FabricObject, index: number) {\n      if (object === this._objects[index]) {\n        return false;\n      }\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      this._onStackOrderChanged(object);\n      return true;\n    }\n\n    findNewLowerIndex(\n      object: FabricObject,\n      idx: number,\n      intersecting?: boolean,\n    ) {\n      let newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n        // traverse down the stack looking for the nearest intersecting object\n        for (let i = idx - 1; i >= 0; --i) {\n          if (object.isOverlapping(this._objects[i])) {\n            newIdx = i;\n            break;\n          }\n        }\n      } else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    }\n\n    findNewUpperIndex(\n      object: FabricObject,\n      idx: number,\n      intersecting?: boolean,\n    ) {\n      let newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n        // traverse up the stack looking for the nearest intersecting object\n        for (let i = idx + 1; i < this._objects.length; ++i) {\n          if (object.isOverlapping(this._objects[i])) {\n            newIdx = i;\n            break;\n          }\n        }\n      } else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    }\n\n    /**\n     * Given a bounding box, return all the objects of the collection that are contained in the bounding box.\n     * If `includeIntersecting` is true, return also the objects that intersect the bounding box as well.\n     * This is meant to work with selection. Is not a generic method.\n     * @param {TBBox} bbox a bounding box in scene coordinates\n     * @param {{ includeIntersecting?: boolean }} options an object with includeIntersecting\n     * @returns array of objects contained in the bounding box, ordered from top to bottom stacking wise\n     */\n    collectObjects(\n      { left, top, width, height }: TBBox,\n      { includeIntersecting = true }: { includeIntersecting?: boolean } = {},\n    ) {\n      const objects: InteractiveFabricObject[] = [],\n        tl = new Point(left, top),\n        br = tl.add(new Point(width, height));\n\n      // we iterate reverse order to collect top first in case of click.\n      for (let i = this._objects.length - 1; i >= 0; i--) {\n        const object = this._objects[i] as unknown as InteractiveFabricObject;\n        if (\n          object.selectable &&\n          object.visible &&\n          ((includeIntersecting && object.intersectsWithRect(tl, br)) ||\n            object.isContainedWithinRect(tl, br) ||\n            (includeIntersecting && object.containsPoint(tl)) ||\n            (includeIntersecting && object.containsPoint(br)))\n        ) {\n          objects.push(object);\n        }\n      }\n\n      return objects;\n    }\n  }\n\n  // https://github.com/microsoft/TypeScript/issues/32080\n  return Collection as typeof Collection & TBase;\n}\n","import { Observable } from './Observable';\n\nexport class CommonMethods<EventSpec> extends Observable<EventSpec> {\n  /**\n   * Sets object's properties from options, for initialization only\n   * @protected\n   * @param {Object} [options] Options object\n   */\n  protected _setOptions(options: any = {}) {\n    for (const prop in options) {\n      this.set(prop, options[prop]);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setObject(obj: Record<string, any>) {\n    for (const prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  }\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   */\n  set(key: string | Record<string, any>, value?: any) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    } else {\n      this._set(key, value);\n    }\n    return this;\n  }\n\n  _set(key: string, value: any) {\n    this[key as keyof this] = value;\n  }\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   */\n  toggle(property: string) {\n    const value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  }\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get(property: string): any {\n    return this[property as keyof this];\n  }\n}\n","import { getFabricWindow } from '../../env';\n\nexport function requestAnimFrame(callback: FrameRequestCallback): number {\n  return getFabricWindow().requestAnimationFrame(callback);\n}\n\nexport function cancelAnimFrame(handle: number): void {\n  return getFabricWindow().cancelAnimationFrame(handle);\n}\n","let id = 0;\n\nexport const uid = () => id++;\n","import { getFabricDocument } from '../../env';\nimport type { ImageFormat, TSize } from '../../typedefs';\nimport { FabricError } from '../internals/console';\n/**\n * Creates canvas element\n * @return {CanvasElement} initialized canvas element\n */\nexport const createCanvasElement = (): HTMLCanvasElement => {\n  const element = getFabricDocument().createElement('canvas');\n  if (!element || typeof element.getContext === 'undefined') {\n    throw new FabricError('Failed to create `canvas` element');\n  }\n  return element;\n};\n\n/**\n * Creates image element (works on client and node)\n * @return {HTMLImageElement} HTML image element\n */\nexport const createImage = (): HTMLImageElement =>\n  getFabricDocument().createElement('img');\n\n/**\n * Creates a canvas element that is a copy of another and is also painted\n * @param {CanvasElement} canvas to copy size and content of\n * @return {CanvasElement} initialized canvas element\n */\nexport const copyCanvasElement = (\n  canvas: HTMLCanvasElement,\n): HTMLCanvasElement => {\n  const newCanvas = createCanvasElementFor(canvas);\n  newCanvas.getContext('2d')?.drawImage(canvas, 0, 0);\n  return newCanvas;\n};\n\nexport const createCanvasElementFor = (\n  canvas: HTMLCanvasElement | ImageData | HTMLImageElement | TSize,\n): HTMLCanvasElement => {\n  const newCanvas = createCanvasElement();\n  newCanvas.width = canvas.width;\n  newCanvas.height = canvas.height;\n  return newCanvas;\n};\n\n/**\n * since 2.6.0 moved from canvas instance to utility.\n * possibly useless\n * @param {CanvasElement} canvasEl to copy size and content of\n * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\n * @param {Number} quality <= 1 and > 0\n * @return {String} data url\n */\nexport const toDataURL = (\n  canvasEl: HTMLCanvasElement,\n  format: ImageFormat,\n  quality: number,\n) => canvasEl.toDataURL(`image/${format}`, quality);\n\nexport const isHTMLCanvas = (\n  canvas?: HTMLCanvasElement | string,\n): canvas is HTMLCanvasElement => {\n  return !!canvas && (canvas as HTMLCanvasElement).getContext !== undefined;\n};\n","import type { TRadian, TDegree } from '../../typedefs';\nimport { PiBy180 } from '../../constants';\n\n/**\n * Transforms degrees to radians.\n * @param {TDegree} degrees value in degrees\n * @return {TRadian} value in radians\n */\nexport const degreesToRadians = (degrees: TDegree): TRadian =>\n  (degrees * PiBy180) as TRadian;\n\n/**\n * Transforms radians to degrees.\n * @param {TRadian} radians value in radians\n * @return {TDegree} value in degrees\n */\nexport const radiansToDegrees = (radians: TRadian): TDegree =>\n  (radians / PiBy180) as TDegree;\n","import { iMatrix } from '../../constants';\nimport type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport type { TDegree, TRadian, TMat2D } from '../../typedefs';\nimport { cos } from './cos';\nimport { degreesToRadians, radiansToDegrees } from './radiansDegreesConversion';\nimport { sin } from './sin';\n\nexport type TRotateMatrixArgs = {\n  angle?: TDegree;\n};\n\nexport type TTranslateMatrixArgs = {\n  translateX?: number;\n  translateY?: number;\n};\n\nexport type TScaleMatrixArgs = {\n  scaleX?: number;\n  scaleY?: number;\n  flipX?: boolean;\n  flipY?: boolean;\n  skewX?: TDegree;\n  skewY?: TDegree;\n};\n\nexport type TComposeMatrixArgs = TTranslateMatrixArgs &\n  TRotateMatrixArgs &\n  TScaleMatrixArgs;\n\nexport type TQrDecomposeOut = Required<\n  Omit<TComposeMatrixArgs, 'flipX' | 'flipY'>\n>;\n\nexport const isIdentityMatrix = (mat: TMat2D) =>\n  mat.every((value, index) => value === iMatrix[index]);\n\n/**\n * Apply transform t to point p\n * @deprecated use {@link Point#transform}\n * @param  {Point | XY} p The point to transform\n * @param  {Array} t The transform\n * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n * @return {Point} The transformed point\n */\nexport const transformPoint = (\n  p: XY,\n  t: TMat2D,\n  ignoreOffset?: boolean,\n): Point => new Point(p).transform(t, ignoreOffset);\n\n/**\n * Invert transformation t\n * @param {Array} t The transform\n * @return {Array} The inverted transform\n */\nexport const invertTransform = (t: TMat2D): TMat2D => {\n  const a = 1 / (t[0] * t[3] - t[1] * t[2]),\n    r = [a * t[3], -a * t[1], -a * t[2], a * t[0], 0, 0] as TMat2D,\n    { x, y } = new Point(t[4], t[5]).transform(r, true);\n  r[4] = -x;\n  r[5] = -y;\n  return r;\n};\n\n/**\n * Multiply matrix A by matrix B to nest transformations\n * @param  {TMat2D} a First transformMatrix\n * @param  {TMat2D} b Second transformMatrix\n * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n * @return {TMat2D} The product of the two transform matrices\n */\nexport const multiplyTransformMatrices = (\n  a: TMat2D,\n  b: TMat2D,\n  is2x2?: boolean,\n): TMat2D =>\n  [\n    a[0] * b[0] + a[2] * b[1],\n    a[1] * b[0] + a[3] * b[1],\n    a[0] * b[2] + a[2] * b[3],\n    a[1] * b[2] + a[3] * b[3],\n    is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n    is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5],\n  ] as TMat2D;\n\n/**\n * Multiplies {@link matrices} such that a matrix defines the plane for the rest of the matrices **after** it\n *\n * `multiplyTransformMatrixArray([A, B, C, D])` is equivalent to `A(B(C(D)))`\n *\n * @param matrices an array of matrices\n * @param [is2x2] flag to multiply matrices as 2x2 matrices\n * @returns the multiplication product\n */\nexport const multiplyTransformMatrixArray = (\n  matrices: (TMat2D | undefined | null | false)[],\n  is2x2?: boolean,\n) =>\n  matrices.reduceRight(\n    (product: TMat2D, curr) =>\n      curr && product\n        ? multiplyTransformMatrices(curr, product, is2x2)\n        : curr || product,\n    undefined as unknown as TMat2D,\n  ) || iMatrix.concat();\n\nexport const calcPlaneRotation = ([a, b]: TMat2D) =>\n  Math.atan2(b, a) as TRadian;\n\n/**\n * Decomposes standard 2x3 matrix into transform components\n * @param  {TMat2D} a transformMatrix\n * @return {Object} Components of transform\n */\nexport const qrDecompose = (a: TMat2D): TQrDecomposeOut => {\n  const angle = calcPlaneRotation(a),\n    denom = Math.pow(a[0], 2) + Math.pow(a[1], 2),\n    scaleX = Math.sqrt(denom),\n    scaleY = (a[0] * a[3] - a[2] * a[1]) / scaleX,\n    skewX = Math.atan2(a[0] * a[2] + a[1] * a[3], denom);\n  return {\n    angle: radiansToDegrees(angle),\n    scaleX,\n    scaleY,\n    skewX: radiansToDegrees(skewX),\n    skewY: 0 as TDegree,\n    translateX: a[4] || 0,\n    translateY: a[5] || 0,\n  };\n};\n\n/**\n * Generate a translation matrix\n *\n * A translation matrix in the form of\n * [ 1 0 x ]\n * [ 0 1 y ]\n * [ 0 0 1 ]\n *\n * See @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#translate for more details\n *\n * @param {number} x translation on X axis\n * @param {number} [y] translation on Y axis\n * @returns {TMat2D} matrix\n */\nexport const createTranslateMatrix = (x: number, y = 0): TMat2D => [\n  1,\n  0,\n  0,\n  1,\n  x,\n  y,\n];\n\n/**\n * Generate a rotation matrix around around a point (x,y), defaulting to (0,0)\n *\n * A matrix in the form of\n * [cos(a) -sin(a) -x*cos(a)+y*sin(a)+x]\n * [sin(a)  cos(a) -x*sin(a)-y*cos(a)+y]\n * [0       0      1                 ]\n *\n *\n * @param {TDegree} angle rotation in degrees\n * @param {XY} [pivotPoint] pivot point to rotate around\n * @returns {TMat2D} matrix\n */\nexport function createRotateMatrix(\n  { angle = 0 }: TRotateMatrixArgs = {},\n  { x = 0, y = 0 }: Partial<XY> = {},\n): TMat2D {\n  const angleRadiant = degreesToRadians(angle),\n    cosValue = cos(angleRadiant),\n    sinValue = sin(angleRadiant);\n  return [\n    cosValue,\n    sinValue,\n    -sinValue,\n    cosValue,\n    x ? x - (cosValue * x - sinValue * y) : 0,\n    y ? y - (sinValue * x + cosValue * y) : 0,\n  ];\n}\n\n/**\n * Generate a scale matrix around the point (0,0)\n *\n * A matrix in the form of\n * [x 0 0]\n * [0 y 0]\n * [0 0 1]\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#scale\n *\n * @param {number} x scale on X axis\n * @param {number} [y] scale on Y axis\n * @returns {TMat2D} matrix\n */\nexport const createScaleMatrix = (x: number, y: number = x): TMat2D => [\n  x,\n  0,\n  0,\n  y,\n  0,\n  0,\n];\n\nexport const angleToSkew = (angle: TDegree) =>\n  Math.tan(degreesToRadians(angle));\n\nexport const skewToAngle = (value: TRadian) =>\n  radiansToDegrees(Math.atan(value));\n\n/**\n * Generate a skew matrix for the X axis\n *\n * A matrix in the form of\n * [1 x 0]\n * [0 1 0]\n * [0 0 1]\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#skewx\n *\n * @param {TDegree} skewValue translation on X axis\n * @returns {TMat2D} matrix\n */\nexport const createSkewXMatrix = (skewValue: TDegree): TMat2D => [\n  1,\n  0,\n  angleToSkew(skewValue),\n  1,\n  0,\n  0,\n];\n\n/**\n * Generate a skew matrix for the Y axis\n *\n * A matrix in the form of\n * [1 0 0]\n * [y 1 0]\n * [0 0 1]\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#skewy\n *\n * @param {TDegree} skewValue translation on Y axis\n * @returns {TMat2D} matrix\n */\nexport const createSkewYMatrix = (skewValue: TDegree): TMat2D => [\n  1,\n  angleToSkew(skewValue),\n  0,\n  1,\n  0,\n  0,\n];\n\n/**\n * Returns a transform matrix starting from an object of the same kind of\n * the one returned from qrDecompose, useful also if you want to calculate some\n * transformations from an object that is not enlived yet.\n * is called DimensionsTransformMatrix because those properties are the one that influence\n * the size of the resulting box of the object.\n * @param  {Object} options\n * @param  {Number} [options.scaleX]\n * @param  {Number} [options.scaleY]\n * @param  {Boolean} [options.flipX]\n * @param  {Boolean} [options.flipY]\n * @param  {Number} [options.skewX]\n * @param  {Number} [options.skewY]\n * @return {Number[]} transform matrix\n */\nexport const calcDimensionsMatrix = ({\n  scaleX = 1,\n  scaleY = 1,\n  flipX = false,\n  flipY = false,\n  skewX = 0 as TDegree,\n  skewY = 0 as TDegree,\n}: TScaleMatrixArgs) => {\n  let matrix = createScaleMatrix(\n    flipX ? -scaleX : scaleX,\n    flipY ? -scaleY : scaleY,\n  );\n  if (skewX) {\n    matrix = multiplyTransformMatrices(matrix, createSkewXMatrix(skewX), true);\n  }\n  if (skewY) {\n    matrix = multiplyTransformMatrices(matrix, createSkewYMatrix(skewY), true);\n  }\n  return matrix;\n};\n\n/**\n * Returns a transform matrix starting from an object of the same kind of\n * the one returned from qrDecompose, useful also if you want to calculate some\n * transformations from an object that is not enlived yet\n * Before changing this function look at: src/benchmarks/calcTransformMatrix.mjs\n * @param  {Object} options\n * @param  {Number} [options.angle]\n * @param  {Number} [options.scaleX]\n * @param  {Number} [options.scaleY]\n * @param  {Boolean} [options.flipX]\n * @param  {Boolean} [options.flipY]\n * @param  {Number} [options.skewX]\n * @param  {Number} [options.skewY]\n * @param  {Number} [options.translateX]\n * @param  {Number} [options.translateY]\n * @return {Number[]} transform matrix\n */\nexport const composeMatrix = (options: TComposeMatrixArgs): TMat2D => {\n  const { translateX = 0, translateY = 0, angle = 0 as TDegree } = options;\n  let matrix = createTranslateMatrix(translateX, translateY);\n  if (angle) {\n    matrix = multiplyTransformMatrices(matrix, createRotateMatrix({ angle }));\n  }\n  const scaleMatrix = calcDimensionsMatrix(options);\n  if (!isIdentityMatrix(scaleMatrix)) {\n    matrix = multiplyTransformMatrices(matrix, scaleMatrix);\n  }\n  return matrix;\n};\n","import { noop } from '../../constants';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport type {\n  Abortable,\n  Constructor,\n  TCrossOrigin,\n  TFiller,\n} from '../../typedefs';\nimport { createImage } from './dom';\nimport { classRegistry } from '../../ClassRegistry';\nimport type { BaseFilter } from '../../filters/BaseFilter';\nimport type { FabricObject as BaseFabricObject } from '../../shapes/Object/Object';\nimport { FabricError, SignalAbortedError } from '../internals/console';\nimport type { Shadow } from '../../Shadow';\n\nexport type LoadImageOptions = Abortable & {\n  /**\n   * cors value for the image loading, default to anonymous\n   */\n  crossOrigin?: TCrossOrigin;\n};\n\n/**\n * Loads image element from given url and resolve it, or catch.\n * @param {String} url URL representing an image\n * @param {LoadImageOptions} [options] image loading options\n * @returns {Promise<HTMLImageElement>} the loaded image.\n */\nexport const loadImage = (\n  url: string,\n  { signal, crossOrigin = null }: LoadImageOptions = {},\n) =>\n  new Promise<HTMLImageElement>(function (resolve, reject) {\n    if (signal && signal.aborted) {\n      return reject(new SignalAbortedError('loadImage'));\n    }\n    const img = createImage();\n    let abort: EventListenerOrEventListenerObject;\n    if (signal) {\n      abort = function (err: Event) {\n        img.src = '';\n        reject(err);\n      };\n      signal.addEventListener('abort', abort, { once: true });\n    }\n    const done = function () {\n      img.onload = img.onerror = null;\n      abort && signal?.removeEventListener('abort', abort);\n      resolve(img);\n    };\n    if (!url) {\n      done();\n      return;\n    }\n    img.onload = done;\n    img.onerror = function () {\n      abort && signal?.removeEventListener('abort', abort);\n      reject(new FabricError(`Error loading ${img.src}`));\n    };\n    crossOrigin && (img.crossOrigin = crossOrigin);\n    img.src = url;\n  });\n\nexport type EnlivenObjectOptions = Abortable & {\n  /**\n   * Method for further parsing of object elements,\n   * called after each fabric object created.\n   */\n  reviver?: <\n    T extends\n      | BaseFabricObject\n      | FabricObject\n      | BaseFilter<string>\n      | Shadow\n      | TFiller,\n  >(\n    serializedObj: Record<string, any>,\n    instance: T,\n  ) => void;\n};\n\n/**\n * @TODO type this correctly.\n * Creates corresponding fabric instances from their object representations\n * @param {Object[]} objects Objects to enliven\n * @param {EnlivenObjectOptions} [options]\n * @param {(serializedObj: object, instance: FabricObject) => any} [options.reviver] Method for further parsing of object elements,\n * called after each fabric object created.\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @returns {Promise<FabricObject[]>}\n */\nexport const enlivenObjects = <\n  T extends\n    | BaseFabricObject\n    | FabricObject\n    | BaseFilter<string>\n    | Shadow\n    | TFiller,\n>(\n  objects: any[],\n  { signal, reviver = noop }: EnlivenObjectOptions = {},\n) =>\n  new Promise<T[]>((resolve, reject) => {\n    const instances: T[] = [];\n    signal && signal.addEventListener('abort', reject, { once: true });\n    Promise.all(\n      objects.map((obj) =>\n        classRegistry\n          .getClass<\n            Constructor<T> & {\n              fromObject(options: any, context: Abortable): Promise<T>;\n            }\n          >(obj.type)\n          .fromObject(obj, { signal })\n          .then((fabricInstance) => {\n            reviver(obj, fabricInstance);\n            instances.push(fabricInstance);\n            return fabricInstance;\n          }),\n      ),\n    )\n      .then(resolve)\n      .catch((error) => {\n        // cleanup\n        instances.forEach((instance) => {\n          (instance as FabricObject).dispose &&\n            (instance as FabricObject).dispose();\n        });\n        reject(error);\n      })\n      .finally(() => {\n        signal && signal.removeEventListener('abort', reject);\n      });\n  });\n\n/**\n * Creates corresponding fabric instances residing in an object, e.g. `clipPath`\n * @param {Object} object with properties to enlive ( fill, stroke, clipPath, path )\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @returns {Promise<Record<string, FabricObject | TFiller | null>>} the input object with enlived values\n */\nexport const enlivenObjectEnlivables = <\n  R = Record<string, FabricObject | TFiller | null>,\n>(\n  serializedObject: any,\n  { signal }: Abortable = {},\n) =>\n  new Promise<R>((resolve, reject) => {\n    const instances: (FabricObject | TFiller | Shadow)[] = [];\n    signal && signal.addEventListener('abort', reject, { once: true });\n    // enlive every possible property\n    const promises = Object.values(serializedObject).map((value: any) => {\n      if (!value) {\n        return value;\n      }\n      /**\n       * clipPath or shadow or gradient or text on a path or a pattern,\n       * or the backgroundImage or overlayImage of canvas\n       * If we have a type and there is a classe registered for it, we enlive it.\n       * If there is no class registered for it we return the value as is\n       * */\n      if (value.type && classRegistry.has(value.type)) {\n        return enlivenObjects<FabricObject | Shadow | TFiller>([value], {\n          signal,\n        }).then(([enlived]) => {\n          instances.push(enlived);\n          return enlived;\n        });\n      }\n      return value;\n    });\n    const keys = Object.keys(serializedObject);\n    Promise.all(promises)\n      .then((enlived) => {\n        return enlived.reduce((acc, instance, index) => {\n          acc[keys[index]] = instance;\n          return acc;\n        }, {});\n      })\n      .then(resolve)\n      .catch((error) => {\n        // cleanup\n        instances.forEach((instance: any) => {\n          instance.dispose && instance.dispose();\n        });\n        reject(error);\n      })\n      .finally(() => {\n        signal && signal.removeEventListener('abort', reject);\n      });\n  });\n","/**\n * Populates an object with properties of another object\n * @param {Object} source Source object\n * @param {string[]} properties Properties names to include\n * @returns object populated with the picked keys\n */\nexport const pick = <T extends Record<string, any>>(\n  source: T,\n  keys: (keyof T)[] = [],\n) => {\n  return keys.reduce((o, key) => {\n    if (key in source) {\n      o[key] = source[key];\n    }\n    return o;\n  }, {} as Partial<T>);\n};\n\nexport const pickBy = <T extends Record<string, any>>(\n  source: T,\n  predicate: <K extends keyof T>(value: T[K], key: K, collection: T) => boolean,\n) => {\n  return (Object.keys(source) as (keyof T)[]).reduce((o, key) => {\n    if (predicate(source[key], key, source)) {\n      o[key] = source[key];\n    }\n    return o;\n  }, {} as Partial<T>);\n};\n","/**\n * Map of the 148 color names with HEX code\n * @see: https://www.w3.org/TR/css3-color/#svg-color\n */\nexport const ColorNameMap = {\n  aliceblue: '#F0F8FF',\n  antiquewhite: '#FAEBD7',\n  aqua: '#0FF',\n  aquamarine: '#7FFFD4',\n  azure: '#F0FFFF',\n  beige: '#F5F5DC',\n  bisque: '#FFE4C4',\n  black: '#000',\n  blanchedalmond: '#FFEBCD',\n  blue: '#00F',\n  blueviolet: '#8A2BE2',\n  brown: '#A52A2A',\n  burlywood: '#DEB887',\n  cadetblue: '#5F9EA0',\n  chartreuse: '#7FFF00',\n  chocolate: '#D2691E',\n  coral: '#FF7F50',\n  cornflowerblue: '#6495ED',\n  cornsilk: '#FFF8DC',\n  crimson: '#DC143C',\n  cyan: '#0FF',\n  darkblue: '#00008B',\n  darkcyan: '#008B8B',\n  darkgoldenrod: '#B8860B',\n  darkgray: '#A9A9A9',\n  darkgrey: '#A9A9A9',\n  darkgreen: '#006400',\n  darkkhaki: '#BDB76B',\n  darkmagenta: '#8B008B',\n  darkolivegreen: '#556B2F',\n  darkorange: '#FF8C00',\n  darkorchid: '#9932CC',\n  darkred: '#8B0000',\n  darksalmon: '#E9967A',\n  darkseagreen: '#8FBC8F',\n  darkslateblue: '#483D8B',\n  darkslategray: '#2F4F4F',\n  darkslategrey: '#2F4F4F',\n  darkturquoise: '#00CED1',\n  darkviolet: '#9400D3',\n  deeppink: '#FF1493',\n  deepskyblue: '#00BFFF',\n  dimgray: '#696969',\n  dimgrey: '#696969',\n  dodgerblue: '#1E90FF',\n  firebrick: '#B22222',\n  floralwhite: '#FFFAF0',\n  forestgreen: '#228B22',\n  fuchsia: '#F0F',\n  gainsboro: '#DCDCDC',\n  ghostwhite: '#F8F8FF',\n  gold: '#FFD700',\n  goldenrod: '#DAA520',\n  gray: '#808080',\n  grey: '#808080',\n  green: '#008000',\n  greenyellow: '#ADFF2F',\n  honeydew: '#F0FFF0',\n  hotpink: '#FF69B4',\n  indianred: '#CD5C5C',\n  indigo: '#4B0082',\n  ivory: '#FFFFF0',\n  khaki: '#F0E68C',\n  lavender: '#E6E6FA',\n  lavenderblush: '#FFF0F5',\n  lawngreen: '#7CFC00',\n  lemonchiffon: '#FFFACD',\n  lightblue: '#ADD8E6',\n  lightcoral: '#F08080',\n  lightcyan: '#E0FFFF',\n  lightgoldenrodyellow: '#FAFAD2',\n  lightgray: '#D3D3D3',\n  lightgrey: '#D3D3D3',\n  lightgreen: '#90EE90',\n  lightpink: '#FFB6C1',\n  lightsalmon: '#FFA07A',\n  lightseagreen: '#20B2AA',\n  lightskyblue: '#87CEFA',\n  lightslategray: '#789',\n  lightslategrey: '#789',\n  lightsteelblue: '#B0C4DE',\n  lightyellow: '#FFFFE0',\n  lime: '#0F0',\n  limegreen: '#32CD32',\n  linen: '#FAF0E6',\n  magenta: '#F0F',\n  maroon: '#800000',\n  mediumaquamarine: '#66CDAA',\n  mediumblue: '#0000CD',\n  mediumorchid: '#BA55D3',\n  mediumpurple: '#9370DB',\n  mediumseagreen: '#3CB371',\n  mediumslateblue: '#7B68EE',\n  mediumspringgreen: '#00FA9A',\n  mediumturquoise: '#48D1CC',\n  mediumvioletred: '#C71585',\n  midnightblue: '#191970',\n  mintcream: '#F5FFFA',\n  mistyrose: '#FFE4E1',\n  moccasin: '#FFE4B5',\n  navajowhite: '#FFDEAD',\n  navy: '#000080',\n  oldlace: '#FDF5E6',\n  olive: '#808000',\n  olivedrab: '#6B8E23',\n  orange: '#FFA500',\n  orangered: '#FF4500',\n  orchid: '#DA70D6',\n  palegoldenrod: '#EEE8AA',\n  palegreen: '#98FB98',\n  paleturquoise: '#AFEEEE',\n  palevioletred: '#DB7093',\n  papayawhip: '#FFEFD5',\n  peachpuff: '#FFDAB9',\n  peru: '#CD853F',\n  pink: '#FFC0CB',\n  plum: '#DDA0DD',\n  powderblue: '#B0E0E6',\n  purple: '#800080',\n  rebeccapurple: '#639',\n  red: '#F00',\n  rosybrown: '#BC8F8F',\n  royalblue: '#4169E1',\n  saddlebrown: '#8B4513',\n  salmon: '#FA8072',\n  sandybrown: '#F4A460',\n  seagreen: '#2E8B57',\n  seashell: '#FFF5EE',\n  sienna: '#A0522D',\n  silver: '#C0C0C0',\n  skyblue: '#87CEEB',\n  slateblue: '#6A5ACD',\n  slategray: '#708090',\n  slategrey: '#708090',\n  snow: '#FFFAFA',\n  springgreen: '#00FF7F',\n  steelblue: '#4682B4',\n  tan: '#D2B48C',\n  teal: '#008080',\n  thistle: '#D8BFD8',\n  tomato: '#FF6347',\n  turquoise: '#40E0D0',\n  violet: '#EE82EE',\n  wheat: '#F5DEB3',\n  white: '#FFF',\n  whitesmoke: '#F5F5F5',\n  yellow: '#FF0',\n  yellowgreen: '#9ACD32',\n};\n","import type { TRGBAColorSource } from './typedefs';\n\n/**\n * @param {Number} p\n * @param {Number} q\n * @param {Number} t\n * @return {Number}\n */\nexport const hue2rgb = (p: number, q: number, t: number): number => {\n  if (t < 0) {\n    t += 1;\n  }\n  if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n  if (t < 1 / 2) {\n    return q;\n  }\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n  return p;\n};\n\n/**\n * Adapted from {@link https://gist.github.com/mjackson/5311256 https://gist.github.com/mjackson}\n * @param {Number} r Red color value\n * @param {Number} g Green color value\n * @param {Number} b Blue color value\n * @param {Number} a Alpha color value pass through\n * @return {TRGBColorSource} Hsl color\n */\nexport const rgb2Hsl = (\n  r: number,\n  g: number,\n  b: number,\n  a: number,\n): TRGBAColorSource => {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  const maxValue = Math.max(r, g, b),\n    minValue = Math.min(r, g, b);\n\n  let h!: number, s: number;\n  const l = (maxValue + minValue) / 2;\n\n  if (maxValue === minValue) {\n    h = s = 0; // achromatic\n  } else {\n    const d = maxValue - minValue;\n    s = l > 0.5 ? d / (2 - maxValue - minValue) : d / (maxValue + minValue);\n    switch (maxValue) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n\n  return [Math.round(h * 360), Math.round(s * 100), Math.round(l * 100), a];\n};\n\nexport const fromAlphaToFloat = (value = '1') =>\n  parseFloat(value) / (value.endsWith('%') ? 100 : 1);\n\n/**\n * Convert a value in the inclusive range [0, 255] to hex\n */\nexport const hexify = (value: number) =>\n  Math.min(Math.round(value), 255).toString(16).toUpperCase().padStart(2, '0');\n\n/**\n * Calculate the grey average value for rgb and pass through alpha\n */\nexport const greyAverage = ([\n  r,\n  g,\n  b,\n  a = 1,\n]: TRGBAColorSource): TRGBAColorSource => {\n  const avg = Math.round(r * 0.3 + g * 0.59 + b * 0.11);\n  return [avg, avg, avg, a];\n};\n","import { radiansToDegrees } from '../util/misc/radiansDegreesConversion';\nimport { ColorNameMap } from './color_map';\nimport { reHSLa, reHex, reRGBa } from './constants';\nimport type { TRGBAColorSource, TColorArg } from './typedefs';\nimport {\n  hue2rgb,\n  hexify,\n  rgb2Hsl,\n  fromAlphaToFloat,\n  greyAverage,\n} from './util';\n\n/**\n * @class Color common color operations\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors colors}\n */\nexport class Color {\n  private declare _source: TRGBAColorSource;\n  isUnrecognised = false;\n\n  /**\n   *\n   * @param {string} [color] optional in hex or rgb(a) or hsl format or from known color list\n   */\n  constructor(color?: TColorArg) {\n    if (!color) {\n      // we default to black as canvas does\n      this.setSource([0, 0, 0, 1]);\n    } else if (color instanceof Color) {\n      this.setSource([...color._source]);\n    } else if (Array.isArray(color)) {\n      const [r, g, b, a = 1] = color;\n      this.setSource([r, g, b, a]);\n    } else {\n      this.setSource(this._tryParsingColor(color));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} [color] Color value to parse\n   * @returns {TRGBAColorSource}\n   */\n  protected _tryParsingColor(color: string) {\n    color = color.toLowerCase();\n    if (color in ColorNameMap) {\n      color = ColorNameMap[color as keyof typeof ColorNameMap];\n    }\n    return color === 'transparent'\n      ? ([255, 255, 255, 0] as TRGBAColorSource)\n      : Color.sourceFromHex(color) ||\n          Color.sourceFromRgb(color) ||\n          Color.sourceFromHsl(color) ||\n          // color is not recognized\n          // we default to black as canvas does\n          // eslint-disable-next-line no-constant-binary-expression\n          ((this.isUnrecognised = true) && ([0, 0, 0, 1] as TRGBAColorSource));\n  }\n\n  /**\n   * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n   * @return {TRGBAColorSource}\n   */\n  getSource() {\n    return this._source;\n  }\n\n  /**\n   * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n   * @param {TRGBAColorSource} source\n   */\n  setSource(source: TRGBAColorSource) {\n    this._source = source;\n  }\n\n  /**\n   * Returns color representation in RGB format\n   * @return {String} ex: rgb(0-255,0-255,0-255)\n   */\n  toRgb() {\n    const [r, g, b] = this.getSource();\n    return `rgb(${r},${g},${b})`;\n  }\n\n  /**\n   * Returns color representation in RGBA format\n   * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n   */\n  toRgba() {\n    return `rgba(${this.getSource().join(',')})`;\n  }\n\n  /**\n   * Returns color representation in HSL format\n   * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n   */\n  toHsl() {\n    const [h, s, l] = rgb2Hsl(...this.getSource());\n    return `hsl(${h},${s}%,${l}%)`;\n  }\n\n  /**\n   * Returns color representation in HSLA format\n   * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n   */\n  toHsla() {\n    const [h, s, l, a] = rgb2Hsl(...this.getSource());\n    return `hsla(${h},${s}%,${l}%,${a})`;\n  }\n\n  /**\n   * Returns color representation in HEX format\n   * @return {String} ex: FF5555\n   */\n  toHex() {\n    const fullHex = this.toHexa();\n    return fullHex.slice(0, 6);\n  }\n\n  /**\n   * Returns color representation in HEXA format\n   * @return {String} ex: FF5555CC\n   */\n  toHexa() {\n    const [r, g, b, a] = this.getSource();\n    return `${hexify(r)}${hexify(g)}${hexify(b)}${hexify(Math.round(a * 255))}`;\n  }\n\n  /**\n   * Gets value of alpha channel for this color\n   * @return {Number} 0-1\n   */\n  getAlpha() {\n    return this.getSource()[3];\n  }\n\n  /**\n   * Sets value of alpha channel for this color\n   * @param {Number} alpha Alpha value 0-1\n   * @return {Color} thisArg\n   */\n  setAlpha(alpha: number) {\n    this._source[3] = alpha;\n    return this;\n  }\n\n  /**\n   * Transforms color to its grayscale representation\n   * @return {Color} thisArg\n   */\n  toGrayscale() {\n    this.setSource(greyAverage(this.getSource()));\n    return this;\n  }\n\n  /**\n   * Transforms color to its black and white representation\n   * @param {Number} threshold\n   * @return {Color} thisArg\n   */\n  toBlackWhite(threshold: number) {\n    const [average, , , a] = greyAverage(this.getSource()),\n      bOrW = average < (threshold || 127) ? 0 : 255;\n    this.setSource([bOrW, bOrW, bOrW, a]);\n    return this;\n  }\n\n  /**\n   * Overlays color with another color\n   * @param {String|Color} otherColor\n   * @return {Color} thisArg\n   */\n  overlayWith(otherColor: string | Color) {\n    if (!(otherColor instanceof Color)) {\n      otherColor = new Color(otherColor);\n    }\n\n    const source = this.getSource(),\n      otherAlpha = 0.5,\n      otherSource = otherColor.getSource(),\n      [R, G, B] = source.map((value, index) =>\n        Math.round(value * (1 - otherAlpha) + otherSource[index] * otherAlpha),\n      );\n\n    this.setSource([R, G, B, source[3]]);\n    return this;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {Color}\n   */\n  static fromRgb(color: string): Color {\n    return Color.fromRgba(color);\n  }\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf Color\n   * @param {String} color\n   * @return {Color}\n   */\n  static fromRgba(color: string): Color {\n    return new Color(Color.sourceFromRgb(color));\n  }\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {TRGBAColorSource | undefined} source\n   */\n  static sourceFromRgb(color: string): TRGBAColorSource | undefined {\n    const match = color.match(reRGBa());\n    if (match) {\n      const [r, g, b] = match.slice(1, 4).map((value) => {\n        const parsedValue = parseFloat(value);\n        return value.endsWith('%')\n          ? Math.round(parsedValue * 2.55)\n          : parsedValue;\n      });\n      return [r, g, b, fromAlphaToFloat(match[4])];\n    }\n  }\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf Color\n   * @return {Color}\n   */\n  static fromHsl(color: string): Color {\n    return Color.fromHsla(color);\n  }\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf Color\n   * @param {String} color\n   * @return {Color}\n   */\n  static fromHsla(color: string): Color {\n    return new Color(Color.sourceFromHsl(color));\n  }\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {TRGBAColorSource | undefined} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  static sourceFromHsl(color: string): TRGBAColorSource | undefined {\n    const match = color.match(reHSLa());\n    if (!match) {\n      return;\n    }\n    const match1degrees = Color.parseAngletoDegrees(match[1]);\n\n    const h = (((match1degrees % 360) + 360) % 360) / 360,\n      s = parseFloat(match[2]) / 100,\n      l = parseFloat(match[3]) / 100;\n    let r: number, g: number, b: number;\n\n    if (s === 0) {\n      r = g = b = l;\n    } else {\n      const q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n        p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      fromAlphaToFloat(match[4]),\n    ];\n  }\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf Color\n   * @param {String} color Color value ex: FF5555\n   * @return {Color}\n   */\n  static fromHex(color: string): Color {\n    return new Color(Color.sourceFromHex(color));\n  }\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {TRGBAColorSource | undefined} source\n   */\n  static sourceFromHex(color: string): TRGBAColorSource | undefined {\n    if (color.match(reHex())) {\n      const value = color.slice(color.indexOf('#') + 1),\n        isShortNotation = value.length <= 4;\n      let expandedValue: string[];\n      if (isShortNotation) {\n        expandedValue = value.split('').map((hex) => hex + hex);\n      } else {\n        expandedValue = value.match(/.{2}/g)!;\n      }\n      const [r, g, b, a = 255] = expandedValue.map((hexCouple) =>\n        parseInt(hexCouple, 16),\n      );\n      return [r, g, b, a / 255];\n    }\n  }\n\n  /**\n   * Converts a string that could be any angle notation (50deg, 0.5turn, 2rad)\n   * into degrees without the 'deg' suffix\n   * @static\n   * @memberOf Color\n   * @param {String} value ex: 0deg, 0.5turn, 2rad\n   * @return {Number} number in degrees or NaN if inputs are invalid\n   */\n  static parseAngletoDegrees(value: string): number {\n    const lowercase = value.toLowerCase();\n    const numeric = parseFloat(lowercase);\n\n    if (lowercase.includes('rad')) {\n      return radiansToDegrees(numeric);\n    }\n\n    if (lowercase.includes('turn')) {\n      return numeric * 360;\n    }\n\n    // Value is probably just a number already in degrees eg '50'\n    return numeric;\n  }\n}\n","/**\n * Regex matching color in RGB or RGBA formats (ex: `rgb(0, 0, 0)`, `rgba(255, 100, 10, 0.5)`, `rgba( 255 , 100 , 10 , 0.5 )`, `rgb(1,1,1)`, `rgba(100%, 60%, 10%, 0.5)`)\n * Also matching rgba(r g b / a) as per new specs\n * https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/rgb\n * Formal syntax at the time of writing:\n * <rgb()> =\n *  rgb( [ <percentage> | none ]{3} [ / [ <alpha-value> | none ] ]? )  |\n *  rgb( [ <number> | none ]{3} [ / [ <alpha-value> | none ] ]? )\n * <alpha-value> = <number> | <percentage>\n *\n * For learners this is how you can read this regex\n * Regular expression for matching an rgba or rgb CSS color value\n *\n * /^          # Beginning of the string\n * rgba?       # \"rgb\" or \"rgba\"\n * \\(\\s*       # Opening parenthesis and optional whitespace\n * (\\d{0,3}    # 0 to three digits R channel\n *  (?:\\.\\d+)? # Optional decimal with one or more digits\n * )           # End of capturing group for the first color component\n * %?          # Optional percent sign after the first color component\n * \\s*         # Optional whitespace\n * [\\s|,]      # Separator between color components can be a space or comma\n * \\s*         # Optional whitespace\n * (\\d{0,3}    # 0 to three digits G channel\n *  (?:\\.\\d+)? # Optional decimal with one or more digits\n * )           # End of capturing group for the second color component\n * %?          # Optional percent sign after the second color component\n * \\s*         # Optional whitespace\n * [\\s|,]      # Separator between color components can be a space or comma\n * \\s*         # Optional whitespace\n * (\\d{0,3}    # 0 to three digits B channel\n *  (?:\\.\\d+)? # Optional decimal with one or more digits\n * )           # End of capturing group for the third color component\n * %?          # Optional percent sign after the third color component\n * \\s*         # Optional whitespace\n * (?:         # Beginning of non-capturing group for alpha value\n *  \\s*        # Optional whitespace\n *  [,/]       # Comma or slash separator for alpha value\n *  \\s*        # Optional whitespace\n *  (\\d{0,3}   # Zero to three digits\n *    (?:\\.\\d+)? # Optional decimal with one or more digits\n *  )          # End of capturing group for alpha value\n *  %?         # Optional percent sign after alpha value\n *  \\s*        # Optional whitespace\n * )?          # End of non-capturing group for alpha value (optional)\n * \\)          # Closing parenthesis\n * $           # End of the string\n *\n * The alpha channel can be in the format 0.4 .7 or 1 or 73%\n *\n * WARNING this regex doesn't fail on off spec colors. it matches everything that could be a color.\n * So the spec does not allow for `rgba(30 , 45%  35, 49%)` but this will work anyways for us\n */\nexport const reRGBa = () =>\n  /^rgba?\\(\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*(?:\\s*[,/]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*)?\\)$/i;\n\n/**\n * Regex matching color in HSL or HSLA formats (ex: hsl(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n * Also matching rgba(r g b / a) as per new specs\n * https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/hsl\n * Formal syntax at the time of writing:\n * <hsl()> =\n *   hsl( [ <hue> | none ] [ <percentage> | none ] [ <percentage> | none ] [ / [ <alpha-value> | none ] ]? )\n *\n * <hue> =\n *   <number>  |\n *   <angle>\n *\n * <alpha-value> =\n *   <number>      |\n *   <percentage>\n *\n * For learners this is how you can read this regex\n * Regular expression for matching an hsla or hsl CSS color value\n *\n * /^hsla?\\(         // Matches the beginning of the string and the opening parenthesis of \"hsl\" or \"hsla\"\n * \\s*               // Matches any whitespace characters (space, tab, etc.) zero or more times\n * (\\d{0,3}          // Hue: 0 to three digits - start capture in a group\n * (?:\\.\\d+)?        // Hue: Optional (non capture group) decimal with one or more digits.\n * (?:deg|turn|rad)? // Hue: Optionally include suffix deg or turn or rad\n * )                 // Hue: End capture group\n * \\s*               // Matches any whitespace characters zero or more times\n * [\\s|,]            // Matches a space, tab or comma\n * \\s*               // Matches any whitespace characters zero or more times\n * (\\d{0,3}          // Saturation: 0 to three digits - start capture in a group\n * (?:\\.\\d+)?        // Saturation: Optional decimal with one or more digits in a non-capturing group\n * %?)               // Saturation: match optional % character and end capture group\n * \\s*               // Matches any whitespace characters zero or more times\n * [\\s|,]            // Matches a space, tab or comma\n * \\s*               // Matches any whitespace characters zero or more times\n * (\\d{0,3}          // Lightness: 0 to three digits - start capture in a group\n * (?:\\.\\d+)?        // Lightness: Optional decimal with one or more digits in a non-capturing group\n * %?)                // Lightness: match % character and end capture group\n * \\s*               // Matches any whitespace characters zero or more times\n * (?:               // Alpha: Begins a non-capturing group for the alpha value\n *   \\s*             // Matches any whitespace characters zero or more times\n *   [,/]            // Matches a comma or forward slash\n *   \\s*             // Matches any whitespace characters zero or more times\n *   (\\d*(?:\\.\\d+)?%?) // Matches zero or more digits, optionally followed by a decimal point and one or more digits, followed by an optional percentage sign and captures it in a group\n *   \\s*             // Matches any whitespace characters zero or more times\n * )?                // Makes the alpha value group optional\n * \\)                // Matches the closing parenthesis\n * $/i               // Matches the end of the string and sets the regular expression to case-insensitive mode\n *\n * WARNING this regex doesn't fail on off spec colors. It matches everything that could be a color.\n * So the spec does not allow `hsl(30 , 45%  35, 49%)` but this will work anyways for us.\n */\nexport const reHSLa = () =>\n  /^hsla?\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?(?:deg|turn|rad)?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*(?:\\s*[,/]\\s*(\\d*(?:\\.\\d+)?%?)\\s*)?\\)$/i;\n\n/**\n * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n */\nexport const reHex = () => /^#?(([0-9a-f]){3,4}|([0-9a-f]{2}){3,4})$/i;\n","/**\n * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n * @param {number|string} number number to operate on\n * @param {number} fractionDigits number of fraction digits to \"leave\"\n * @return {number}\n */\nexport const toFixed = (number: number | string, fractionDigits: number) =>\n  parseFloat(Number(number).toFixed(fractionDigits));\n","import { Color } from '../../color/Color';\nimport { config } from '../../config';\nimport { DEFAULT_SVG_FONT_SIZE, FILL, NONE } from '../../constants';\nimport type {\n  TBBox,\n  TMat2D,\n  SVGElementName,\n  SupportedSVGUnit,\n} from '../../typedefs';\nimport { toFixed } from './toFixed';\n\n/**\n * Returns array of attributes for given svg that fabric parses\n * @param {SVGElementName} type Type of svg element (eg. 'circle')\n * @return {Array} string names of supported attributes\n */\nexport const getSvgAttributes = (type: SVGElementName) => {\n  const commonAttributes = ['instantiated_by_use', 'style', 'id', 'class'];\n  switch (type) {\n    case 'linearGradient':\n      return commonAttributes.concat([\n        'x1',\n        'y1',\n        'x2',\n        'y2',\n        'gradientUnits',\n        'gradientTransform',\n      ]);\n    case 'radialGradient':\n      return commonAttributes.concat([\n        'gradientUnits',\n        'gradientTransform',\n        'cx',\n        'cy',\n        'r',\n        'fx',\n        'fy',\n        'fr',\n      ]);\n    case 'stop':\n      return commonAttributes.concat(['offset', 'stop-color', 'stop-opacity']);\n  }\n  return commonAttributes;\n};\n\n/**\n * Converts from attribute value to pixel value if applicable.\n * Returns converted pixels or original value not converted.\n * @param {string} value number to operate on\n * @param {number} fontSize\n * @return {number}\n */\nexport const parseUnit = (value: string, fontSize = DEFAULT_SVG_FONT_SIZE) => {\n  const unit = /\\D{0,2}$/.exec(value),\n    number = parseFloat(value);\n  const dpi = config.DPI;\n  switch (unit?.[0] as SupportedSVGUnit) {\n    case 'mm':\n      return (number * dpi) / 25.4;\n\n    case 'cm':\n      return (number * dpi) / 2.54;\n\n    case 'in':\n      return number * dpi;\n\n    case 'pt':\n      return (number * dpi) / 72; // or * 4 / 3\n\n    case 'pc':\n      return ((number * dpi) / 72) * 12; // or * 16\n\n    case 'em':\n      return number * fontSize;\n\n    default:\n      return number;\n  }\n};\n\nexport type MeetOrSlice = 'meet' | 'slice';\n\nexport type MinMidMax = 'Min' | 'Mid' | 'Max' | 'none';\n\nexport type TPreserveArParsed = {\n  meetOrSlice: MeetOrSlice;\n  alignX: MinMidMax;\n  alignY: MinMidMax;\n};\n\n// align can be either none or undefined or a combination of mid/max\nconst parseAlign = (align: string): MinMidMax[] => {\n  //divide align in alignX and alignY\n  if (align && align !== NONE) {\n    return [align.slice(1, 4) as MinMidMax, align.slice(5, 8) as MinMidMax];\n  } else if (align === NONE) {\n    return [align, align];\n  }\n  return ['Mid', 'Mid'];\n};\n\n/**\n * Parse preserveAspectRatio attribute from element\n * https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n * @param {string} attribute to be parsed\n * @return {Object} an object containing align and meetOrSlice attribute\n */\nexport const parsePreserveAspectRatioAttribute = (\n  attribute: string,\n): TPreserveArParsed => {\n  const [firstPart, secondPart] = attribute.trim().split(' ') as [\n    MinMidMax,\n    MeetOrSlice | undefined,\n  ];\n  const [alignX, alignY] = parseAlign(firstPart);\n  return {\n    meetOrSlice: secondPart || 'meet',\n    alignX,\n    alignY,\n  };\n};\n\n/**\n * given an array of 6 number returns something like `\"matrix(...numbers)\"`\n * @param {TMat2D} transform an array with 6 numbers\n * @return {String} transform matrix for svg\n */\nexport const matrixToSVG = (transform: TMat2D) =>\n  'matrix(' +\n  transform\n    .map((value) => toFixed(value, config.NUM_FRACTION_DIGITS))\n    .join(' ') +\n  ')';\n\n/**\n * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n * @param prop\n * @param value\n * @param {boolean} inlineStyle The default is inline style, the separator used is \":\", The other is \"=\"\n * @returns\n */\nexport const colorPropToSVG = (\n  prop: string,\n  value?: any,\n  inlineStyle = true,\n) => {\n  let colorValue;\n  let opacityValue;\n  if (!value) {\n    colorValue = 'none';\n  } else if (value.toLive) {\n    colorValue = `url(#SVGID_${value.id})`;\n  } else {\n    const color = new Color(value),\n      opacity = color.getAlpha();\n\n    colorValue = color.toRgb();\n    if (opacity !== 1) {\n      opacityValue = opacity.toString();\n    }\n  }\n  if (inlineStyle) {\n    return `${prop}: ${colorValue}; ${\n      opacityValue ? `${prop}-opacity: ${opacityValue}; ` : ''\n    }`;\n  } else {\n    return `${prop}=\"${colorValue}\" ${\n      opacityValue ? `${prop}-opacity=\"${opacityValue}\" ` : ''\n    }`;\n  }\n};\n\nexport const createSVGRect = (\n  color: string,\n  { left, top, width, height }: TBBox,\n  precision = config.NUM_FRACTION_DIGITS,\n) => {\n  const svgColor = colorPropToSVG(FILL, color, false);\n  const [x, y, w, h] = [left, top, width, height].map((value) =>\n    toFixed(value, precision),\n  );\n  return `<rect ${svgColor} x=\"${x}\" y=\"${y}\" width=\"${w}\" height=\"${h}\"></rect>`;\n};\n","import type { FabricObject } from '../shapes/Object/Object';\nimport type { TFiller } from '../typedefs';\nimport type { FabricText } from '../shapes/Text/Text';\nimport type { Pattern } from '../Pattern';\nimport type { Path } from '../shapes/Path';\nimport type { ActiveSelection } from '../shapes/ActiveSelection';\n\nexport const isFiller = (\n  filler: TFiller | string | null,\n): filler is TFiller => {\n  return !!filler && (filler as TFiller).toLive !== undefined;\n};\n\nexport const isSerializableFiller = (\n  filler: TFiller | string | null,\n): filler is TFiller => {\n  return !!filler && typeof (filler as TFiller).toObject === 'function';\n};\n\nexport const isPattern = (filler: TFiller): filler is Pattern => {\n  return (\n    !!filler && (filler as Pattern).offsetX !== undefined && 'source' in filler\n  );\n};\n\nexport const isTextObject = (\n  fabricObject?: FabricObject,\n): fabricObject is FabricText => {\n  return (\n    !!fabricObject &&\n    typeof (fabricObject as FabricText)._renderText === 'function'\n  );\n};\n\nexport const isPath = (fabricObject?: FabricObject): fabricObject is Path => {\n  // we could use instanceof but that would mean pulling in Text code for a simple check\n  // @todo discuss what to do and how to do\n  return (\n    !!fabricObject &&\n    typeof (fabricObject as Path)._renderPathCommands === 'function'\n  );\n};\n\nexport const isActiveSelection = (\n  fabricObject?: FabricObject,\n): fabricObject is ActiveSelection =>\n  !!fabricObject && 'multiSelectionStacking' in fabricObject;\n","/**\n * Returns element scroll offsets\n * @param {HTMLElement} element Element to operate on\n * @return {Object} Object with left/top values\n */\nexport function getScrollLeftTop(element: HTMLElement | null) {\n  const doc = element && getDocumentFromElement(element);\n  let left = 0,\n    top = 0;\n  if (!element || !doc) {\n    return { left, top };\n  }\n  let elementLoop: HTMLElement | Document | ShadowRoot = element;\n  const docElement = doc.documentElement,\n    body = doc.body || {\n      scrollLeft: 0,\n      scrollTop: 0,\n    };\n  // While loop checks (and then sets element to) .parentNode OR .host\n  //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n  //  but the .parentNode of a root ShadowDOM node will always be null, instead\n  //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n  while (\n    elementLoop &&\n    (elementLoop.parentNode || (elementLoop as unknown as ShadowRoot).host)\n  ) {\n    elementLoop = (elementLoop.parentNode ||\n      (elementLoop as unknown as ShadowRoot).host) as\n      | HTMLElement\n      | Document\n      | ShadowRoot;\n    if (elementLoop === doc) {\n      left = body.scrollLeft || docElement.scrollLeft || 0;\n      top = body.scrollTop || docElement.scrollTop || 0;\n    } else {\n      left += (elementLoop as HTMLElement).scrollLeft || 0;\n      top += (elementLoop as HTMLElement).scrollTop || 0;\n    }\n\n    if (\n      elementLoop.nodeType === 1 &&\n      (elementLoop as HTMLElement).style.position === 'fixed'\n    ) {\n      break;\n    }\n  }\n\n  return { left, top };\n}\n\nexport const getDocumentFromElement = (el: HTMLElement) =>\n  el.ownerDocument || null;\n\nexport const getWindowFromElement = (el: HTMLElement) =>\n  el.ownerDocument?.defaultView || null;\n","import { NONE } from '../../constants';\nimport type { TSize } from '../../typedefs';\nimport {\n  getDocumentFromElement,\n  getWindowFromElement,\n  getScrollLeftTop,\n} from '../../util/dom_misc';\n\nexport const setCanvasDimensions = (\n  el: HTMLCanvasElement,\n  ctx: CanvasRenderingContext2D,\n  { width, height }: TSize,\n  retinaScaling = 1,\n) => {\n  el.width = width;\n  el.height = height;\n  if (retinaScaling > 1) {\n    el.setAttribute('width', (width * retinaScaling).toString());\n    el.setAttribute('height', (height * retinaScaling).toString());\n    ctx.scale(retinaScaling, retinaScaling);\n  }\n};\n\nexport type CSSDimensions = {\n  width: number | string;\n  height: number | string;\n};\n\nexport const setCSSDimensions = (\n  el: HTMLElement,\n  { width, height }: Partial<CSSDimensions>,\n) => {\n  width && (el.style.width = typeof width === 'number' ? `${width}px` : width);\n  height &&\n    (el.style.height = typeof height === 'number' ? `${height}px` : height);\n};\n\n/**\n * Returns offset for a given element\n * @param {HTMLElement} element Element to get offset for\n * @return {Object} Object with \"left\" and \"top\" properties\n */\nexport function getElementOffset(element: HTMLElement) {\n  const doc = element && getDocumentFromElement(element),\n    offset = { left: 0, top: 0 };\n\n  if (!doc) {\n    return offset;\n  }\n  const elemStyle: CSSStyleDeclaration =\n    getWindowFromElement(element)?.getComputedStyle(element, null) ||\n    ({} as CSSStyleDeclaration);\n  offset.left += parseInt(elemStyle.borderLeftWidth, 10) || 0;\n  offset.top += parseInt(elemStyle.borderTopWidth, 10) || 0;\n  offset.left += parseInt(elemStyle.paddingLeft, 10) || 0;\n  offset.top += parseInt(elemStyle.paddingTop, 10) || 0;\n\n  let box = { left: 0, top: 0 };\n\n  const docElem = doc.documentElement;\n  if (typeof element.getBoundingClientRect !== 'undefined') {\n    box = element.getBoundingClientRect();\n  }\n\n  const scrollLeftTop = getScrollLeftTop(element);\n\n  return {\n    left:\n      box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n    top: box.top + scrollLeftTop.top - (docElem.clientTop || 0) + offset.top,\n  };\n}\n\n/**\n * Makes element unselectable\n * @param {HTMLElement} element Element to make unselectable\n * @return {HTMLElement} Element that was passed in\n */\nexport function makeElementUnselectable(element: HTMLElement) {\n  if (typeof element.onselectstart !== 'undefined') {\n    element.onselectstart = () => false;\n  }\n  element.style.userSelect = NONE;\n  return element;\n}\n","import { getEnv, getFabricDocument } from '../../env';\nimport type { TSize } from '../../typedefs';\nimport type { CSSDimensions } from './util';\nimport { setCSSDimensions, getElementOffset } from './util';\nimport { createCanvasElement, isHTMLCanvas } from '../../util/misc/dom';\nimport { setCanvasDimensions } from './util';\nimport { FabricError } from '../../util/internals/console';\n\nexport type CanvasItem = {\n  el: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n};\n\nexport class StaticCanvasDOMManager {\n  /**\n   * Keeps a copy of the canvas style before setting retina scaling and other potions\n   * in order to return it to original state on dispose\n   * @type string\n   */\n  private _originalCanvasStyle?: string;\n\n  lower: CanvasItem;\n\n  constructor(arg0?: string | HTMLCanvasElement) {\n    const el = this.createLowerCanvas(arg0);\n    this.lower = { el, ctx: el.getContext('2d')! };\n  }\n\n  protected createLowerCanvas(arg0?: HTMLCanvasElement | string) {\n    // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n    const el = isHTMLCanvas(arg0)\n      ? arg0\n      : (arg0 &&\n          (getFabricDocument().getElementById(arg0) as HTMLCanvasElement)) ||\n        createCanvasElement();\n    if (el.hasAttribute('data-fabric')) {\n      throw new FabricError(\n        'Trying to initialize a canvas that has already been initialized. Did you forget to dispose the canvas?',\n      );\n    }\n    this._originalCanvasStyle = el.style.cssText;\n    el.setAttribute('data-fabric', 'main');\n    el.classList.add('lower-canvas');\n    return el;\n  }\n\n  cleanupDOM({ width, height }: TSize) {\n    const { el } = this.lower;\n    // restore canvas style and attributes\n    el.classList.remove('lower-canvas');\n    el.removeAttribute('data-fabric');\n    // restore canvas size to original size in case retina scaling was applied\n    el.setAttribute('width', `${width}`);\n    el.setAttribute('height', `${height}`);\n    el.style.cssText = this._originalCanvasStyle || '';\n    this._originalCanvasStyle = undefined;\n  }\n\n  setDimensions(size: TSize, retinaScaling: number) {\n    const { el, ctx } = this.lower;\n    setCanvasDimensions(el, ctx, size, retinaScaling);\n  }\n\n  setCSSDimensions(size: Partial<CSSDimensions>) {\n    setCSSDimensions(this.lower.el, size);\n  }\n\n  /**\n   * Calculates canvas element offset relative to the document\n   */\n  calcOffset() {\n    return getElementOffset(this.lower.el);\n  }\n\n  dispose() {\n    getEnv().dispose(this.lower.el);\n    // @ts-expect-error disposing\n    delete this.lower;\n  }\n}\n","import { iMatrix } from '../constants';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TFiller, TMat2D, TOptions } from '../typedefs';\n\ninterface CanvasDrawableOptions {\n  /**\n   * if set to false background image is not affected by viewport transform\n   * @since 1.6.3\n   * @type Boolean\n   * @todo we should really find a different way to do this\n   * @default\n   */\n  backgroundVpt: boolean;\n\n  /**\n   * Background color of canvas instance.\n   * @type {(String|TFiller)}\n   * @default\n   */\n  backgroundColor: TFiller | string;\n\n  /**\n   * Background image of canvas instance.\n   * since 2.4.0 image caching is active, please when putting an image as background, add to the\n   * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n   * vale. As an alternative you can disable image objectCaching\n   * @type FabricObject\n   * @default\n   */\n  backgroundImage?: FabricObject;\n\n  /**\n   * if set to false overlay image is not affected by viewport transform\n   * @since 1.6.3\n   * @type Boolean\n   * @todo we should really find a different way to do this\n   * @default\n   */\n  overlayVpt: boolean;\n\n  /**\n   * Overlay color of canvas instance.\n   * @since 1.3.9\n   * @type {(String|TFiller)}\n   * @default\n   */\n  overlayColor: TFiller | string;\n\n  /**\n   * Overlay image of canvas instance.\n   * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\n   * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n   * vale. As an alternative you can disable image objectCaching\n   * @type FabricObject\n   * @default\n   */\n  overlayImage?: FabricObject;\n}\n\ninterface CanvasRenderingOptions {\n  /**\n   * Indicates whether {@link StaticCanvas#add}, {@link StaticCanvas#insertAt} and {@link StaticCanvas#remove},\n   * {@link StaticCanvas#moveTo}, {@link StaticCanvas#clear} and many more, should also re-render canvas.\n   * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n   * since the renders are queued and executed one per frame.\n   * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n   * Left default to true to do not break documentation and old app, fiddles.\n   * @type Boolean\n   * @default\n   */\n  renderOnAddRemove: boolean;\n\n  /**\n   * Based on vptCoords and object.aCoords, skip rendering of objects that\n   * are not included in current viewport.\n   * May greatly help in applications with crowded canvas and use of zoom/pan\n   * If One of the corner of the bounding box of the object is on the canvas\n   * the objects get rendered.\n   * @type Boolean\n   * @default true\n   */\n  skipOffscreen: boolean;\n\n  /**\n   * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n   * @type Boolean\n   * @default\n   */\n  enableRetinaScaling: boolean;\n\n  /**\n   * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n   * @type Boolean\n   * @default\n   */\n  imageSmoothingEnabled: boolean;\n\n  /**\n   * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n   * the clipPath object gets used when the canvas has rendered, and the context is placed in the\n   * top left corner of the canvas.\n   * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\n   * @type FabricObject\n   */\n  clipPath?: FabricObject;\n}\n\nexport interface CanvasExportOptions {\n  /**\n   * Indicates whether toObject/toDatalessObject should include default values\n   * if set to false, takes precedence over the object value.\n   * @type Boolean\n   * @default\n   */\n  includeDefaultValues: boolean;\n\n  /**\n   * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n   * a zoomed canvas will then produce zoomed SVG output.\n   * @type Boolean\n   * @default\n   */\n  svgViewportTransformation: boolean;\n}\n\nexport interface StaticCanvasOptions\n  extends CanvasDrawableOptions,\n    CanvasRenderingOptions,\n    CanvasExportOptions {\n  /**\n   * Width in virtual/logical pixels of the canvas.\n   * The canvas can be larger than width if retina scaling is active\n   * @type number\n   */\n  width: number;\n\n  /**\n   * Height in virtual/logical pixels of the canvas.\n   * The canvas can be taller than width if retina scaling is active\n   * @type height\n   */\n  height: number;\n\n  /**\n   * Indicates whether object controls (borders/controls) are rendered above overlay image\n   * @type Boolean\n   * @default\n   *\n   * @todo move to Canvas\n   */\n  controlsAboveOverlay: boolean;\n\n  /**\n   * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n   * It gives PRIORITY to DOM scrolling, it doesn't make it always possible.\n   * If is true, when using a touch event on the canvas, the canvas will scroll if scroll is possible.\n   * If we are in drawing mode or if we are selecting an object the canvas preventDefault and so it won't scroll\n   * @type Boolean\n   * @default\n   *\n   * @todo move to Canvas\n   */\n  allowTouchScrolling: boolean;\n\n  /**\n   * The transformation (a Canvas 2D API transform matrix) which focuses the viewport\n   * @type Array\n   * @example <caption>Default transform</caption>\n   * canvas.viewportTransform = [1, 0, 0, 1, 0, 0];\n   * @example <caption>Scale by 70% and translate toward bottom-right by 50, without skewing</caption>\n   * canvas.viewportTransform = [0.7, 0, 0, 0.7, 50, 50];\n   * @default\n   */\n  viewportTransform: TMat2D;\n}\n\nexport const staticCanvasDefaults: TOptions<StaticCanvasOptions> = {\n  backgroundVpt: true,\n  backgroundColor: '',\n  overlayVpt: true,\n  overlayColor: '',\n\n  includeDefaultValues: true,\n  svgViewportTransformation: true,\n\n  renderOnAddRemove: true,\n  skipOffscreen: true,\n  enableRetinaScaling: true,\n  imageSmoothingEnabled: true,\n\n  /**\n   * @todo move to Canvas\n   */\n  controlsAboveOverlay: false,\n  /**\n   * @todo move to Canvas\n   */\n  allowTouchScrolling: false,\n\n  viewportTransform: [...iMatrix],\n};\n","import { config } from '../config';\nimport { CENTER, VERSION } from '../constants';\nimport type { CanvasEvents, StaticCanvasEvents } from '../EventTypeDefs';\nimport type { Gradient } from '../gradient/Gradient';\nimport { createCollectionMixin, isCollection } from '../Collection';\nimport { CommonMethods } from '../CommonMethods';\nimport type { Pattern } from '../Pattern';\nimport { Point } from '../Point';\nimport type { TCachedFabricObject } from '../shapes/Object/Object';\nimport type {\n  Abortable,\n  Constructor,\n  TCornerPoint,\n  TDataUrlOptions,\n  TFiller,\n  TMat2D,\n  TSize,\n  TSVGReviver,\n  TToCanvasElementOptions,\n  TValidToObjectMethod,\n  TOptions,\n} from '../typedefs';\nimport {\n  cancelAnimFrame,\n  requestAnimFrame,\n} from '../util/animation/AnimationFrameProvider';\nimport { runningAnimations } from '../util/animation/AnimationRegistry';\nimport { uid } from '../util/internals/uid';\nimport { createCanvasElementFor, toDataURL } from '../util/misc/dom';\nimport { invertTransform, transformPoint } from '../util/misc/matrix';\nimport type { EnlivenObjectOptions } from '../util/misc/objectEnlive';\nimport {\n  enlivenObjectEnlivables,\n  enlivenObjects,\n} from '../util/misc/objectEnlive';\nimport { pick } from '../util/misc/pick';\nimport { matrixToSVG } from '../util/misc/svgParsing';\nimport { toFixed } from '../util/misc/toFixed';\nimport { isFiller, isPattern, isTextObject } from '../util/typeAssertions';\nimport { StaticCanvasDOMManager } from './DOMManagers/StaticCanvasDOMManager';\nimport type { CSSDimensions } from './DOMManagers/util';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { StaticCanvasOptions } from './StaticCanvasOptions';\nimport { staticCanvasDefaults } from './StaticCanvasOptions';\nimport { log, FabricError } from '../util/internals/console';\nimport { getDevicePixelRatio } from '../env';\n\n/**\n * Having both options in TCanvasSizeOptions set to true transform the call in a calcOffset\n * Better try to restrict with types to avoid confusion.\n */\nexport type TCanvasSizeOptions =\n  | {\n      backstoreOnly?: true;\n      cssOnly?: false;\n    }\n  | {\n      backstoreOnly?: false;\n      cssOnly?: true;\n    };\n\nexport type TSVGExportOptions = {\n  suppressPreamble?: boolean;\n  viewBox?: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  };\n  encoding?: 'UTF-8'; // test Encoding type and see what happens\n  width?: string;\n  height?: string;\n  reviver?: TSVGReviver;\n};\n\n/**\n * Static canvas class\n * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n * @fires before:render\n * @fires after:render\n * @fires canvas:cleared\n * @fires object:added\n * @fires object:removed\n */\n// TODO: fix `EventSpec` inheritance https://github.com/microsoft/TypeScript/issues/26154#issuecomment-1366616260\nexport class StaticCanvas<\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    EventSpec extends StaticCanvasEvents = StaticCanvasEvents,\n  >\n  extends createCollectionMixin(CommonMethods<CanvasEvents>)\n  implements StaticCanvasOptions\n{\n  declare width: number;\n  declare height: number;\n\n  // background\n  declare backgroundVpt: boolean;\n  declare backgroundColor: TFiller | string;\n  declare backgroundImage?: FabricObject;\n  // overlay\n  declare overlayVpt: boolean;\n  declare overlayColor: TFiller | string;\n  declare overlayImage?: FabricObject;\n\n  declare clipPath?: FabricObject;\n\n  declare includeDefaultValues: boolean;\n\n  // rendering config\n  declare renderOnAddRemove: boolean;\n  declare skipOffscreen: boolean;\n  declare enableRetinaScaling: boolean;\n  declare imageSmoothingEnabled: boolean;\n\n  /**\n   * @todo move to Canvas\n   */\n  declare controlsAboveOverlay: boolean;\n\n  /**\n   * @todo move to Canvas\n   */\n  declare allowTouchScrolling: boolean;\n\n  declare viewportTransform: TMat2D;\n\n  /**\n   * The viewport bounding box in scene plane coordinates, see {@link calcViewportBoundaries}\n   */\n  declare vptCoords: TCornerPoint;\n\n  /**\n   * A reference to the canvas actual HTMLCanvasElement.\n   * Can be use to read the raw pixels, but never write or manipulate\n   * @type HTMLCanvasElement\n   */\n  get lowerCanvasEl() {\n    return this.elements.lower?.el;\n  }\n\n  get contextContainer() {\n    return this.elements.lower?.ctx;\n  }\n\n  /**\n   * If true the Canvas is in the process or has been disposed/destroyed.\n   * No more rendering operation will be executed on this canvas.\n   * @type boolean\n   */\n  declare destroyed?: boolean;\n\n  /**\n   * Started the process of disposing but not done yet.\n   * WIll likely complete the render cycle already scheduled but stopping adding more.\n   * @type boolean\n   */\n  declare disposed?: boolean;\n\n  declare _offset: { left: number; top: number };\n  protected declare hasLostContext: boolean;\n  protected declare nextRenderHandle: number;\n\n  declare elements: StaticCanvasDOMManager;\n\n  /**\n   * When true control drawing is skipped.\n   * This boolean is used to avoid toDataURL to export controls.\n   * Usage of this boolean to build up other flows and features is not supported\n   * @type Boolean\n   * @default false\n   */\n  protected declare skipControlsDrawing: boolean;\n\n  static ownDefaults = staticCanvasDefaults;\n\n  // reference to\n  protected declare __cleanupTask?: {\n    (): void;\n    kill: (reason?: any) => void;\n  };\n\n  static getDefaults(): Record<string, any> {\n    return StaticCanvas.ownDefaults;\n  }\n\n  constructor(\n    el?: string | HTMLCanvasElement,\n    options: TOptions<StaticCanvasOptions> = {},\n  ) {\n    super();\n    Object.assign(\n      this,\n      (this.constructor as typeof StaticCanvas).getDefaults(),\n    );\n    this.set(options);\n    this.initElements(el);\n    this._setDimensionsImpl({\n      width: this.width || this.elements.lower.el.width || 0,\n      height: this.height || this.elements.lower.el.height || 0,\n    });\n    this.skipControlsDrawing = false;\n    this.viewportTransform = [...this.viewportTransform];\n    this.calcViewportBoundaries();\n  }\n\n  protected initElements(el?: string | HTMLCanvasElement) {\n    this.elements = new StaticCanvasDOMManager(el);\n  }\n\n  add(...objects: FabricObject[]) {\n    const size = super.add(...objects);\n    objects.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\n    return size;\n  }\n\n  insertAt(index: number, ...objects: FabricObject[]) {\n    const size = super.insertAt(index, ...objects);\n    objects.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\n    return size;\n  }\n\n  remove(...objects: FabricObject[]) {\n    const removed = super.remove(...objects);\n    removed.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\n    return removed;\n  }\n\n  _onObjectAdded(obj: FabricObject) {\n    if (obj.canvas && (obj.canvas as StaticCanvas) !== this) {\n      log(\n        'warn',\n        'Canvas is trying to add an object that belongs to a different canvas.\\n' +\n          'Resulting to default behavior: removing object from previous canvas and adding to new canvas',\n      );\n      obj.canvas.remove(obj);\n    }\n    obj._set('canvas', this);\n    obj.setCoords();\n    this.fire('object:added', { target: obj });\n    obj.fire('added', { target: this });\n  }\n\n  _onObjectRemoved(obj: FabricObject) {\n    obj._set('canvas', undefined);\n    this.fire('object:removed', { target: obj });\n    obj.fire('removed', { target: this });\n  }\n\n  _onStackOrderChanged() {\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * @private\n   * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n   * @return {Number} retinaScaling if applied, otherwise 1;\n   */\n  getRetinaScaling() {\n    return this.enableRetinaScaling ? getDevicePixelRatio() : 1;\n  }\n\n  /**\n   * Calculates canvas element offset relative to the document\n   * This method is also attached as \"resize\" event handler of window\n   */\n  calcOffset() {\n    return (this._offset = this.elements.calcOffset());\n  }\n\n  /**\n   * Returns canvas width (in px)\n   * @return {Number}\n   */\n  getWidth(): number {\n    return this.width;\n  }\n\n  /**\n   * Returns canvas height (in px)\n   * @return {Number}\n   */\n  getHeight(): number {\n    return this.height;\n  }\n\n  /**\n   * Sets width of this canvas instance\n   * @param {Number|String} value                         Value to set width to\n   * @param {Object}        [options]                     Options object\n   * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n   * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n   * @deprecated will be removed in 7.0\n   */\n  setWidth(\n    value: TSize['width'],\n    options?: { backstoreOnly?: true; cssOnly?: false },\n  ): void;\n  setWidth(\n    value: CSSDimensions['width'],\n    options?: { cssOnly?: true; backstoreOnly?: false },\n  ): void;\n  setWidth(value: number, options?: never) {\n    return this.setDimensions({ width: value }, options);\n  }\n\n  /**s\n   * Sets height of this canvas instance\n   * @param {Number|String} value                         Value to set height to\n   * @param {Object}        [options]                     Options object\n   * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n   * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n   * @deprecated will be removed in 7.0\n   */\n  setHeight(\n    value: TSize['height'],\n    options?: { backstoreOnly?: true; cssOnly?: false },\n  ): void;\n  setHeight(\n    value: CSSDimensions['height'],\n    options?: { cssOnly?: true; backstoreOnly?: false },\n  ): void;\n  setHeight(value: CSSDimensions['height'], options?: never) {\n    return this.setDimensions({ height: value }, options);\n  }\n\n  /**\n   * Internal use only\n   * @protected\n   */\n  protected _setDimensionsImpl(\n    dimensions: Partial<TSize | CSSDimensions>,\n    { cssOnly = false, backstoreOnly = false }: TCanvasSizeOptions = {},\n  ) {\n    if (!cssOnly) {\n      const size = {\n        width: this.width,\n        height: this.height,\n        ...(dimensions as Partial<TSize>),\n      };\n      this.elements.setDimensions(size, this.getRetinaScaling());\n      this.hasLostContext = true;\n      this.width = size.width;\n      this.height = size.height;\n    }\n    if (!backstoreOnly) {\n      this.elements.setCSSDimensions(dimensions);\n    }\n\n    this.calcOffset();\n  }\n\n  /**\n   * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n   * @param {Object}        dimensions                    Object with width/height properties\n   * @param {Number|String} [dimensions.width]            Width of canvas element\n   * @param {Number|String} [dimensions.height]           Height of canvas element\n   * @param {Object}        [options]                     Options object\n   * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n   * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n   */\n  setDimensions(\n    dimensions: Partial<CSSDimensions>,\n    options?: { cssOnly?: true; backstoreOnly?: false },\n  ): void;\n  setDimensions(\n    dimensions: Partial<TSize>,\n    options?: { backstoreOnly?: true; cssOnly?: false },\n  ): void;\n  setDimensions(dimensions: Partial<TSize>, options?: never): void;\n  setDimensions(\n    dimensions: Partial<TSize | CSSDimensions>,\n    options?: TCanvasSizeOptions,\n  ) {\n    this._setDimensionsImpl(dimensions, options);\n    if (!options || !options.cssOnly) {\n      this.requestRenderAll();\n    }\n  }\n\n  /**\n   * Returns canvas zoom level\n   * @return {Number}\n   */\n  getZoom() {\n    return this.viewportTransform[0];\n  }\n\n  /**\n   * Sets viewport transformation of this canvas instance\n   * @param {Array} vpt a Canvas 2D API transform matrix\n   */\n  setViewportTransform(vpt: TMat2D) {\n    this.viewportTransform = vpt;\n    this.calcViewportBoundaries();\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * Sets zoom level of this canvas instance, the zoom centered around point\n   * meaning that following zoom to point with the same point will have the visual\n   * effect of the zoom originating from that point. The point won't move.\n   * It has nothing to do with canvas center or visual center of the viewport.\n   * @param {Point} point to zoom with respect to\n   * @param {Number} value to set zoom to, less than 1 zooms out\n   */\n  zoomToPoint(point: Point, value: number) {\n    // TODO: just change the scale, preserve other transformations\n    const before = point,\n      vpt: TMat2D = [...this.viewportTransform];\n    const newPoint = transformPoint(point, invertTransform(vpt));\n    vpt[0] = value;\n    vpt[3] = value;\n    const after = transformPoint(newPoint, vpt);\n    vpt[4] += before.x - after.x;\n    vpt[5] += before.y - after.y;\n    this.setViewportTransform(vpt);\n  }\n\n  /**\n   * Sets zoom level of this canvas instance\n   * @param {Number} value to set zoom to, less than 1 zooms out\n   */\n  setZoom(value: number) {\n    this.zoomToPoint(new Point(0, 0), value);\n  }\n\n  /**\n   * Pan viewport so as to place point at top left corner of canvas\n   * @param {Point} point to move to\n   */\n  absolutePan(point: Point) {\n    const vpt: TMat2D = [...this.viewportTransform];\n    vpt[4] = -point.x;\n    vpt[5] = -point.y;\n    return this.setViewportTransform(vpt);\n  }\n\n  /**\n   * Pans viewpoint relatively\n   * @param {Point} point (position vector) to move by\n   */\n  relativePan(point: Point) {\n    return this.absolutePan(\n      new Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5],\n      ),\n    );\n  }\n\n  /**\n   * Returns &lt;canvas> element corresponding to this instance\n   * @return {HTMLCanvasElement}\n   */\n  getElement(): HTMLCanvasElement {\n    return this.elements.lower.el;\n  }\n\n  /**\n   * Clears specified context of canvas element\n   * @param {CanvasRenderingContext2D} ctx Context to clear\n   */\n  clearContext(ctx: CanvasRenderingContext2D) {\n    ctx.clearRect(0, 0, this.width, this.height);\n  }\n\n  /**\n   * Returns context of canvas where objects are drawn\n   * @return {CanvasRenderingContext2D}\n   */\n  getContext(): CanvasRenderingContext2D {\n    return this.elements.lower.ctx;\n  }\n\n  /**\n   * Clears all contexts (background, main, top) of an instance\n   */\n  clear() {\n    this.remove(...this.getObjects());\n    this.backgroundImage = undefined;\n    this.overlayImage = undefined;\n    this.backgroundColor = '';\n    this.overlayColor = '';\n    this.clearContext(this.getContext());\n    this.fire('canvas:cleared');\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * Renders the canvas\n   */\n  renderAll() {\n    this.cancelRequestedRender();\n    if (this.destroyed) {\n      return;\n    }\n    this.renderCanvas(this.getContext(), this._objects);\n  }\n\n  /**\n   * Function created to be instance bound at initialization\n   * used in requestAnimationFrame rendering\n   * Let the fabricJS call it. If you call it manually you could have more\n   * animationFrame stacking on to of each other\n   * for an imperative rendering, use canvas.renderAll\n   * @private\n   */\n  renderAndReset() {\n    this.nextRenderHandle = 0;\n    this.renderAll();\n  }\n\n  /**\n   * Append a renderAll request to next animation frame.\n   * unless one is already in progress, in that case nothing is done\n   * a boolean flag will avoid appending more.\n   */\n  requestRenderAll() {\n    if (!this.nextRenderHandle && !this.disposed && !this.destroyed) {\n      this.nextRenderHandle = requestAnimFrame(() => this.renderAndReset());\n    }\n  }\n\n  /**\n   * Calculate the position of the 4 corner of canvas with current viewportTransform.\n   * helps to determinate when an object is in the current rendering viewport\n   */\n  calcViewportBoundaries(): TCornerPoint {\n    const width = this.width,\n      height = this.height,\n      iVpt = invertTransform(this.viewportTransform),\n      a = transformPoint({ x: 0, y: 0 }, iVpt),\n      b = transformPoint({ x: width, y: height }, iVpt),\n      // we don't support vpt flipping\n      // but the code is robust enough to mostly work with flipping\n      min = a.min(b),\n      max = a.max(b);\n    return (this.vptCoords = {\n      tl: min,\n      tr: new Point(max.x, min.y),\n      bl: new Point(min.x, max.y),\n      br: max,\n    });\n  }\n\n  cancelRequestedRender() {\n    if (this.nextRenderHandle) {\n      cancelAnimFrame(this.nextRenderHandle);\n      this.nextRenderHandle = 0;\n    }\n  }\n\n  drawControls(_ctx: CanvasRenderingContext2D) {\n    // Static canvas has no controls\n  }\n\n  /**\n   * Renders background, objects, overlay and controls.\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Array} objects to render\n   */\n  renderCanvas(ctx: CanvasRenderingContext2D, objects: FabricObject[]) {\n    if (this.destroyed) {\n      return;\n    }\n\n    const v = this.viewportTransform,\n      path = this.clipPath;\n    this.calcViewportBoundaries();\n    this.clearContext(ctx);\n    ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    // @ts-expect-error node-canvas stuff\n    ctx.patternQuality = 'best';\n    this.fire('before:render', { ctx });\n    this._renderBackground(ctx);\n\n    ctx.save();\n    //apply viewport transform once for all rendering process\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n    this._renderObjects(ctx, objects);\n    ctx.restore();\n    if (!this.controlsAboveOverlay && !this.skipControlsDrawing) {\n      this.drawControls(ctx);\n    }\n    if (path) {\n      path._set('canvas', this);\n      // needed to setup a couple of variables\n      // todo migrate to the newer one\n      path.shouldCache();\n      path._transformDone = true;\n      (path as TCachedFabricObject).renderCache({ forClipping: true });\n      this.drawClipPathOnCanvas(ctx, path as TCachedFabricObject);\n    }\n    this._renderOverlay(ctx);\n    if (this.controlsAboveOverlay && !this.skipControlsDrawing) {\n      this.drawControls(ctx);\n    }\n    this.fire('after:render', { ctx });\n\n    if (this.__cleanupTask) {\n      this.__cleanupTask();\n      this.__cleanupTask = undefined;\n    }\n  }\n\n  /**\n   * Paint the cached clipPath on the lowerCanvasEl\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawClipPathOnCanvas(\n    ctx: CanvasRenderingContext2D,\n    clipPath: TCachedFabricObject,\n  ) {\n    const v = this.viewportTransform;\n    ctx.save();\n    ctx.transform(...v);\n    // DEBUG: uncomment this line, comment the following\n    // ctx.globalAlpha = 0.4;\n    ctx.globalCompositeOperation = 'destination-in';\n    clipPath.transform(ctx);\n    ctx.scale(1 / clipPath.zoomX, 1 / clipPath.zoomY);\n    ctx.drawImage(\n      clipPath._cacheCanvas,\n      -clipPath.cacheTranslationX,\n      -clipPath.cacheTranslationY,\n    );\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Array} objects to render\n   */\n  _renderObjects(ctx: CanvasRenderingContext2D, objects: FabricObject[]) {\n    for (let i = 0, len = objects.length; i < len; ++i) {\n      objects[i] && objects[i].render(ctx);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {string} property 'background' or 'overlay'\n   */\n  _renderBackgroundOrOverlay(\n    ctx: CanvasRenderingContext2D,\n    property: 'background' | 'overlay',\n  ) {\n    const fill = this[`${property}Color`],\n      object = this[`${property}Image`],\n      v = this.viewportTransform,\n      needsVpt = this[`${property}Vpt`];\n    if (!fill && !object) {\n      return;\n    }\n    const isAFiller = isFiller(fill);\n    if (fill) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(this.width, 0);\n      ctx.lineTo(this.width, this.height);\n      ctx.lineTo(0, this.height);\n      ctx.closePath();\n      ctx.fillStyle = isAFiller ? fill.toLive(ctx /* this */)! : fill;\n      if (needsVpt) {\n        ctx.transform(...v);\n      }\n      if (isAFiller) {\n        ctx.transform(1, 0, 0, 1, fill.offsetX || 0, fill.offsetY || 0);\n        const m = ((fill as Gradient<'linear'>).gradientTransform ||\n          (fill as Pattern).patternTransform) as TMat2D;\n        m && ctx.transform(...m);\n      }\n      ctx.fill();\n      ctx.restore();\n    }\n    if (object) {\n      ctx.save();\n      const { skipOffscreen } = this;\n      // if the object doesn't move with the viewport,\n      // the offscreen concept does not apply;\n      this.skipOffscreen = needsVpt;\n      if (needsVpt) {\n        ctx.transform(...v);\n      }\n      object.render(ctx);\n      this.skipOffscreen = skipOffscreen;\n      ctx.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderBackground(ctx: CanvasRenderingContext2D) {\n    this._renderBackgroundOrOverlay(ctx, 'background');\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderOverlay(ctx: CanvasRenderingContext2D) {\n    this._renderBackgroundOrOverlay(ctx, 'overlay');\n  }\n\n  /**\n   * Returns coordinates of a center of canvas.\n   * Returned value is an object with top and left properties\n   * @return {Object} object with \"top\" and \"left\" number values\n   * @deprecated migrate to `getCenterPoint`\n   */\n  getCenter() {\n    return {\n      top: this.height / 2,\n      left: this.width / 2,\n    };\n  }\n\n  /**\n   * Returns coordinates of a center of canvas.\n   * @return {Point}\n   */\n  getCenterPoint() {\n    return new Point(this.width / 2, this.height / 2);\n  }\n\n  /**\n   * Centers object horizontally in the canvas\n   */\n  centerObjectH(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(this.getCenterPoint().x, object.getCenterPoint().y),\n    );\n  }\n\n  /**\n   * Centers object vertically in the canvas\n   * @param {FabricObject} object Object to center vertically\n   */\n  centerObjectV(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(object.getCenterPoint().x, this.getCenterPoint().y),\n    );\n  }\n\n  /**\n   * Centers object vertically and horizontally in the canvas\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  centerObject(object: FabricObject) {\n    return this._centerObject(object, this.getCenterPoint());\n  }\n\n  /**\n   * Centers object vertically and horizontally in the viewport\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  viewportCenterObject(object: FabricObject) {\n    return this._centerObject(object, this.getVpCenter());\n  }\n\n  /**\n   * Centers object horizontally in the viewport, object.top is unchanged\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  viewportCenterObjectH(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(this.getVpCenter().x, object.getCenterPoint().y),\n    );\n  }\n\n  /**\n   * Centers object Vertically in the viewport, object.top is unchanged\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  viewportCenterObjectV(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(object.getCenterPoint().x, this.getVpCenter().y),\n    );\n  }\n\n  /**\n   * Calculate the point in canvas that correspond to the center of actual viewport.\n   * @return {Point} vpCenter, viewport center\n   */\n  getVpCenter(): Point {\n    return transformPoint(\n      this.getCenterPoint(),\n      invertTransform(this.viewportTransform),\n    );\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object Object to center\n   * @param {Point} center Center point\n   */\n  _centerObject(object: FabricObject, center: Point) {\n    object.setXY(center, CENTER, CENTER);\n    object.setCoords();\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * Returns dataless JSON representation of canvas\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} json string\n   */\n  toDatalessJSON(propertiesToInclude?: string[]) {\n    return this.toDatalessObject(propertiesToInclude);\n  }\n\n  /**\n   * Returns object representation of canvas\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject(propertiesToInclude?: string[]) {\n    return this._toObjectMethod('toObject', propertiesToInclude);\n  }\n\n  /**\n   * Returns Object representation of canvas\n   * this alias is provided because if you call JSON.stringify on an instance,\n   * the toJSON object will be invoked if it exists.\n   * Having a toJSON method means you can do JSON.stringify(myCanvas)\n   * @return {Object} JSON compatible object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY']);\n   * @example <caption>JSON without default values</caption>\n   * var json = canvas.toJSON();\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Returns dataless object representation of canvas\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toDatalessObject(propertiesToInclude?: string[]) {\n    return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n  }\n\n  /**\n   * @private\n   */\n  _toObjectMethod(\n    methodName: TValidToObjectMethod,\n    propertiesToInclude?: string[],\n  ) {\n    const clipPath = this.clipPath;\n    const clipPathData =\n      clipPath && !clipPath.excludeFromExport\n        ? this._toObject(clipPath, methodName, propertiesToInclude)\n        : null;\n    return {\n      version: VERSION,\n      ...pick(this, propertiesToInclude as (keyof this)[]),\n      objects: this._objects\n        .filter((object) => !object.excludeFromExport)\n        .map((instance) =>\n          this._toObject(instance, methodName, propertiesToInclude),\n        ),\n      ...this.__serializeBgOverlay(methodName, propertiesToInclude),\n      ...(clipPathData ? { clipPath: clipPathData } : null),\n    };\n  }\n\n  /**\n   * @private\n   */\n  protected _toObject(\n    instance: FabricObject,\n    methodName: TValidToObjectMethod,\n    propertiesToInclude?: string[],\n  ) {\n    let originalValue;\n\n    if (!this.includeDefaultValues) {\n      originalValue = instance.includeDefaultValues;\n      instance.includeDefaultValues = false;\n    }\n\n    const object = instance[methodName](propertiesToInclude);\n    if (!this.includeDefaultValues) {\n      instance.includeDefaultValues = !!originalValue;\n    }\n    return object;\n  }\n\n  /**\n   * @private\n   */\n  __serializeBgOverlay(\n    methodName: TValidToObjectMethod,\n    propertiesToInclude?: string[],\n  ) {\n    const data: any = {},\n      bgImage = this.backgroundImage,\n      overlayImage = this.overlayImage,\n      bgColor = this.backgroundColor,\n      overlayColor = this.overlayColor;\n\n    if (isFiller(bgColor)) {\n      if (!bgColor.excludeFromExport) {\n        data.background = bgColor.toObject(propertiesToInclude);\n      }\n    } else if (bgColor) {\n      data.background = bgColor;\n    }\n\n    if (isFiller(overlayColor)) {\n      if (!overlayColor.excludeFromExport) {\n        data.overlay = overlayColor.toObject(propertiesToInclude);\n      }\n    } else if (overlayColor) {\n      data.overlay = overlayColor;\n    }\n\n    if (bgImage && !bgImage.excludeFromExport) {\n      data.backgroundImage = this._toObject(\n        bgImage,\n        methodName,\n        propertiesToInclude,\n      );\n    }\n    if (overlayImage && !overlayImage.excludeFromExport) {\n      data.overlayImage = this._toObject(\n        overlayImage,\n        methodName,\n        propertiesToInclude,\n      );\n    }\n\n    return data;\n  }\n\n  /* _TO_SVG_START_ */\n\n  declare svgViewportTransformation: boolean;\n\n  /**\n   * Returns SVG representation of canvas\n   * @function\n   * @param {Object} [options] Options object for SVG output\n   * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n   * @param {Object} [options.viewBox] SVG viewbox object\n   * @param {Number} [options.viewBox.x] x-coordinate of viewbox\n   * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n   * @param {Number} [options.viewBox.width] Width of viewbox\n   * @param {Number} [options.viewBox.height] Height of viewbox\n   * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n   * @param {String} [options.width] desired width of svg with or without units\n   * @param {String} [options.height] desired height of svg with or without units\n   * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n   * @return {String} SVG string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n   * @example <caption>Normal SVG output</caption>\n   * var svg = canvas.toSVG();\n   * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n   * var svg = canvas.toSVG({suppressPreamble: true});\n   * @example <caption>SVG output with viewBox attribute</caption>\n   * var svg = canvas.toSVG({\n   *   viewBox: {\n   *     x: 100,\n   *     y: 100,\n   *     width: 200,\n   *     height: 300\n   *   }\n   * });\n   * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n   * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n   * @example <caption>Modify SVG output with reviver function</caption>\n   * var svg = canvas.toSVG(null, function(svg) {\n   *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n   * });\n   */\n  toSVG(options: TSVGExportOptions = {}, reviver?: TSVGReviver) {\n    options.reviver = reviver;\n    const markup: string[] = [];\n\n    this._setSVGPreamble(markup, options);\n    this._setSVGHeader(markup, options);\n    if (this.clipPath) {\n      markup.push(`<g clip-path=\"url(#${this.clipPath.clipPathId})\" >\\n`);\n    }\n    this._setSVGBgOverlayColor(markup, 'background');\n    this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n    this._setSVGObjects(markup, reviver);\n    if (this.clipPath) {\n      markup.push('</g>\\n');\n    }\n    this._setSVGBgOverlayColor(markup, 'overlay');\n    this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n    markup.push('</svg>');\n\n    return markup.join('');\n  }\n\n  /**\n   * @private\n   */\n  _setSVGPreamble(markup: string[], options: TSVGExportOptions): void {\n    if (options.suppressPreamble) {\n      return;\n    }\n    markup.push(\n      '<?xml version=\"1.0\" encoding=\"',\n      options.encoding || 'UTF-8',\n      '\" standalone=\"no\" ?>\\n',\n      '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n      '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n',\n    );\n  }\n\n  /**\n   * @private\n   */\n  _setSVGHeader(markup: string[], options: TSVGExportOptions): void {\n    const width = options.width || `${this.width}`,\n      height = options.height || `${this.height}`,\n      NUM_FRACTION_DIGITS = config.NUM_FRACTION_DIGITS,\n      optViewBox = options.viewBox;\n    let viewBox: string;\n    if (optViewBox) {\n      viewBox = `viewBox=\"${optViewBox.x} ${optViewBox.y} ${optViewBox.width} ${optViewBox.height}\" `;\n    } else if (this.svgViewportTransformation) {\n      const vpt = this.viewportTransform;\n      viewBox = `viewBox=\"${toFixed(\n        -vpt[4] / vpt[0],\n        NUM_FRACTION_DIGITS,\n      )} ${toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS)} ${toFixed(\n        this.width / vpt[0],\n        NUM_FRACTION_DIGITS,\n      )} ${toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS)}\" `;\n    } else {\n      viewBox = `viewBox=\"0 0 ${this.width} ${this.height}\" `;\n    }\n\n    markup.push(\n      '<svg ',\n      'xmlns=\"http://www.w3.org/2000/svg\" ',\n      'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n      'version=\"1.1\" ',\n      'width=\"',\n      width,\n      '\" ',\n      'height=\"',\n      height,\n      '\" ',\n      viewBox,\n      'xml:space=\"preserve\">\\n',\n      '<desc>Created with Fabric.js ',\n      VERSION,\n      '</desc>\\n',\n      '<defs>\\n',\n      this.createSVGFontFacesMarkup(),\n      this.createSVGRefElementsMarkup(),\n      this.createSVGClipPathMarkup(options),\n      '</defs>\\n',\n    );\n  }\n\n  createSVGClipPathMarkup(options: TSVGExportOptions): string {\n    const clipPath = this.clipPath;\n    if (clipPath) {\n      clipPath.clipPathId = `CLIPPATH_${uid()}`;\n      return `<clipPath id=\"${clipPath.clipPathId}\" >\\n${clipPath.toClipPathSVG(\n        options.reviver,\n      )}</clipPath>\\n`;\n    }\n    return '';\n  }\n\n  /**\n   * Creates markup containing SVG referenced elements like patterns, gradients etc.\n   * @return {String}\n   */\n  createSVGRefElementsMarkup(): string {\n    return (['background', 'overlay'] as const)\n      .map((prop) => {\n        const fill = this[`${prop}Color`];\n        if (isFiller(fill)) {\n          const shouldTransform = this[`${prop}Vpt`],\n            vpt = this.viewportTransform,\n            object = {\n              // otherwise circular dependency\n              isType: () => false,\n              width: this.width / (shouldTransform ? vpt[0] : 1),\n              height: this.height / (shouldTransform ? vpt[3] : 1),\n            };\n          return fill.toSVG(object as FabricObject, {\n            additionalTransform: shouldTransform ? matrixToSVG(vpt) : '',\n          });\n        }\n      })\n      .join('');\n  }\n\n  /**\n   * Creates markup containing SVG font faces,\n   * font URLs for font faces must be collected by developers\n   * and are not extracted from the DOM by fabricjs\n   * @param {Array} objects Array of fabric objects\n   * @return {String}\n   */\n  createSVGFontFacesMarkup(): string {\n    const objects: FabricObject[] = [],\n      fontList: Record<string, boolean> = {},\n      fontPaths = config.fontPaths;\n\n    this._objects.forEach(function add(object) {\n      objects.push(object);\n      if (isCollection(object)) {\n        object._objects.forEach(add);\n      }\n    });\n\n    objects.forEach((obj) => {\n      if (!isTextObject(obj)) {\n        return;\n      }\n      const { styles, fontFamily } = obj;\n      if (fontList[fontFamily] || !fontPaths[fontFamily]) {\n        return;\n      }\n      fontList[fontFamily] = true;\n      if (!styles) {\n        return;\n      }\n      Object.values(styles).forEach((styleRow) => {\n        Object.values(styleRow).forEach(({ fontFamily = '' }) => {\n          if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n            fontList[fontFamily] = true;\n          }\n        });\n      });\n    });\n\n    const fontListMarkup = Object.keys(fontList)\n      .map(\n        (fontFamily) =>\n          `\\t\\t@font-face {\\n\\t\\t\\tfont-family: '${fontFamily}';\\n\\t\\t\\tsrc: url('${fontPaths[fontFamily]}');\\n\\t\\t}\\n`,\n      )\n      .join('');\n\n    if (fontListMarkup) {\n      return `\\t<style type=\"text/css\"><![CDATA[\\n${fontListMarkup}]]></style>\\n`;\n    }\n    return '';\n  }\n\n  /**\n   * @private\n   */\n  _setSVGObjects(markup: string[], reviver?: TSVGReviver) {\n    this.forEachObject((fabricObject) => {\n      if (fabricObject.excludeFromExport) {\n        return;\n      }\n      this._setSVGObject(markup, fabricObject, reviver);\n    });\n  }\n\n  /**\n   * This is its own function because the Canvas ( non static ) requires extra code here\n   * @private\n   */\n  _setSVGObject(\n    markup: string[],\n    instance: FabricObject,\n    reviver?: TSVGReviver,\n  ) {\n    markup.push(instance.toSVG(reviver));\n  }\n\n  /**\n   * @private\n   */\n  _setSVGBgOverlayImage(\n    markup: string[],\n    property: 'overlayImage' | 'backgroundImage',\n    reviver?: TSVGReviver,\n  ) {\n    const bgOrOverlay = this[property];\n    if (bgOrOverlay && !bgOrOverlay.excludeFromExport && bgOrOverlay.toSVG) {\n      markup.push(bgOrOverlay.toSVG(reviver));\n    }\n  }\n\n  /**\n   * @TODO this seems to handle patterns but fail at gradients.\n   * @private\n   */\n  _setSVGBgOverlayColor(markup: string[], property: 'background' | 'overlay') {\n    const filler = this[`${property}Color`];\n    if (!filler) {\n      return;\n    }\n    if (isFiller(filler)) {\n      const repeat = (filler as Pattern).repeat || '',\n        finalWidth = this.width,\n        finalHeight = this.height,\n        shouldInvert = this[`${property}Vpt`],\n        additionalTransform = shouldInvert\n          ? matrixToSVG(invertTransform(this.viewportTransform))\n          : '';\n      markup.push(\n        `<rect transform=\"${additionalTransform} translate(${finalWidth / 2},${\n          finalHeight / 2\n        })\" x=\"${filler.offsetX - finalWidth / 2}\" y=\"${\n          filler.offsetY - finalHeight / 2\n        }\" width=\"${\n          (repeat === 'repeat-y' || repeat === 'no-repeat') && isPattern(filler)\n            ? (filler.source as HTMLImageElement).width\n            : finalWidth\n        }\" height=\"${\n          (repeat === 'repeat-x' || repeat === 'no-repeat') && isPattern(filler)\n            ? (filler.source as HTMLImageElement).height\n            : finalHeight\n        }\" fill=\"url(#SVGID_${filler.id})\"></rect>\\n`,\n      );\n    } else {\n      markup.push(\n        '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\n        'fill=\"',\n        filler,\n        '\"',\n        '></rect>\\n',\n      );\n    }\n  }\n  /* _TO_SVG_END_ */\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   *\n   * **IMPORTANT**: It is recommended to abort loading tasks before calling this method to prevent race conditions and unnecessary networking\n   *\n   * @param {String|Object} json JSON string or object\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @param {Object} [options] options\n   * @param {AbortSignal} [options.signal] see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @return {Promise<Canvas | StaticCanvas>} instance\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json).then((canvas) => canvas.requestRenderAll());\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * }).then((canvas) => {\n   *   ... canvas is restored, add your code.\n   * });\n   *\n   */\n  loadFromJSON(\n    json: string | Record<string, any>,\n    reviver?: EnlivenObjectOptions['reviver'],\n    { signal }: Abortable = {},\n  ): Promise<this> {\n    if (!json) {\n      return Promise.reject(new FabricError('`json` is undefined'));\n    }\n\n    // parse json if it wasn't already\n    const serialized = typeof json === 'string' ? JSON.parse(json) : json;\n    const {\n      objects = [],\n      backgroundImage,\n      background,\n      overlayImage,\n      overlay,\n      clipPath,\n    } = serialized;\n    const renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    return Promise.all([\n      enlivenObjects<FabricObject>(objects, {\n        reviver,\n        signal,\n      }),\n      enlivenObjectEnlivables(\n        {\n          backgroundImage,\n          backgroundColor: background,\n          overlayImage,\n          overlayColor: overlay,\n          clipPath,\n        },\n        { signal },\n      ),\n    ]).then(([enlived, enlivedMap]) => {\n      this.clear();\n      this.add(...enlived);\n      this.set(serialized);\n      this.set(enlivedMap);\n      this.renderOnAddRemove = renderOnAddRemove;\n      return this;\n    });\n  }\n\n  /**\n   * Clones canvas instance\n   * @param {string[]} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone(properties: string[]) {\n    const data = this.toObject(properties);\n    const canvas = this.cloneWithoutData();\n    return canvas.loadFromJSON(data);\n  }\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions since loadFromJSON does not affect canvas size.\n   */\n  cloneWithoutData() {\n    const el = createCanvasElementFor(this);\n    return new (this.constructor as Constructor<this>)(el);\n  }\n\n  /**\n   * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n   * @param {Object} [options] Options object\n   * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n   * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n   * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n   * @param {(object: fabric.Object) => boolean} [options.filter] Function to filter objects.\n   * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n   * @see {@link https://jsfiddle.net/xsjua1rd/ demo}\n   * @example <caption>Generate jpeg dataURL with lower quality</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'jpeg',\n   *   quality: 0.8\n   * });\n   * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'png',\n   *   left: 100,\n   *   top: 100,\n   *   width: 200,\n   *   height: 200\n   * });\n   * @example <caption>Generate double scaled png dataURL</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'png',\n   *   multiplier: 2\n   * });\n   * @example <caption>Generate dataURL with objects that overlap a specified object</caption>\n   * var myObject;\n   * var dataURL = canvas.toDataURL({\n   *   filter: (object) => object.isContainedWithinObject(myObject) || object.intersectsWithObject(myObject)\n   * });\n   */\n  toDataURL(options = {} as TDataUrlOptions): string {\n    const {\n      format = 'png',\n      quality = 1,\n      multiplier = 1,\n      enableRetinaScaling = false,\n    } = options;\n    const finalMultiplier =\n      multiplier * (enableRetinaScaling ? this.getRetinaScaling() : 1);\n\n    return toDataURL(\n      this.toCanvasElement(finalMultiplier, options),\n      format,\n      quality,\n    );\n  }\n\n  /**\n   * Create a new HTMLCanvas element painted with the current canvas content.\n   * No need to resize the actual one or repaint it.\n   * Will transfer object ownership to a new canvas, paint it, and set everything back.\n   * This is an intermediary step used to get to a dataUrl but also it is useful to\n   * create quick image copies of a canvas without passing for the dataUrl string\n   * @param {Number} [multiplier] a zoom factor.\n   * @param {Object} [options] Cropping informations\n   * @param {Number} [options.left] Cropping left offset.\n   * @param {Number} [options.top] Cropping top offset.\n   * @param {Number} [options.width] Cropping width.\n   * @param {Number} [options.height] Cropping height.\n   * @param {(object: fabric.Object) => boolean} [options.filter] Function to filter objects.\n   */\n  toCanvasElement(\n    multiplier = 1,\n    { width, height, left, top, filter } = {} as TToCanvasElementOptions,\n  ): HTMLCanvasElement {\n    const scaledWidth = (width || this.width) * multiplier,\n      scaledHeight = (height || this.height) * multiplier,\n      zoom = this.getZoom(),\n      originalWidth = this.width,\n      originalHeight = this.height,\n      originalSkipControlsDrawing = this.skipControlsDrawing,\n      newZoom = zoom * multiplier,\n      vp = this.viewportTransform,\n      translateX = (vp[4] - (left || 0)) * multiplier,\n      translateY = (vp[5] - (top || 0)) * multiplier,\n      newVp = [newZoom, 0, 0, newZoom, translateX, translateY] as TMat2D,\n      originalRetina = this.enableRetinaScaling,\n      canvasEl = createCanvasElementFor({\n        width: scaledWidth,\n        height: scaledHeight,\n      }),\n      objectsToRender = filter\n        ? this._objects.filter((obj) => filter(obj))\n        : this._objects;\n    this.enableRetinaScaling = false;\n    this.viewportTransform = newVp;\n    this.width = scaledWidth;\n    this.height = scaledHeight;\n    this.skipControlsDrawing = true;\n    this.calcViewportBoundaries();\n    this.renderCanvas(canvasEl.getContext('2d')!, objectsToRender);\n    this.viewportTransform = vp;\n    this.width = originalWidth;\n    this.height = originalHeight;\n    this.calcViewportBoundaries();\n    this.enableRetinaScaling = originalRetina;\n    this.skipControlsDrawing = originalSkipControlsDrawing;\n    return canvasEl;\n  }\n\n  /**\n   * Waits until rendering has settled to destroy the canvas\n   * @returns {Promise<boolean>} a promise resolving to `true` once the canvas has been destroyed or to `false` if the canvas has was already destroyed\n   * @throws if aborted by a consequent call\n   */\n  dispose() {\n    !this.disposed &&\n      this.elements.cleanupDOM({ width: this.width, height: this.height });\n    runningAnimations.cancelByCanvas(this);\n    this.disposed = true;\n    return new Promise<boolean>((resolve, reject) => {\n      const task = () => {\n        this.destroy();\n        resolve(true);\n      };\n      task.kill = reject;\n      if (this.__cleanupTask) {\n        this.__cleanupTask.kill('aborted');\n      }\n\n      if (this.destroyed) {\n        resolve(false);\n      } else if (this.nextRenderHandle) {\n        this.__cleanupTask = task;\n      } else {\n        task();\n      }\n    });\n  }\n\n  /**\n   * Clears the canvas element, disposes objects and frees resources.\n   *\n   * Invoked as part of the **async** operation of {@link dispose}.\n   *\n   * **CAUTION**:\n   *\n   * This method is **UNSAFE**.\n   * You may encounter a race condition using it if there's a requested render.\n   * Call this method only if you are sure rendering has settled.\n   * Consider using {@link dispose} as it is **SAFE**\n   *\n   * @private\n   */\n  destroy() {\n    this.destroyed = true;\n    this.cancelRequestedRender();\n    this.forEachObject((object) => object.dispose());\n    this._objects = [];\n    if (this.backgroundImage) {\n      this.backgroundImage.dispose();\n    }\n    this.backgroundImage = undefined;\n    if (this.overlayImage) {\n      this.overlayImage.dispose();\n    }\n    this.overlayImage = undefined;\n    this.elements.dispose();\n  }\n\n  /**\n   * Returns a string representation of an instance\n   * @return {String} string representation of an instance\n   */\n  toString() {\n    return `#<Canvas (${this.complexity()}): { objects: ${\n      this._objects.length\n    } }>`;\n  }\n}\n","import type { TPointerEvent } from '../EventTypeDefs';\nimport { Point } from '../Point';\nimport { getScrollLeftTop } from './dom_misc';\n\nconst touchEvents = ['touchstart', 'touchmove', 'touchend'];\n\nfunction getTouchInfo(event: TouchEvent | MouseEvent): MouseEvent | Touch {\n  const touchProp = (event as TouchEvent).changedTouches;\n  if (touchProp && touchProp[0]) {\n    return touchProp[0];\n  }\n  return event as MouseEvent;\n}\n\nexport const getPointer = (event: TPointerEvent): Point => {\n  const element = event.target as HTMLElement,\n    scroll = getScrollLeftTop(element),\n    _evt = getTouchInfo(event);\n  return new Point(_evt.clientX + scroll.left, _evt.clientY + scroll.top);\n};\n\nexport const isTouchEvent = (event: TPointerEvent) =>\n  touchEvents.includes(event.type) ||\n  (event as PointerEvent).pointerType === 'touch';\n\nexport const stopEvent = (e: Event) => {\n  e.preventDefault();\n  e.stopPropagation();\n};\n","import type { XY } from '../../Point';\nimport type { TBBox } from '../../typedefs';\n\n/**\n * Calculates bounding box (left, top, width, height) from given `points`\n * @param {XY[]} points\n * @return {Object} Object with left, top, width, height properties\n */\nexport const makeBoundingBoxFromPoints = (points: XY[]): TBBox => {\n  let left = 0,\n    top = 0,\n    width = 0,\n    height = 0;\n\n  for (let i = 0, len = points.length; i < len; i++) {\n    const { x, y } = points[i];\n    if (x > width || !i) width = x;\n    if (x < left || !i) left = x;\n    if (y > height || !i) height = y;\n    if (y < top || !i) top = y;\n  }\n\n  return {\n    left,\n    top,\n    width: width - left,\n    height: height - top,\n  };\n};\n","import { Point } from '../../Point';\nimport { CENTER } from '../../constants';\nimport type { FabricObject } from '../../shapes/Object/Object';\nimport type { TMat2D } from '../../typedefs';\nimport { makeBoundingBoxFromPoints } from './boundingBoxFromPoints';\nimport {\n  invertTransform,\n  multiplyTransformMatrices,\n  qrDecompose,\n} from './matrix';\n\n/**\n * given an object and a transform, apply the inverse transform to the object,\n * this is equivalent to remove from that object that transformation, so that\n * added in a space with the removed transform, the object will be the same as before.\n * Removing from an object a transform that scale by 2 is like scaling it by 1/2.\n * Removing from an object a transform that rotate by 30deg is like rotating by 30deg\n * in the opposite direction.\n * This util is used to add objects inside transformed groups or nested groups.\n * @param {FabricObject} object the object you want to transform\n * @param {TMat2D} transform the destination transform\n */\nexport const removeTransformFromObject = (\n  object: FabricObject,\n  transform: TMat2D,\n) => {\n  const inverted = invertTransform(transform),\n    finalTransform = multiplyTransformMatrices(\n      inverted,\n      object.calcOwnMatrix(),\n    );\n  applyTransformToObject(object, finalTransform);\n};\n\n/**\n * given an object and a transform, apply the transform to the object.\n * this is equivalent to change the space where the object is drawn.\n * Adding to an object a transform that scale by 2 is like scaling it by 2.\n * This is used when removing an object from an active selection for example.\n * @param {FabricObject} object the object you want to transform\n * @param {Array} transform the destination transform\n */\nexport const addTransformToObject = (object: FabricObject, transform: TMat2D) =>\n  applyTransformToObject(\n    object,\n    multiplyTransformMatrices(transform, object.calcOwnMatrix()),\n  );\n\n/**\n * discard an object transform state and apply the one from the matrix.\n * @param {FabricObject} object the object you want to transform\n * @param {Array} transform the destination transform\n */\nexport const applyTransformToObject = (\n  object: FabricObject,\n  transform: TMat2D,\n) => {\n  const { translateX, translateY, scaleX, scaleY, ...otherOptions } =\n      qrDecompose(transform),\n    center = new Point(translateX, translateY);\n  object.flipX = false;\n  object.flipY = false;\n  Object.assign(object, otherOptions);\n  object.set({ scaleX, scaleY });\n  object.setPositionByOrigin(center, CENTER, CENTER);\n};\n/**\n * reset an object transform state to neutral. Top and left are not accounted for\n * @param  {FabricObject} target object to transform\n */\nexport const resetObjectTransform = (target: FabricObject) => {\n  target.scaleX = 1;\n  target.scaleY = 1;\n  target.skewX = 0;\n  target.skewY = 0;\n  target.flipX = false;\n  target.flipY = false;\n  target.rotate(0);\n};\n\n/**\n * Extract Object transform values\n * @param  {FabricObject} target object to read from\n * @return {Object} Components of transform\n */\nexport const saveObjectTransform = (target: FabricObject) => ({\n  scaleX: target.scaleX,\n  scaleY: target.scaleY,\n  skewX: target.skewX,\n  skewY: target.skewY,\n  angle: target.angle,\n  left: target.left,\n  flipX: target.flipX,\n  flipY: target.flipY,\n  top: target.top,\n});\n\n/**\n * given a width and height, return the size of the bounding box\n * that can contains the box with width/height with applied transform.\n * Use to calculate the boxes around objects for controls.\n * @param {Number} width\n * @param {Number} height\n * @param {TMat2D} t\n * @returns {Point} size\n */\nexport const sizeAfterTransform = (\n  width: number,\n  height: number,\n  t: TMat2D,\n) => {\n  const dimX = width / 2,\n    dimY = height / 2,\n    points = [\n      new Point(-dimX, -dimY),\n      new Point(dimX, -dimY),\n      new Point(-dimX, dimY),\n      new Point(dimX, dimY),\n    ].map((p) => p.transform(t)),\n    bbox = makeBoundingBoxFromPoints(points);\n  return new Point(bbox.width, bbox.height);\n};\n","import { iMatrix } from '../../constants';\nimport type { Point } from '../../Point';\nimport type { FabricObject } from '../../shapes/Object/Object';\nimport type { TMat2D } from '../../typedefs';\nimport { invertTransform, multiplyTransformMatrices } from './matrix';\nimport { applyTransformToObject } from './objectTransforms';\n\n/**\n * We are actually looking for the transformation from the destination plane to the source plane (change of basis matrix)\\\n * The object will exist on the destination plane and we want it to seem unchanged by it so we invert the destination matrix (`to`) and then apply the source matrix (`from`)\n * @param [from]\n * @param [to]\n * @returns\n */\nexport const calcPlaneChangeMatrix = (\n  from: TMat2D = iMatrix,\n  to: TMat2D = iMatrix,\n) => multiplyTransformMatrices(invertTransform(to), from);\n\n/**\n * Sends a point from the source coordinate plane to the destination coordinate plane.\\\n * From the canvas/viewer's perspective the point remains unchanged.\n *\n * @example <caption>Send point from canvas plane to group plane</caption>\n * var obj = new Rect({ left: 20, top: 20, width: 60, height: 60, strokeWidth: 0 });\n * var group = new Group([obj], { strokeWidth: 0 });\n * var sentPoint1 = sendPointToPlane(new Point(50, 50), undefined, group.calcTransformMatrix());\n * var sentPoint2 = sendPointToPlane(new Point(50, 50), iMatrix, group.calcTransformMatrix());\n * console.log(sentPoint1, sentPoint2) //  both points print (0,0) which is the center of group\n *\n * @param {Point} point\n * @param {TMat2D} [from] plane matrix containing object. Passing `undefined` is equivalent to passing the identity matrix, which means `point` exists in the canvas coordinate plane.\n * @param {TMat2D} [to] destination plane matrix to contain object. Passing `undefined` means `point` should be sent to the canvas coordinate plane.\n * @returns {Point} transformed point\n */\nexport const sendPointToPlane = (\n  point: Point,\n  from: TMat2D = iMatrix,\n  to: TMat2D = iMatrix,\n): Point => point.transform(calcPlaneChangeMatrix(from, to));\n\n/**\n * See {@link sendPointToPlane}\n */\nexport const sendVectorToPlane = (\n  point: Point,\n  from: TMat2D = iMatrix,\n  to: TMat2D = iMatrix,\n): Point => point.transform(calcPlaneChangeMatrix(from, to), true);\n\n/**\n *\n * A util that abstracts applying transform to objects.\\\n * Sends `object` to the destination coordinate plane by applying the relevant transformations.\\\n * Changes the space/plane where `object` is drawn.\\\n * From the canvas/viewer's perspective `object` remains unchanged.\n *\n * @example <caption>Move clip path from one object to another while preserving it's appearance as viewed by canvas/viewer</caption>\n * let obj, obj2;\n * let clipPath = new Circle({ radius: 50 });\n * obj.clipPath = clipPath;\n * // render\n * sendObjectToPlane(clipPath, obj.calcTransformMatrix(), obj2.calcTransformMatrix());\n * obj.clipPath = undefined;\n * obj2.clipPath = clipPath;\n * // render, clipPath now clips obj2 but seems unchanged from the eyes of the viewer\n *\n * @example <caption>Clip an object's clip path with an existing object</caption>\n * let obj, existingObj;\n * let clipPath = new Circle({ radius: 50 });\n * obj.clipPath = clipPath;\n * let transformTo = multiplyTransformMatrices(obj.calcTransformMatrix(), clipPath.calcTransformMatrix());\n * sendObjectToPlane(existingObj, existingObj.group?.calcTransformMatrix(), transformTo);\n * clipPath.clipPath = existingObj;\n *\n * @param {FabricObject} object\n * @param {Matrix} [from] plane matrix containing object. Passing `undefined` is equivalent to passing the identity matrix, which means `object` is a direct child of canvas.\n * @param {Matrix} [to] destination plane matrix to contain object. Passing `undefined` means `object` should be sent to the canvas coordinate plane.\n * @returns {Matrix} the transform matrix that was applied to `object`\n */\nexport const sendObjectToPlane = (\n  object: FabricObject,\n  from?: TMat2D,\n  to?: TMat2D,\n): TMat2D => {\n  const t = calcPlaneChangeMatrix(from, to);\n  applyTransformToObject(\n    object,\n    multiplyTransformMatrices(t, object.calcOwnMatrix()),\n  );\n  return t;\n};\n","import type {\n  ObjectModificationEvents,\n  TModificationEvents,\n} from '../EventTypeDefs';\n\nexport const fireEvent = (\n  eventName: TModificationEvents,\n  options: ObjectModificationEvents[typeof eventName],\n) => {\n  const {\n    transform: { target },\n  } = options;\n  target.canvas?.fire(`object:${eventName}`, {\n    ...options,\n    target,\n  });\n  target.fire(eventName, options);\n};\n","import type { TOriginX, TOriginY } from '../../typedefs';\n\nconst originOffset = {\n  left: -0.5,\n  top: -0.5,\n  center: 0,\n  bottom: 0.5,\n  right: 0.5,\n};\n/**\n * Resolves origin value relative to center\n * @private\n * @param {TOriginX | TOriginY} originValue originX / originY\n * @returns number\n */\n\nexport const resolveOrigin = (\n  originValue: TOriginX | TOriginY | number,\n): number =>\n  typeof originValue === 'string'\n    ? originOffset[originValue]\n    : originValue - 0.5;\n","import type {\n  TPointerEvent,\n  Transform,\n  TransformAction,\n  BasicTransformEvent,\n} from '../EventTypeDefs';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { Point } from '../Point';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TOriginX, TOriginY } from '../typedefs';\nimport {\n  degreesToRadians,\n  radiansToDegrees,\n} from '../util/misc/radiansDegreesConversion';\nimport type { Control } from './Control';\nimport { CENTER } from '../constants';\n\nexport const NOT_ALLOWED_CURSOR = 'not-allowed';\n\n/**\n * @param {Boolean} alreadySelected true if target is already selected\n * @param {String} corner a string representing the corner ml, mr, tl ...\n * @param {Event} e Event object\n * @param {FabricObject} [target] inserted back to help overriding. Unused\n */\nexport const getActionFromCorner = (\n  alreadySelected: boolean,\n  corner: string | undefined,\n  e: TPointerEvent,\n  target: FabricObject,\n) => {\n  if (!corner || !alreadySelected) {\n    return 'drag';\n  }\n  const control = target.controls[corner];\n  return control.getActionName(e, control, target);\n};\n\n/**\n * Checks if transform is centered\n * @param {Object} transform transform data\n * @return {Boolean} true if transform is centered\n */\nexport function isTransformCentered(transform: Transform) {\n  return (\n    resolveOrigin(transform.originX) === resolveOrigin(CENTER) &&\n    resolveOrigin(transform.originY) === resolveOrigin(CENTER)\n  );\n}\n\nexport function invertOrigin(origin: TOriginX | TOriginY) {\n  return -resolveOrigin(origin) + 0.5;\n}\n\nexport const isLocked = (\n  target: FabricObject,\n  lockingKey:\n    | 'lockMovementX'\n    | 'lockMovementY'\n    | 'lockRotation'\n    | 'lockScalingX'\n    | 'lockScalingY'\n    | 'lockSkewingX'\n    | 'lockSkewingY'\n    | 'lockScalingFlip',\n) => target[lockingKey];\n\nexport const commonEventInfo: TransformAction<\n  Transform,\n  BasicTransformEvent\n> = (eventData, transform, x, y) => {\n  return {\n    e: eventData,\n    transform,\n    pointer: new Point(x, y),\n  };\n};\n\n/**\n * Combine control position and object angle to find the control direction compared\n * to the object center.\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\n * @param {Control} control the control class\n * @return {Number} 0 - 7 a quadrant number\n */\nexport function findCornerQuadrant(\n  fabricObject: FabricObject,\n  control: Control,\n): number {\n  //  angle is relative to canvas plane\n  const angle = fabricObject.getTotalAngle(),\n    cornerAngle =\n      angle + radiansToDegrees(Math.atan2(control.y, control.x)) + 360;\n  return Math.round((cornerAngle % 360) / 45);\n}\n\n/**\n * @returns the normalized point (rotated relative to center) in local coordinates\n */\nfunction normalizePoint(\n  target: FabricObject,\n  point: Point,\n  originX: TOriginX,\n  originY: TOriginY,\n): Point {\n  const center = target.getRelativeCenterPoint(),\n    p =\n      typeof originX !== 'undefined' && typeof originY !== 'undefined'\n        ? target.translateToGivenOrigin(\n            center,\n            CENTER,\n            CENTER,\n            originX,\n            originY,\n          )\n        : new Point(target.left, target.top),\n    p2 = target.angle\n      ? point.rotate(-degreesToRadians(target.angle), center)\n      : point;\n  return p2.subtract(p);\n}\n\n/**\n * Transforms a point to the offset from the given origin\n * @param {Object} transform\n * @param {String} originX\n * @param {String} originY\n * @param {number} x\n * @param {number} y\n * @return {Fabric.Point} the normalized point\n */\nexport function getLocalPoint(\n  { target, corner }: Transform,\n  originX: TOriginX,\n  originY: TOriginY,\n  x: number,\n  y: number,\n) {\n  const control = target.controls[corner],\n    zoom = target.canvas?.getZoom() || 1,\n    padding = target.padding / zoom,\n    localPoint = normalizePoint(target, new Point(x, y), originX, originY);\n  if (localPoint.x >= padding) {\n    localPoint.x -= padding;\n  }\n  if (localPoint.x <= -padding) {\n    localPoint.x += padding;\n  }\n  if (localPoint.y >= padding) {\n    localPoint.y -= padding;\n  }\n  if (localPoint.y <= padding) {\n    localPoint.y += padding;\n  }\n  localPoint.x -= control.offsetX;\n  localPoint.y -= control.offsetY;\n  return localPoint;\n}\n","import type { TransformActionHandler } from '../EventTypeDefs';\nimport { LEFT, TOP, MOVING } from '../constants';\nimport { fireEvent } from './fireEvent';\nimport { commonEventInfo, isLocked } from './util';\n\n/**\n * Action handler\n * @private\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if the translation occurred\n */\nexport const dragHandler: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  const { target, offsetX, offsetY } = transform,\n    newLeft = x - offsetX,\n    newTop = y - offsetY,\n    moveX = !isLocked(target, 'lockMovementX') && target.left !== newLeft,\n    moveY = !isLocked(target, 'lockMovementY') && target.top !== newTop;\n  moveX && target.set(LEFT, newLeft);\n  moveY && target.set(TOP, newTop);\n  if (moveX || moveY) {\n    fireEvent(MOVING, commonEventInfo(eventData, transform, x, y));\n  }\n  return moveX || moveY;\n};\n","import type { TSVGReviver } from '../../typedefs';\nimport { uid } from '../../util/internals/uid';\nimport { colorPropToSVG, matrixToSVG } from '../../util/misc/svgParsing';\nimport { FILL, NONE, STROKE } from '../../constants';\nimport type { FabricObject } from './FabricObject';\nimport { isFiller } from '../../util/typeAssertions';\n\nexport class FabricObjectSVGExportMixin {\n  /**\n   * When an object is being exported as SVG as a clippath, a reference inside the SVG is needed.\n   * This reference is a UID in the fabric namespace and is temporary stored here.\n   * @type {String}\n   */\n  declare clipPathId?: string;\n\n  /**\n   * Returns styles-string for svg-export\n   * @param {Boolean} skipShadow a boolean to skip shadow filter output\n   * @return {String}\n   */\n  getSvgStyles(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    skipShadow?: boolean,\n  ) {\n    const fillRule = this.fillRule ? this.fillRule : 'nonzero',\n      strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n      strokeDashArray = this.strokeDashArray\n        ? this.strokeDashArray.join(' ')\n        : NONE,\n      strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\n      strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n      strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n      strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n      opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n      visibility = this.visible ? '' : ' visibility: hidden;',\n      filter = skipShadow ? '' : this.getSvgFilter(),\n      fill = colorPropToSVG(FILL, this.fill),\n      stroke = colorPropToSVG(STROKE, this.stroke);\n\n    return [\n      stroke,\n      'stroke-width: ',\n      strokeWidth,\n      '; ',\n      'stroke-dasharray: ',\n      strokeDashArray,\n      '; ',\n      'stroke-linecap: ',\n      strokeLineCap,\n      '; ',\n      'stroke-dashoffset: ',\n      strokeDashOffset,\n      '; ',\n      'stroke-linejoin: ',\n      strokeLineJoin,\n      '; ',\n      'stroke-miterlimit: ',\n      strokeMiterLimit,\n      '; ',\n      fill,\n      'fill-rule: ',\n      fillRule,\n      '; ',\n      'opacity: ',\n      opacity,\n      ';',\n      filter,\n      visibility,\n    ].join('');\n  }\n\n  /**\n   * Returns filter for svg shadow\n   * @return {String}\n   */\n  getSvgFilter(this: FabricObjectSVGExportMixin & FabricObject) {\n    return this.shadow ? `filter: url(#SVGID_${this.shadow.id});` : '';\n  }\n\n  /**\n   * Returns id attribute for svg output\n   * @return {String}\n   */\n  getSvgCommons(\n    this: FabricObjectSVGExportMixin & FabricObject & { id?: string },\n  ) {\n    return [\n      this.id ? `id=\"${this.id}\" ` : '',\n      this.clipPath\n        ? `clip-path=\"url(#${\n            (this.clipPath as FabricObjectSVGExportMixin & FabricObject)\n              .clipPathId\n          })\" `\n        : '',\n    ].join('');\n  }\n\n  /**\n   * Returns transform-string for svg-export\n   * @param {Boolean} use the full transform or the single object one.\n   * @return {String}\n   */\n  getSvgTransform(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    full?: boolean,\n    additionalTransform = '',\n  ) {\n    const transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\n      svgTransform = `transform=\"${matrixToSVG(transform)}`;\n    return `${svgTransform}${additionalTransform}\" `;\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * This function is implemented in each subclass\n   * This is just because typescript otherwise cryies all the time\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG(_reviver?: TSVGReviver): string[] {\n    return [''];\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @param {TSVGReviver} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  toSVG(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    reviver?: TSVGReviver,\n  ) {\n    return this._createBaseSVGMarkup(this._toSVG(reviver), {\n      reviver,\n    });\n  }\n\n  /**\n   * Returns svg clipPath representation of an instance\n   * @param {TSVGReviver} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  toClipPathSVG(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    reviver?: TSVGReviver,\n  ) {\n    return (\n      '\\t' +\n      this._createBaseClipPathSVGMarkup(this._toSVG(reviver), {\n        reviver,\n      })\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createBaseClipPathSVGMarkup(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    objectMarkup: string[],\n    {\n      reviver,\n      additionalTransform = '',\n    }: { reviver?: TSVGReviver; additionalTransform?: string } = {},\n  ) {\n    const commonPieces = [\n        this.getSvgTransform(true, additionalTransform),\n        this.getSvgCommons(),\n      ].join(''),\n      // insert commons in the markup, style and svgCommons\n      index = objectMarkup.indexOf('COMMON_PARTS');\n    objectMarkup[index] = commonPieces;\n    return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\n  }\n\n  /**\n   * @private\n   */\n  _createBaseSVGMarkup(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    objectMarkup: string[],\n    {\n      noStyle,\n      reviver,\n      withShadow,\n      additionalTransform,\n    }: {\n      noStyle?: boolean;\n      reviver?: TSVGReviver;\n      withShadow?: boolean;\n      additionalTransform?: string;\n    } = {},\n  ): string {\n    const styleInfo = noStyle ? '' : `style=\"${this.getSvgStyles()}\" `,\n      shadowInfo = withShadow ? `style=\"${this.getSvgFilter()}\" ` : '',\n      clipPath = this.clipPath as FabricObjectSVGExportMixin & FabricObject,\n      vectorEffect = this.strokeUniform\n        ? 'vector-effect=\"non-scaling-stroke\" '\n        : '',\n      absoluteClipPath = clipPath && clipPath.absolutePositioned,\n      stroke = this.stroke,\n      fill = this.fill,\n      shadow = this.shadow,\n      markup = [],\n      // insert commons in the markup, style and svgCommons\n      index = objectMarkup.indexOf('COMMON_PARTS');\n    let clipPathMarkup;\n    if (clipPath) {\n      clipPath.clipPathId = `CLIPPATH_${uid()}`;\n      clipPathMarkup = `<clipPath id=\"${\n        clipPath.clipPathId\n      }\" >\\n${clipPath.toClipPathSVG(reviver)}</clipPath>\\n`;\n    }\n    if (absoluteClipPath) {\n      markup.push('<g ', shadowInfo, this.getSvgCommons(), ' >\\n');\n    }\n    markup.push(\n      '<g ',\n      this.getSvgTransform(false),\n      !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '',\n      ' >\\n',\n    );\n    const commonPieces = [\n      styleInfo,\n      vectorEffect,\n      noStyle ? '' : this.addPaintOrder(),\n      ' ',\n      additionalTransform ? `transform=\"${additionalTransform}\" ` : '',\n    ].join('');\n    objectMarkup[index] = commonPieces;\n    if (isFiller(fill)) {\n      markup.push(fill.toSVG(this));\n    }\n    if (isFiller(stroke)) {\n      markup.push(stroke.toSVG(this));\n    }\n    if (shadow) {\n      markup.push(shadow.toSVG(this));\n    }\n    if (clipPath) {\n      markup.push(clipPathMarkup);\n    }\n    markup.push(objectMarkup.join(''));\n    markup.push('</g>\\n');\n    absoluteClipPath && markup.push('</g>\\n');\n    return reviver ? reviver(markup.join('')) : markup.join('');\n  }\n\n  addPaintOrder(this: FabricObjectSVGExportMixin & FabricObject) {\n    return this.paintFirst !== FILL ? ` paint-order=\"${this.paintFirst}\" ` : '';\n  }\n}\n","export function getSvgRegex(arr: string[]) {\n  return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n}\n","import { getSvgRegex } from './getSvgRegex';\nimport { LEFT, TOP } from '../constants';\n\nexport const reNum = String.raw`(?:[-+]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][-+]?\\d+)?)`;\n\nexport const svgNS = 'http://www.w3.org/2000/svg';\n\nexport const reFontDeclaration = new RegExp(\n  '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n    reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' +\n    reNum +\n    '))?\\\\s+(.*)',\n);\n\nexport const svgValidTagNames = [\n    'path',\n    'circle',\n    'polygon',\n    'polyline',\n    'ellipse',\n    'rect',\n    'line',\n    'image',\n    'text',\n  ],\n  svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n  svgInvalidAncestors = [\n    'pattern',\n    'defs',\n    'symbol',\n    'metadata',\n    'clipPath',\n    'mask',\n    'desc',\n  ],\n  svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\n  attributesMap = {\n    cx: LEFT,\n    x: LEFT,\n    r: 'radius',\n    cy: TOP,\n    y: TOP,\n    display: 'visible',\n    visibility: 'visible',\n    transform: 'transformMatrix',\n    'fill-opacity': 'fillOpacity',\n    'fill-rule': 'fillRule',\n    'font-family': 'fontFamily',\n    'font-size': 'fontSize',\n    'font-style': 'fontStyle',\n    'font-weight': 'fontWeight',\n    'letter-spacing': 'charSpacing',\n    'paint-order': 'paintFirst',\n    'stroke-dasharray': 'strokeDashArray',\n    'stroke-dashoffset': 'strokeDashOffset',\n    'stroke-linecap': 'strokeLineCap',\n    'stroke-linejoin': 'strokeLineJoin',\n    'stroke-miterlimit': 'strokeMiterLimit',\n    'stroke-opacity': 'strokeOpacity',\n    'stroke-width': 'strokeWidth',\n    'text-decoration': 'textDecoration',\n    'text-anchor': 'textAnchor',\n    opacity: 'opacity',\n    'clip-path': 'clipPath',\n    'clip-rule': 'clipRule',\n    'vector-effect': 'strokeUniform',\n    'image-rendering': 'imageSmoothing',\n  },\n  fSize = 'font-size',\n  cPath = 'clip-path';\n\nexport const svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n\nexport const svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n\nexport const svgValidParentsRegEx = getSvgRegex(svgValidParents);\n\n// http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n// matches, e.g.: +14.56e-12, etc.\nexport const reViewBoxAttrValue = new RegExp(\n  '^' +\n    '\\\\s*(' +\n    reNum +\n    '+)\\\\s*,?' +\n    '\\\\s*(' +\n    reNum +\n    '+)\\\\s*,?' +\n    '\\\\s*(' +\n    reNum +\n    '+)\\\\s*,?' +\n    '\\\\s*(' +\n    reNum +\n    '+)\\\\s*' +\n    '$',\n);\n","import type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport type { TRadian } from '../../typedefs';\n\nconst unitVectorX = new Point(1, 0);\nconst zero = new Point();\n\n/**\n * Rotates `vector` with `radians`\n * @param {Point} vector The vector to rotate (x and y)\n * @param {Number} radians The radians of the angle for the rotation\n * @return {Point} The new rotated point\n */\nexport const rotateVector = (vector: Point, radians: TRadian) =>\n  vector.rotate(radians);\n\n/**\n * Creates a vector from points represented as a point\n *\n * @param {Point} from\n * @param {Point} to\n * @returns {Point} vector\n */\nexport const createVector = (from: XY, to: XY): Point =>\n  new Point(to).subtract(from);\n\n/**\n * return the magnitude of a vector\n * @return {number}\n */\nexport const magnitude = (point: Point) => point.distanceFrom(zero);\n\n/**\n * Calculates the angle between 2 vectors\n * @param {Point} a\n * @param {Point} b\n * @returns the angle in radians from `a` to `b`\n */\nexport const calcAngleBetweenVectors = (a: Point, b: Point): TRadian =>\n  Math.atan2(crossProduct(a, b), dotProduct(a, b)) as TRadian;\n\n/**\n * Calculates the angle between the x axis and the vector\n * @param {Point} v\n * @returns the angle in radians of `v`\n */\nexport const calcVectorRotation = (v: Point) =>\n  calcAngleBetweenVectors(unitVectorX, v);\n\n/**\n * @param {Point} v\n * @returns {Point} vector representing the unit vector pointing to the direction of `v`\n */\nexport const getUnitVector = (v: Point): Point =>\n  v.eq(zero) ? v : v.scalarDivide(magnitude(v));\n\n/**\n * @param {Point} v\n * @param {Boolean} [counterClockwise] the direction of the orthogonal vector, defaults to `true`\n * @returns {Point} the unit orthogonal vector\n */\nexport const getOrthonormalVector = (\n  v: Point,\n  counterClockwise = true,\n): Point =>\n  getUnitVector(new Point(-v.y, v.x).scalarMultiply(counterClockwise ? 1 : -1));\n\n/**\n * Cross product of two vectors in 2D\n * @param {Point} a\n * @param {Point} b\n * @returns {number} the magnitude of Z vector\n */\nexport const crossProduct = (a: Point, b: Point): number =>\n  a.x * b.y - a.y * b.x;\n\n/**\n * Dot product of two vectors in 2D\n * @param {Point} a\n * @param {Point} b\n * @returns {number}\n */\nexport const dotProduct = (a: Point, b: Point): number => a.x * b.x + a.y * b.y;\n\n/**\n * Checks if the vector is between two others. It is considered\n * to be inside when the vector to be tested is between the\n * initial vector and the final vector (included) in a counterclockwise direction.\n * @param {Point} t vector to be tested\n * @param {Point} a initial vector\n * @param {Point} b final vector\n * @returns {boolean} true if the vector is among the others\n */\nexport const isBetweenVectors = (t: Point, a: Point, b: Point): boolean => {\n  if (t.eq(a) || t.eq(b)) return true;\n  const AxB = crossProduct(a, b),\n    AxT = crossProduct(a, t),\n    BxT = crossProduct(b, t);\n  return AxB >= 0 ? AxT >= 0 && BxT <= 0 : !(AxT <= 0 && BxT >= 0);\n};\n","import { classRegistry } from './ClassRegistry';\nimport { Color } from './color/Color';\nimport { config } from './config';\nimport { reNum } from './parser/constants';\nimport { Point } from './Point';\nimport type { FabricObject } from './shapes/Object/FabricObject';\nimport type { TClassProperties } from './typedefs';\nimport { uid } from './util/internals/uid';\nimport { pickBy } from './util/misc/pick';\nimport { degreesToRadians } from './util/misc/radiansDegreesConversion';\nimport { toFixed } from './util/misc/toFixed';\nimport { rotateVector } from './util/misc/vectors';\n\n/**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * - (?:\\s|^): This part captures either a whitespace character (\\s) or the beginning of a line (^). It's non-capturing (due to (?:...)), meaning it doesn't create a capturing group.\n   * - (-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?: This captures the first component of the shadow, which is the horizontal offset. Breaking it down:\n   *   - (-?\\d+): Captures an optional minus sign followed by one or more digits (integer part of the number).\n   *   - (?:\\.\\d*)?: Optionally captures a decimal point followed by zero or more digits (decimal part of the number).\n   *   - (?:px)?: Optionally captures the \"px\" unit.\n   *   - (?:\\s?|$): Captures either an optional whitespace or the end of the line. This whole part is wrapped in a non-capturing group and marked as optional with ?.\n   * - (-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?: Similar to the previous step, this captures the vertical offset.\n\n(\\d+(?:\\.\\d*)?(?:px)?)?: This captures the blur radius. It's similar to the horizontal offset but without the optional minus sign.\n\n(?:\\s+(-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?){0,1}: This captures an optional part for the color. It allows for whitespace followed by a component with an optional minus sign, digits, decimal point, and \"px\" unit.\n\n(?:$|\\s): This captures either the end of the line or a whitespace character. It ensures that the match ends either at the end of the string or with a whitespace character.\n   */\n// eslint-disable-next-line max-len\n\nconst shadowOffsetRegex = '(-?\\\\d+(?:\\\\.\\\\d*)?(?:px)?(?:\\\\s?|$))?';\n\nconst reOffsetsAndBlur = new RegExp(\n  '(?:\\\\s|^)' +\n    shadowOffsetRegex +\n    shadowOffsetRegex +\n    '(' +\n    reNum +\n    '?(?:px)?)?(?:\\\\s?|$)(?:$|\\\\s)',\n);\n\nexport const shadowDefaultValues: Partial<TClassProperties<Shadow>> = {\n  color: 'rgb(0,0,0)',\n  blur: 0,\n  offsetX: 0,\n  offsetY: 0,\n  affectStroke: false,\n  includeDefaultValues: true,\n  nonScaling: false,\n};\n\nexport type SerializedShadowOptions = {\n  color: string;\n  blur: number;\n  offsetX: number;\n  offsetY: number;\n  affectStroke: boolean;\n  nonScaling: boolean;\n  type: string;\n};\n\nexport class Shadow {\n  /**\n   * Shadow color\n   * @type String\n   * @default\n   */\n  declare color: string;\n\n  /**\n   * Shadow blur\n   * @type Number\n   */\n  declare blur: number;\n\n  /**\n   * Shadow horizontal offset\n   * @type Number\n   * @default\n   */\n  declare offsetX: number;\n\n  /**\n   * Shadow vertical offset\n   * @type Number\n   * @default\n   */\n  declare offsetY: number;\n\n  /**\n   * Whether the shadow should affect stroke operations\n   * @type Boolean\n   * @default\n   */\n  declare affectStroke: boolean;\n\n  /**\n   * Indicates whether toObject should include default values\n   * @type Boolean\n   * @default\n   */\n  declare includeDefaultValues: boolean;\n\n  /**\n   * When `false`, the shadow will scale with the object.\n   * When `true`, the shadow's offsetX, offsetY, and blur will not be affected by the object's scale.\n   * default to false\n   * @type Boolean\n   * @default\n   */\n  declare nonScaling: boolean;\n\n  declare id: number;\n\n  static ownDefaults = shadowDefaultValues;\n\n  static type = 'shadow';\n\n  /**\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n   */\n  constructor(options: Partial<TClassProperties<Shadow>>);\n  constructor(svgAttribute: string);\n  constructor(arg0: string | Partial<TClassProperties<Shadow>>) {\n    const options: Partial<TClassProperties<Shadow>> =\n      typeof arg0 === 'string' ? Shadow.parseShadow(arg0) : arg0;\n    Object.assign(this, Shadow.ownDefaults, options);\n    this.id = uid();\n  }\n\n  /**\n   * @param {String} value Shadow value to parse\n   * @return {Object} Shadow object with color, offsetX, offsetY and blur\n   */\n  static parseShadow(value: string) {\n    const shadowStr = value.trim(),\n      [, offsetX = 0, offsetY = 0, blur = 0] = (\n        reOffsetsAndBlur.exec(shadowStr) || []\n      ).map((value) => parseFloat(value) || 0),\n      color = (shadowStr.replace(reOffsetsAndBlur, '') || 'rgb(0,0,0)').trim();\n\n    return {\n      color,\n      offsetX,\n      offsetY,\n      blur,\n    };\n  }\n\n  /**\n   * Returns a string representation of an instance\n   * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n   * @return {String} Returns CSS3 text-shadow declaration\n   */\n  toString() {\n    return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n  }\n\n  /**\n   * Returns SVG representation of a shadow\n   * @param {FabricObject} object\n   * @return {String} SVG representation of a shadow\n   */\n  toSVG(object: FabricObject) {\n    const offset = rotateVector(\n        new Point(this.offsetX, this.offsetY),\n        degreesToRadians(-object.angle),\n      ),\n      BLUR_BOX = 20,\n      color = new Color(this.color);\n    let fBoxX = 40,\n      fBoxY = 40;\n\n    if (object.width && object.height) {\n      //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n      // we add some extra space to filter box to contain the blur ( 20 )\n      fBoxX =\n        toFixed(\n          (Math.abs(offset.x) + this.blur) / object.width,\n          config.NUM_FRACTION_DIGITS,\n        ) *\n          100 +\n        BLUR_BOX;\n      fBoxY =\n        toFixed(\n          (Math.abs(offset.y) + this.blur) / object.height,\n          config.NUM_FRACTION_DIGITS,\n        ) *\n          100 +\n        BLUR_BOX;\n    }\n    if (object.flipX) {\n      offset.x *= -1;\n    }\n    if (object.flipY) {\n      offset.y *= -1;\n    }\n\n    return `<filter id=\"SVGID_${this.id}\" y=\"-${fBoxY}%\" height=\"${\n      100 + 2 * fBoxY\n    }%\" x=\"-${fBoxX}%\" width=\"${\n      100 + 2 * fBoxX\n    }%\" >\\n\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"${toFixed(\n      this.blur ? this.blur / 2 : 0,\n      config.NUM_FRACTION_DIGITS,\n    )}\"></feGaussianBlur>\\n\\t<feOffset dx=\"${toFixed(\n      offset.x,\n      config.NUM_FRACTION_DIGITS,\n    )}\" dy=\"${toFixed(\n      offset.y,\n      config.NUM_FRACTION_DIGITS,\n    )}\" result=\"oBlur\" ></feOffset>\\n\\t<feFlood flood-color=\"${color.toRgb()}\" flood-opacity=\"${color.getAlpha()}\"/>\\n\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n\\t<feMerge>\\n\\t\\t<feMergeNode></feMergeNode>\\n\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n\\t</feMerge>\\n</filter>\\n`;\n  }\n\n  /**\n   * Returns object representation of a shadow\n   * @return {Object} Object representation of a shadow instance\n   */\n  toObject() {\n    const data: SerializedShadowOptions = {\n      color: this.color,\n      blur: this.blur,\n      offsetX: this.offsetX,\n      offsetY: this.offsetY,\n      affectStroke: this.affectStroke,\n      nonScaling: this.nonScaling,\n      type: (this.constructor as typeof Shadow).type,\n    };\n    const defaults = Shadow.ownDefaults as SerializedShadowOptions;\n    return !this.includeDefaultValues\n      ? pickBy(data, (value, key) => value !== defaults[key])\n      : data;\n  }\n\n  static async fromObject(options: Partial<TClassProperties<Shadow>>) {\n    return new this(options);\n  }\n}\n\nclassRegistry.setClass(Shadow, 'shadow');\n","export const capValue = (min: number, value: number, max: number) =>\n  Math.max(min, Math.min(value, max));\n","import {\n  TOP,\n  LEFT,\n  SCALE_Y,\n  SCALE_X,\n  SKEW_X,\n  SKEW_Y,\n  FILL,\n  STROKE,\n} from '../../constants';\nimport type { TClassProperties } from '../../typedefs';\nimport type { InteractiveFabricObject } from './InteractiveObject';\nimport type { FabricObject } from './Object';\n\nexport const stateProperties = [\n  TOP,\n  LEFT,\n  SCALE_X,\n  SCALE_Y,\n  'flipX',\n  'flipY',\n  'originX',\n  'originY',\n  'angle',\n  'opacity',\n  'globalCompositeOperation',\n  'shadow',\n  'visible',\n  SKEW_X,\n  SKEW_Y,\n];\n\nexport const cacheProperties = [\n  FILL,\n  STROKE,\n  'strokeWidth',\n  'strokeDashArray',\n  'width',\n  'height',\n  'paintFirst',\n  'strokeUniform',\n  'strokeLineCap',\n  'strokeDashOffset',\n  'strokeLineJoin',\n  'strokeMiterLimit',\n  'backgroundColor',\n  'clipPath',\n];\n\nexport const fabricObjectDefaultValues: Partial<\n  TClassProperties<FabricObject>\n> = {\n  // see composeMatrix() to see order of transforms. First defaults listed based on this\n  top: 0,\n  left: 0,\n  width: 0,\n  height: 0,\n  angle: 0,\n  flipX: false,\n  flipY: false,\n  scaleX: 1,\n  scaleY: 1,\n  minScaleLimit: 0,\n  skewX: 0,\n  skewY: 0,\n  originX: LEFT,\n  originY: TOP,\n  strokeWidth: 1,\n  strokeUniform: false,\n  padding: 0,\n  opacity: 1,\n  paintFirst: FILL,\n  fill: 'rgb(0,0,0)',\n  fillRule: 'nonzero',\n  stroke: null,\n  strokeDashArray: null,\n  strokeDashOffset: 0,\n  strokeLineCap: 'butt',\n  strokeLineJoin: 'miter',\n  strokeMiterLimit: 4,\n  globalCompositeOperation: 'source-over',\n  backgroundColor: '',\n  shadow: null,\n  visible: true,\n  includeDefaultValues: true,\n  excludeFromExport: false,\n  objectCaching: true,\n  clipPath: undefined,\n  inverted: false,\n  absolutePositioned: false,\n  centeredRotation: true,\n  centeredScaling: false,\n  dirty: true,\n} as const;\n\nexport const interactiveObjectDefaultValues: Partial<\n  TClassProperties<InteractiveFabricObject>\n> = {\n  noScaleCache: true,\n  lockMovementX: false,\n  lockMovementY: false,\n  lockRotation: false,\n  lockScalingX: false,\n  lockScalingY: false,\n  lockSkewingX: false,\n  lockSkewingY: false,\n  lockScalingFlip: false,\n  cornerSize: 13,\n  touchCornerSize: 24,\n  transparentCorners: true,\n  cornerColor: '#7165FF',\n  cornerStyle: 'multiPoint',\n  cornerStrokeColor: '#ffffff',\n  cornerSecondColor: '#7165FF',\n  cornerDashArray: null,\n  hasControls: true,\n  borderColor: '#7165FF',\n  borderDashArray: null,\n  borderOpacityWhenMoving: 0.4,\n  borderScaleFactor: 1,\n  hasBorders: true,\n  selectionBackgroundColor: '',\n  selectable: true,\n  evented: true,\n  perPixelTargetFind: false,\n  activeOn: 'down',\n  hoverCursor: null,\n  moveCursor: null,\n};\n","/**\n * Easing functions\n * @see {@link http://gizma.com/easing/ Easing Equations by Robert Penner}\n */\n\nimport { twoMathPi, halfPI } from '../../constants';\nimport type { TEasingFunction } from './types';\n\nconst normalize = (a: number, c: number, p: number, s: number) => {\n  if (a < Math.abs(c)) {\n    a = c;\n    s = p / 4;\n  } else {\n    //handle the 0/0 case:\n    if (c === 0 && a === 0) {\n      s = (p / twoMathPi) * Math.asin(1);\n    } else {\n      s = (p / twoMathPi) * Math.asin(c / a);\n    }\n  }\n  return { a, c, p, s };\n};\n\nconst elastic = (\n  a: number,\n  s: number,\n  p: number,\n  t: number,\n  d: number,\n): number =>\n  a * Math.pow(2, 10 * (t -= 1)) * Math.sin(((t * d - s) * twoMathPi) / p);\n\n/**\n * Default sinusoidal easing\n */\nexport const defaultEasing: TEasingFunction = (t, b, c, d) =>\n  -c * Math.cos((t / d) * halfPI) + c + b;\n\n/**\n * Cubic easing in\n */\nexport const easeInCubic: TEasingFunction = (t, b, c, d) =>\n  c * (t / d) ** 3 + b;\n\n/**\n * Cubic easing out\n */\nexport const easeOutCubic: TEasingFunction = (t, b, c, d) =>\n  c * ((t / d - 1) ** 3 + 1) + b;\n\n/**\n * Cubic easing in and out\n */\nexport const easeInOutCubic: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 3 + b;\n  }\n  return (c / 2) * ((t - 2) ** 3 + 2) + b;\n};\n\n/**\n * Quartic easing in\n */\nexport const easeInQuart: TEasingFunction = (t, b, c, d) =>\n  c * (t /= d) * t ** 3 + b;\n\n/**\n * Quartic easing out\n */\nexport const easeOutQuart: TEasingFunction = (t, b, c, d) =>\n  -c * ((t = t / d - 1) * t ** 3 - 1) + b;\n\n/**\n * Quartic easing in and out\n */\nexport const easeInOutQuart: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 4 + b;\n  }\n  return (-c / 2) * ((t -= 2) * t ** 3 - 2) + b;\n};\n\n/**\n * Quintic easing in\n */\nexport const easeInQuint: TEasingFunction = (t, b, c, d) =>\n  c * (t / d) ** 5 + b;\n\n/**\n * Quintic easing out\n */\nexport const easeOutQuint: TEasingFunction = (t, b, c, d) =>\n  c * ((t / d - 1) ** 5 + 1) + b;\n\n/**\n * Quintic easing in and out\n */\nexport const easeInOutQuint: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 5 + b;\n  }\n  return (c / 2) * ((t - 2) ** 5 + 2) + b;\n};\n\n/**\n * Sinusoidal easing in\n */\nexport const easeInSine: TEasingFunction = (t, b, c, d) =>\n  -c * Math.cos((t / d) * halfPI) + c + b;\n\n/**\n * Sinusoidal easing out\n */\nexport const easeOutSine: TEasingFunction = (t, b, c, d) =>\n  c * Math.sin((t / d) * halfPI) + b;\n\n/**\n * Sinusoidal easing in and out\n */\nexport const easeInOutSine: TEasingFunction = (t, b, c, d) =>\n  (-c / 2) * (Math.cos((Math.PI * t) / d) - 1) + b;\n\n/**\n * Exponential easing in\n */\nexport const easeInExpo: TEasingFunction = (t, b, c, d) =>\n  t === 0 ? b : c * 2 ** (10 * (t / d - 1)) + b;\n\n/**\n * Exponential easing out\n */\nexport const easeOutExpo: TEasingFunction = (t, b, c, d) =>\n  t === d ? b + c : c * -(2 ** ((-10 * t) / d) + 1) + b;\n\n/**\n * Exponential easing in and out\n */\nexport const easeInOutExpo: TEasingFunction = (t, b, c, d) => {\n  if (t === 0) {\n    return b;\n  }\n  if (t === d) {\n    return b + c;\n  }\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * 2 ** (10 * (t - 1)) + b;\n  }\n  return (c / 2) * -(2 ** (-10 * --t) + 2) + b;\n};\n\n/**\n * Circular easing in\n */\nexport const easeInCirc: TEasingFunction = (t, b, c, d) =>\n  -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n\n/**\n * Circular easing out\n */\nexport const easeOutCirc: TEasingFunction = (t, b, c, d) =>\n  c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n\n/**\n * Circular easing in and out\n */\nexport const easeInOutCirc: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (-c / 2) * (Math.sqrt(1 - t ** 2) - 1) + b;\n  }\n  return (c / 2) * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n};\n\n/**\n * Elastic easing in\n */\nexport const easeInElastic: TEasingFunction = (t, b, c, d) => {\n  const s = 1.70158,\n    a = c;\n  let p = 0;\n  if (t === 0) {\n    return b;\n  }\n  t /= d;\n  if (t === 1) {\n    return b + c;\n  }\n  if (!p) {\n    p = d * 0.3;\n  }\n  const { a: normA, s: normS, p: normP } = normalize(a, c, p, s);\n  return -elastic(normA, normS, normP, t, d) + b;\n};\n\n/**\n * Elastic easing out\n */\nexport const easeOutElastic: TEasingFunction = (t, b, c, d) => {\n  const s = 1.70158,\n    a = c;\n  let p = 0;\n  if (t === 0) {\n    return b;\n  }\n  t /= d;\n  if (t === 1) {\n    return b + c;\n  }\n  if (!p) {\n    p = d * 0.3;\n  }\n  const { a: normA, s: normS, p: normP, c: normC } = normalize(a, c, p, s);\n  return (\n    normA * 2 ** (-10 * t) * Math.sin(((t * d - normS) * twoMathPi) / normP) +\n    normC +\n    b\n  );\n};\n\n/**\n * Elastic easing in and out\n */\nexport const easeInOutElastic: TEasingFunction = (t, b, c, d) => {\n  const s = 1.70158,\n    a = c;\n  let p = 0;\n  if (t === 0) {\n    return b;\n  }\n  t /= d / 2;\n  if (t === 2) {\n    return b + c;\n  }\n  if (!p) {\n    p = d * (0.3 * 1.5);\n  }\n  const { a: normA, s: normS, p: normP, c: normC } = normalize(a, c, p, s);\n  if (t < 1) {\n    return -0.5 * elastic(normA, normS, normP, t, d) + b;\n  }\n  return (\n    normA *\n      Math.pow(2, -10 * (t -= 1)) *\n      Math.sin(((t * d - normS) * twoMathPi) / normP) *\n      0.5 +\n    normC +\n    b\n  );\n};\n\n/**\n * Backwards easing in\n */\nexport const easeInBack: TEasingFunction = (t, b, c, d, s = 1.70158) =>\n  c * (t /= d) * t * ((s + 1) * t - s) + b;\n\n/**\n * Backwards easing out\n */\nexport const easeOutBack: TEasingFunction = (t, b, c, d, s = 1.70158) =>\n  c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n\n/**\n * Backwards easing in and out\n */\nexport const easeInOutBack: TEasingFunction = (t, b, c, d, s = 1.70158) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n  }\n  return (c / 2) * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n};\n\n/**\n * Bouncing easing out\n */\nexport const easeOutBounce: TEasingFunction = (t, b, c, d) => {\n  if ((t /= d) < 1 / 2.75) {\n    return c * (7.5625 * t * t) + b;\n  } else if (t < 2 / 2.75) {\n    return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n  } else if (t < 2.5 / 2.75) {\n    return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n  } else {\n    return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n  }\n};\n\n/**\n * Bouncing easing in\n */\nexport const easeInBounce: TEasingFunction = (t, b, c, d) =>\n  c - easeOutBounce(d - t, 0, c, d) + b;\n\n/**\n * Bouncing easing in and out\n */\nexport const easeInOutBounce: TEasingFunction = (t, b, c, d) =>\n  t < d / 2\n    ? easeInBounce(t * 2, 0, c, d) * 0.5 + b\n    : easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n\n/**\n * Quadratic easing in\n */\nexport const easeInQuad: TEasingFunction = (t, b, c, d) => c * (t /= d) * t + b;\n\n/**\n * Quadratic easing out\n */\nexport const easeOutQuad: TEasingFunction = (t, b, c, d) =>\n  -c * (t /= d) * (t - 2) + b;\n\n/**\n * Quadratic easing in and out\n */\nexport const easeInOutQuad: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 2 + b;\n  }\n  return (-c / 2) * (--t * (t - 2) - 1) + b;\n};\n","import { noop } from '../../constants';\nimport { requestAnimFrame } from './AnimationFrameProvider';\nimport { runningAnimations } from './AnimationRegistry';\nimport { defaultEasing } from './easing';\nimport type {\n  AnimationState,\n  TAbortCallback,\n  TBaseAnimationOptions,\n  TEasingFunction,\n  TOnAnimationChangeCallback,\n} from './types';\n\nconst defaultAbort = () => false;\n\nexport abstract class AnimationBase<\n  T extends number | number[] = number | number[],\n> {\n  declare readonly startValue: T;\n  declare readonly endValue: T;\n  declare readonly duration: number;\n  declare readonly delay: number;\n\n  protected declare readonly byValue: T;\n  protected declare readonly easing: TEasingFunction<T>;\n\n  private declare readonly _onStart: VoidFunction;\n  private declare readonly _onChange: TOnAnimationChangeCallback<T, void>;\n  private declare readonly _onComplete: TOnAnimationChangeCallback<T, void>;\n  private declare readonly _abort: TAbortCallback<T>;\n\n  /**\n   * Used to register the animation to a target object\n   * so that it can be cancelled within the object context\n   */\n  declare readonly target?: unknown;\n\n  private _state: AnimationState = 'pending';\n  /**\n   * Time %, or the ratio of `timeElapsed / duration`\n   * @see tick\n   */\n  durationProgress = 0;\n  /**\n   * Value %, or the ratio of `(currentValue - startValue) / (endValue - startValue)`\n   */\n  valueProgress = 0;\n  /**\n   * Current value\n   */\n  declare value: T;\n  /**\n   * Animation start time ms\n   */\n  private declare startTime: number;\n\n  constructor({\n    startValue,\n    byValue,\n    duration = 500,\n    delay = 0,\n    easing = defaultEasing,\n    onStart = noop,\n    onChange = noop,\n    onComplete = noop,\n    abort = defaultAbort,\n    target,\n  }: TBaseAnimationOptions<T>) {\n    this.tick = this.tick.bind(this);\n\n    this.duration = duration;\n    this.delay = delay;\n    this.easing = easing;\n    this._onStart = onStart;\n    this._onChange = onChange;\n    this._onComplete = onComplete;\n    this._abort = abort;\n    this.target = target;\n\n    this.startValue = startValue;\n    this.byValue = byValue;\n    this.value = this.startValue;\n    this.endValue = Object.freeze(this.calculate(this.duration).value);\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  isDone() {\n    return this._state === 'aborted' || this._state === 'completed';\n  }\n\n  /**\n   * Calculate the current value based on the easing parameters\n   * @param timeElapsed in ms\n   * @protected\n   */\n  protected abstract calculate(timeElapsed: number): {\n    value: T;\n    valueProgress: number;\n  };\n\n  start() {\n    const firstTick: FrameRequestCallback = (timestamp) => {\n      if (this._state !== 'pending') return;\n      this.startTime = timestamp || +new Date();\n      this._state = 'running';\n      this._onStart();\n      this.tick(this.startTime);\n    };\n\n    this.register();\n\n    // setTimeout(cb, 0) will run cb on the next frame, causing a delay\n    // we don't want that\n    if (this.delay > 0) {\n      setTimeout(() => requestAnimFrame(firstTick), this.delay);\n    } else {\n      requestAnimFrame(firstTick);\n    }\n  }\n\n  private tick(t: number) {\n    const durationMs = (t || +new Date()) - this.startTime;\n    const boundDurationMs = Math.min(durationMs, this.duration);\n    this.durationProgress = boundDurationMs / this.duration;\n    const { value, valueProgress } = this.calculate(boundDurationMs);\n    this.value = Object.freeze(value);\n    this.valueProgress = valueProgress;\n\n    if (this._state === 'aborted') {\n      return;\n    } else if (\n      this._abort(this.value, this.valueProgress, this.durationProgress)\n    ) {\n      this._state = 'aborted';\n      this.unregister();\n    } else if (durationMs >= this.duration) {\n      this.durationProgress = this.valueProgress = 1;\n      this._onChange(this.endValue, this.valueProgress, this.durationProgress);\n      this._state = 'completed';\n      this._onComplete(\n        this.endValue,\n        this.valueProgress,\n        this.durationProgress,\n      );\n      this.unregister();\n    } else {\n      this._onChange(this.value, this.valueProgress, this.durationProgress);\n      requestAnimFrame(this.tick);\n    }\n  }\n\n  private register() {\n    runningAnimations.push(this as unknown as AnimationBase);\n  }\n\n  private unregister() {\n    runningAnimations.remove(this as unknown as AnimationBase);\n  }\n\n  abort() {\n    this._state = 'aborted';\n    this.unregister();\n  }\n}\n","import { AnimationBase } from './AnimationBase';\nimport type { ValueAnimationOptions } from './types';\n\nexport class ValueAnimation extends AnimationBase<number> {\n  constructor({\n    startValue = 0,\n    endValue = 100,\n    ...otherOptions\n  }: ValueAnimationOptions) {\n    super({\n      ...otherOptions,\n      startValue,\n      byValue: endValue - startValue,\n    });\n  }\n\n  protected calculate(timeElapsed: number) {\n    const value = this.easing(\n      timeElapsed,\n      this.startValue,\n      this.byValue,\n      this.duration,\n    );\n    return {\n      value,\n      valueProgress: Math.abs((value - this.startValue) / this.byValue),\n    };\n  }\n}\n","import { AnimationBase } from './AnimationBase';\nimport type { ArrayAnimationOptions } from './types';\n\nexport class ArrayAnimation extends AnimationBase<number[]> {\n  constructor({\n    startValue = [0],\n    endValue = [100],\n    ...options\n  }: ArrayAnimationOptions) {\n    super({\n      ...options,\n      startValue,\n      byValue: endValue.map((value, i) => value - startValue[i]),\n    });\n  }\n  protected calculate(timeElapsed: number) {\n    const values = this.startValue.map((value, i) =>\n      this.easing(timeElapsed, value, this.byValue[i], this.duration, i),\n    );\n    return {\n      value: values,\n      valueProgress: Math.abs(\n        (values[0] - this.startValue[0]) / this.byValue[0],\n      ),\n    };\n  }\n}\n","import { Color } from '../../color/Color';\nimport type { TRGBAColorSource } from '../../color/typedefs';\nimport { halfPI } from '../../constants';\nimport { capValue } from '../misc/capValue';\nimport { AnimationBase } from './AnimationBase';\nimport type {\n  ColorAnimationOptions,\n  TEasingFunction,\n  TOnAnimationChangeCallback,\n} from './types';\n\nconst defaultColorEasing: TEasingFunction = (\n  timeElapsed,\n  startValue,\n  byValue,\n  duration,\n) => {\n  const durationProgress = 1 - Math.cos((timeElapsed / duration) * halfPI);\n  return startValue + byValue * durationProgress;\n};\n\nconst wrapColorCallback = <R>(\n  callback?: TOnAnimationChangeCallback<string, R>,\n) =>\n  callback &&\n  ((rgba: TRGBAColorSource, valueProgress: number, durationProgress: number) =>\n    callback(new Color(rgba).toRgba(), valueProgress, durationProgress));\n\nexport class ColorAnimation extends AnimationBase<TRGBAColorSource> {\n  constructor({\n    startValue,\n    endValue,\n    easing = defaultColorEasing,\n    onChange,\n    onComplete,\n    abort,\n    ...options\n  }: ColorAnimationOptions) {\n    const startColor = new Color(startValue).getSource();\n    const endColor = new Color(endValue).getSource();\n    super({\n      ...options,\n      startValue: startColor,\n      byValue: endColor.map(\n        (value, i) => value - startColor[i],\n      ) as TRGBAColorSource,\n      easing,\n      onChange: wrapColorCallback(onChange),\n      onComplete: wrapColorCallback(onComplete),\n      abort: wrapColorCallback(abort),\n    });\n  }\n  protected calculate(timeElapsed: number) {\n    const [r, g, b, a] = this.startValue.map((value, i) =>\n      this.easing(timeElapsed, value, this.byValue[i], this.duration, i),\n    ) as TRGBAColorSource;\n    const value = [\n      ...[r, g, b].map(Math.round),\n      capValue(0, a, 1),\n    ] as TRGBAColorSource;\n    return {\n      value,\n      valueProgress:\n        // to correctly calculate the change ratio we must find a changed value\n        value\n          .map((p, i) =>\n            this.byValue[i] !== 0\n              ? Math.abs((p - this.startValue[i]) / this.byValue[i])\n              : 0,\n          )\n          .find((p) => p !== 0) || 0,\n    };\n  }\n}\n","import { ValueAnimation } from './ValueAnimation';\nimport { ArrayAnimation } from './ArrayAnimation';\nimport { ColorAnimation } from './ColorAnimation';\nimport type {\n  ValueAnimationOptions,\n  ArrayAnimationOptions,\n  ColorAnimationOptions,\n} from './types';\nimport type { TColorArg } from '../../color/typedefs';\n\nexport type TAnimation<T extends number | number[] | TColorArg> =\n  T extends TColorArg\n    ? ColorAnimation\n    : T extends number[]\n      ? ArrayAnimation\n      : ValueAnimation;\n\nconst isArrayAnimation = (\n  options: ArrayAnimationOptions | ValueAnimationOptions,\n): options is ArrayAnimationOptions => {\n  return Array.isArray(options.startValue) || Array.isArray(options.endValue);\n};\n\n/**\n * Changes value(s) from startValue to endValue within a certain period of time,\n * invoking callbacks as the value(s) change.\n *\n * @example\n * animate({\n *   startValue: 1,\n *   endValue: 0,\n *   onChange: (v) => {\n *     obj.set('opacity', v);\n *     // since we are running in a requested frame we should call `renderAll` and not `requestRenderAll`\n *     canvas.renderAll();\n *   }\n * });\n *\n * @example Using lists:\n * animate({\n *   startValue: [1, 2, 3],\n *   endValue: [2, 4, 6],\n *   onChange: ([x, y, zoom]) => {\n *     canvas.zoomToPoint(new Point(x, y), zoom);\n *     canvas.renderAll();\n *   }\n * });\n *\n */\nexport function animate(options: ArrayAnimationOptions): ArrayAnimation;\nexport function animate(options: ValueAnimationOptions): ValueAnimation;\nexport function animate<\n  T extends ValueAnimationOptions | ArrayAnimationOptions,\n>(\n  options: T,\n): T extends ArrayAnimationOptions ? ArrayAnimation : ValueAnimation;\nexport function animate<\n  T extends ValueAnimationOptions | ArrayAnimationOptions,\n  R extends T extends ArrayAnimationOptions ? ArrayAnimation : ValueAnimation,\n>(options: T): R {\n  const animation = (\n    isArrayAnimation(options)\n      ? new ArrayAnimation(options)\n      : new ValueAnimation(options)\n  ) as R;\n  animation.start();\n  return animation;\n}\n\nexport function animateColor(options: ColorAnimationOptions) {\n  const animation = new ColorAnimation(options);\n  animation.start();\n  return animation;\n}\n","import { Point } from './Point';\nimport { createVector } from './util/misc/vectors';\n\n/* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\nexport type IntersectionType = 'Intersection' | 'Coincident' | 'Parallel';\n\nexport class Intersection {\n  declare points: Point[];\n\n  declare status?: IntersectionType;\n\n  constructor(status?: IntersectionType) {\n    this.status = status;\n    this.points = [];\n  }\n\n  /**\n   * Used to verify if a point is alredy in the collection\n   * @param {Point} point\n   * @returns {boolean}\n   */\n  private includes(point: Point): boolean {\n    return this.points.some((p) => p.eq(point));\n  }\n\n  /**\n   * Appends points of intersection\n   * @param {...Point[]} points\n   * @return {Intersection} thisArg\n   * @chainable\n   */\n  private append(...points: Point[]): Intersection {\n    this.points = this.points.concat(\n      points.filter((point) => {\n        return !this.includes(point);\n      }),\n    );\n    return this;\n  }\n\n  /**\n   * check if point T is on the segment or line defined between A and B\n   *\n   * @param {Point} T the point we are checking for\n   * @param {Point} A one extremity of the segment\n   * @param {Point} B the other extremity of the segment\n   * @param [infinite] if true checks if `T` is on the line defined by `A` and `B`\n   * @returns true if `T` is contained\n   */\n  static isPointContained(T: Point, A: Point, B: Point, infinite = false) {\n    if (A.eq(B)) {\n      // Edge case: the segment is a point, we check for coincidence,\n      // infinite param has no meaning because there are infinite lines to consider\n      return T.eq(A);\n    } else if (A.x === B.x) {\n      // Edge case: horizontal line.\n      // we first check if T.x has the same value, and then if T.y is contained between A.y and B.y\n      return (\n        T.x === A.x &&\n        (infinite || (T.y >= Math.min(A.y, B.y) && T.y <= Math.max(A.y, B.y)))\n      );\n    } else if (A.y === B.y) {\n      // Edge case: vertical line.\n      // we first check if T.y has the same value, and then if T.x is contained between A.x and B.x\n      return (\n        T.y === A.y &&\n        (infinite || (T.x >= Math.min(A.x, B.x) && T.x <= Math.max(A.x, B.x)))\n      );\n    } else {\n      // Generic case: sloped line.\n      // we check that AT has the same slope as AB\n      // for the segment case we need both the vectors to have the same direction and for AT to be lte AB in size\n      // for the infinite case we check the absolute value of the slope, since direction is meaningless\n      const AB = createVector(A, B);\n      const AT = createVector(A, T);\n      const s = AT.divide(AB);\n      return infinite\n        ? Math.abs(s.x) === Math.abs(s.y)\n        : s.x === s.y && s.x >= 0 && s.x <= 1;\n    }\n  }\n\n  /**\n   * Use the ray casting algorithm to determine if {@link point} is in the polygon defined by {@link points}\n   * @see https://en.wikipedia.org/wiki/Point_in_polygon\n   * @param point\n   * @param points polygon points\n   * @returns\n   */\n  static isPointInPolygon(point: Point, points: Point[]) {\n    const other = new Point(point).setX(\n      Math.min(point.x - 1, ...points.map((p) => p.x)),\n    );\n    let hits = 0;\n    for (let index = 0; index < points.length; index++) {\n      const inter = this.intersectSegmentSegment(\n        // polygon side\n        points[index],\n        points[(index + 1) % points.length],\n        // ray\n        point,\n        other,\n      );\n      if (inter.includes(point)) {\n        // point is on the polygon side\n        return true;\n      }\n      hits += Number(inter.status === 'Intersection');\n    }\n    return hits % 2 === 1;\n  }\n\n  /**\n   * Checks if a line intersects another\n   * @see {@link https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection line intersection}\n   * @see {@link https://en.wikipedia.org/wiki/Cramer%27s_rule Cramer's rule}\n   * @static\n   * @param {Point} a1\n   * @param {Point} a2\n   * @param {Point} b1\n   * @param {Point} b2\n   * @param {boolean} [aInfinite=true] check segment intersection by passing `false`\n   * @param {boolean} [bInfinite=true] check segment intersection by passing `false`\n   * @return {Intersection}\n   */\n  static intersectLineLine(\n    a1: Point,\n    a2: Point,\n    b1: Point,\n    b2: Point,\n    aInfinite = true,\n    bInfinite = true,\n  ): Intersection {\n    const a2xa1x = a2.x - a1.x,\n      a2ya1y = a2.y - a1.y,\n      b2xb1x = b2.x - b1.x,\n      b2yb1y = b2.y - b1.y,\n      a1xb1x = a1.x - b1.x,\n      a1yb1y = a1.y - b1.y,\n      uaT = b2xb1x * a1yb1y - b2yb1y * a1xb1x,\n      ubT = a2xa1x * a1yb1y - a2ya1y * a1xb1x,\n      uB = b2yb1y * a2xa1x - b2xb1x * a2ya1y;\n    if (uB !== 0) {\n      const ua = uaT / uB,\n        ub = ubT / uB;\n      if (\n        (aInfinite || (0 <= ua && ua <= 1)) &&\n        (bInfinite || (0 <= ub && ub <= 1))\n      ) {\n        return new Intersection('Intersection').append(\n          new Point(a1.x + ua * a2xa1x, a1.y + ua * a2ya1y),\n        );\n      } else {\n        return new Intersection();\n      }\n    } else {\n      if (uaT === 0 || ubT === 0) {\n        const segmentsCoincide =\n          aInfinite ||\n          bInfinite ||\n          Intersection.isPointContained(a1, b1, b2) ||\n          Intersection.isPointContained(a2, b1, b2) ||\n          Intersection.isPointContained(b1, a1, a2) ||\n          Intersection.isPointContained(b2, a1, a2);\n        return new Intersection(segmentsCoincide ? 'Coincident' : undefined);\n      } else {\n        return new Intersection('Parallel');\n      }\n    }\n  }\n\n  /**\n   * Checks if a segment intersects a line\n   * @see {@link intersectLineLine} for line intersection\n   * @static\n   * @param {Point} s1 boundary point of segment\n   * @param {Point} s2 other boundary point of segment\n   * @param {Point} l1 point on line\n   * @param {Point} l2 other point on line\n   * @return {Intersection}\n   */\n  static intersectSegmentLine(\n    s1: Point,\n    s2: Point,\n    l1: Point,\n    l2: Point,\n  ): Intersection {\n    return Intersection.intersectLineLine(s1, s2, l1, l2, false, true);\n  }\n\n  /**\n   * Checks if a segment intersects another\n   * @see {@link intersectLineLine} for line intersection\n   * @static\n   * @param {Point} a1 boundary point of segment\n   * @param {Point} a2 other boundary point of segment\n   * @param {Point} b1 boundary point of segment\n   * @param {Point} b2 other boundary point of segment\n   * @return {Intersection}\n   */\n  static intersectSegmentSegment(\n    a1: Point,\n    a2: Point,\n    b1: Point,\n    b2: Point,\n  ): Intersection {\n    return Intersection.intersectLineLine(a1, a2, b1, b2, false, false);\n  }\n\n  /**\n   * Checks if line intersects polygon\n   *\n   * @todo account for stroke\n   *\n   * @static\n   * @see {@link intersectSegmentPolygon} for segment intersection\n   * @param {Point} a1 point on line\n   * @param {Point} a2 other point on line\n   * @param {Point[]} points polygon points\n   * @param {boolean} [infinite=true] check segment intersection by passing `false`\n   * @return {Intersection}\n   */\n  static intersectLinePolygon(\n    a1: Point,\n    a2: Point,\n    points: Point[],\n    infinite = true,\n  ): Intersection {\n    const result = new Intersection();\n    const length = points.length;\n\n    for (let i = 0, b1, b2, inter; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2, infinite, false);\n      if (inter.status === 'Coincident') {\n        return inter;\n      }\n      result.append(...inter.points);\n    }\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  }\n\n  /**\n   * Checks if segment intersects polygon\n   * @static\n   * @see {@link intersectLinePolygon} for line intersection\n   * @param {Point} a1 boundary point of segment\n   * @param {Point} a2 other boundary point of segment\n   * @param {Point[]} points polygon points\n   * @return {Intersection}\n   */\n  static intersectSegmentPolygon(\n    a1: Point,\n    a2: Point,\n    points: Point[],\n  ): Intersection {\n    return Intersection.intersectLinePolygon(a1, a2, points, false);\n  }\n\n  /**\n   * Checks if polygon intersects another polygon\n   *\n   * @todo account for stroke\n   *\n   * @static\n   * @param {Point[]} points1\n   * @param {Point[]} points2\n   * @return {Intersection}\n   */\n  static intersectPolygonPolygon(\n    points1: Point[],\n    points2: Point[],\n  ): Intersection {\n    const result = new Intersection(),\n      length = points1.length;\n    const coincidences: Intersection[] = [];\n\n    for (let i = 0; i < length; i++) {\n      const a1 = points1[i],\n        a2 = points1[(i + 1) % length],\n        inter = Intersection.intersectSegmentPolygon(a1, a2, points2);\n      if (inter.status === 'Coincident') {\n        coincidences.push(inter);\n        result.append(a1, a2);\n      } else {\n        result.append(...inter.points);\n      }\n    }\n\n    if (coincidences.length > 0 && coincidences.length === points1.length) {\n      return new Intersection('Coincident');\n    } else if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  }\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @see {@link intersectPolygonPolygon} for polygon intersection\n   * @param {Point[]} points polygon points\n   * @param {Point} r1 top left point of rect\n   * @param {Point} r2 bottom right point of rect\n   * @return {Intersection}\n   */\n  static intersectPolygonRectangle(\n    points: Point[],\n    r1: Point,\n    r2: Point,\n  ): Intersection {\n    const min = r1.min(r2),\n      max = r1.max(r2),\n      topRight = new Point(max.x, min.y),\n      bottomLeft = new Point(min.x, max.y);\n\n    return Intersection.intersectPolygonPolygon(points, [\n      min,\n      topRight,\n      max,\n      bottomLeft,\n    ]);\n  }\n}\n","import type {\n  TBBox,\n  TCornerPoint,\n  TDegree,\n  TMat2D,\n  TOriginX,\n  TOriginY,\n} from '../../typedefs';\nimport { SCALE_X, SCALE_Y, iMatrix } from '../../constants';\nimport { Intersection } from '../../Intersection';\nimport { Point } from '../../Point';\nimport { makeBoundingBoxFromPoints } from '../../util/misc/boundingBoxFromPoints';\nimport {\n  createRotateMatrix,\n  createTranslateMatrix,\n  composeMatrix,\n  invertTransform,\n  multiplyTransformMatrices,\n  transformPoint,\n  calcPlaneRotation,\n} from '../../util/misc/matrix';\nimport { radiansToDegrees } from '../../util/misc/radiansDegreesConversion';\nimport type { Canvas } from '../../canvas/Canvas';\nimport type { StaticCanvas } from '../../canvas/StaticCanvas';\nimport type { ObjectEvents } from '../../EventTypeDefs';\nimport type { ControlProps } from './types/ControlProps';\nimport { resolveOrigin } from '../../util/misc/resolveOrigin';\nimport type { Group } from '../Group';\nimport { calcDimensionsMatrix } from '../../util/misc/matrix';\nimport { sizeAfterTransform } from '../../util/misc/objectTransforms';\nimport { degreesToRadians } from '../../util/misc/radiansDegreesConversion';\nimport { CommonMethods } from '../../CommonMethods';\nimport type { BaseProps } from './types/BaseProps';\nimport type { FillStrokeProps } from './types/FillStrokeProps';\nimport { CENTER, LEFT, TOP } from '../../constants';\n\ntype TMatrixCache = {\n  key: number[];\n  value: TMat2D;\n};\n\ntype TACoords = TCornerPoint;\n\nexport class ObjectGeometry<EventSpec extends ObjectEvents = ObjectEvents>\n  extends CommonMethods<EventSpec>\n  implements\n    Pick<ControlProps, 'padding'>,\n    BaseProps,\n    Pick<FillStrokeProps, 'strokeWidth' | 'strokeUniform'>\n{\n  // #region Geometry\n\n  declare padding: number;\n\n  /**\n   * Describe object's corner position in scene coordinates.\n   * The coordinates are derived from the following:\n   * left, top, width, height, scaleX, scaleY, skewX, skewY, angle, strokeWidth.\n   * The coordinates do not depend on viewport changes.\n   * The coordinates get updated with {@link setCoords}.\n   * You can calculate them without updating with {@link calcACoords()}\n   */\n  declare aCoords: TACoords;\n\n  /**\n   * storage cache for object transform matrix\n   */\n  declare ownMatrixCache?: TMatrixCache;\n\n  /**\n   * storage cache for object full transform matrix\n   */\n  declare matrixCache?: TMatrixCache;\n\n  /**\n   * A Reference of the Canvas where the object is actually added\n   * @type StaticCanvas | Canvas;\n   * @default undefined\n   * @private\n   */\n  declare canvas?: StaticCanvas | Canvas;\n\n  /**\n   * @returns {number} x position according to object's {@link originX} property in canvas coordinate plane\n   */\n  getX(): number {\n    return this.getXY().x;\n  }\n\n  /**\n   * @param {number} value x position according to object's {@link originX} property in canvas coordinate plane\n   */\n  setX(value: number) {\n    this.setXY(this.getXY().setX(value));\n  }\n\n  /**\n   * @returns {number} y position according to object's {@link originY} property in canvas coordinate plane\n   */\n  getY(): number {\n    return this.getXY().y;\n  }\n\n  /**\n   * @param {number} value y position according to object's {@link originY} property in canvas coordinate plane\n   */\n  setY(value: number) {\n    this.setXY(this.getXY().setY(value));\n  }\n\n  /**\n   * @returns {number} x position according to object's {@link originX} property in parent's coordinate plane\\\n   * if parent is canvas then this property is identical to {@link getX}\n   */\n  getRelativeX(): number {\n    return this.left;\n  }\n\n  /**\n   * @param {number} value x position according to object's {@link originX} property in parent's coordinate plane\\\n   * if parent is canvas then this method is identical to {@link setX}\n   */\n  setRelativeX(value: number) {\n    this.left = value;\n  }\n\n  /**\n   * @returns {number} y position according to object's {@link originY} property in parent's coordinate plane\\\n   * if parent is canvas then this property is identical to {@link getY}\n   */\n  getRelativeY(): number {\n    return this.top;\n  }\n\n  /**\n   * @param {number} value y position according to object's {@link originY} property in parent's coordinate plane\\\n   * if parent is canvas then this property is identical to {@link setY}\n   */\n  setRelativeY(value: number) {\n    this.top = value;\n  }\n\n  /**\n   * @returns {Point} x position according to object's {@link originX} {@link originY} properties in canvas coordinate plane\n   */\n  getXY(): Point {\n    const relativePosition = this.getRelativeXY();\n    return this.group\n      ? transformPoint(relativePosition, this.group.calcTransformMatrix())\n      : relativePosition;\n  }\n\n  /**\n   * Set an object position to a particular point, the point is intended in absolute ( canvas ) coordinate.\n   * You can specify {@link originX} and {@link originY} values,\n   * that otherwise are the object's current values.\n   * @example <caption>Set object's bottom left corner to point (5,5) on canvas</caption>\n   * object.setXY(new Point(5, 5), 'left', 'bottom').\n   * @param {Point} point position in scene coordinate plane\n   * @param {TOriginX} [originX] Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} [originY] Vertical origin: 'top', 'center' or 'bottom'\n   */\n  setXY(point: Point, originX?: TOriginX, originY?: TOriginY) {\n    if (this.group) {\n      point = transformPoint(\n        point,\n        invertTransform(this.group.calcTransformMatrix()),\n      );\n    }\n    this.setRelativeXY(point, originX, originY);\n  }\n\n  /**\n   * @returns {Point} x,y position according to object's {@link originX} {@link originY} properties in parent's coordinate plane\n   */\n  getRelativeXY(): Point {\n    return new Point(this.left, this.top);\n  }\n\n  /**\n   * As {@link setXY}, but in current parent's coordinate plane (the current group if any or the canvas)\n   * @param {Point} point position according to object's {@link originX} {@link originY} properties in parent's coordinate plane\n   * @param {TOriginX} [originX] Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} [originY] Vertical origin: 'top', 'center' or 'bottom'\n   */\n  setRelativeXY(\n    point: Point,\n    originX: TOriginX = this.originX,\n    originY: TOriginY = this.originY,\n  ) {\n    this.setPositionByOrigin(point, originX, originY);\n  }\n\n  /**\n   * @deprecated intermidiate method to be removed, do not use\n   */\n  protected isStrokeAccountedForInDimensions() {\n    return false;\n  }\n\n  /**\n   * @return {Point[]} [tl, tr, br, bl] in the scene plane\n   */\n  getCoords(): Point[] {\n    const { tl, tr, br, bl } =\n      this.aCoords || (this.aCoords = this.calcACoords());\n    const coords = [tl, tr, br, bl];\n    if (this.group) {\n      const t = this.group.calcTransformMatrix();\n      return coords.map((p) => transformPoint(p, t));\n    }\n    return coords;\n  }\n\n  /**\n   * Checks if object intersects with the scene rect formed by {@link tl} and {@link br}\n   */\n  intersectsWithRect(tl: Point, br: Point): boolean {\n    const intersection = Intersection.intersectPolygonRectangle(\n      this.getCoords(),\n      tl,\n      br,\n    );\n    return intersection.status === 'Intersection';\n  }\n\n  /**\n   * Checks if object intersects with another object\n   * @param {Object} other Object to test\n   * @return {Boolean} true if object intersects with another object\n   */\n  intersectsWithObject(other: ObjectGeometry): boolean {\n    const intersection = Intersection.intersectPolygonPolygon(\n      this.getCoords(),\n      other.getCoords(),\n    );\n\n    return (\n      intersection.status === 'Intersection' ||\n      intersection.status === 'Coincident' ||\n      other.isContainedWithinObject(this) ||\n      this.isContainedWithinObject(other)\n    );\n  }\n\n  /**\n   * Checks if object is fully contained within area of another object\n   * @param {Object} other Object to test\n   * @return {Boolean} true if object is fully contained within area of another object\n   */\n  isContainedWithinObject(other: ObjectGeometry): boolean {\n    const points = this.getCoords();\n    return points.every((point) => other.containsPoint(point));\n  }\n\n  /**\n   * Checks if object is fully contained within the scene rect formed by {@link tl} and {@link br}\n   */\n  isContainedWithinRect(tl: Point, br: Point): boolean {\n    const { left, top, width, height } = this.getBoundingRect();\n    return (\n      left >= tl.x &&\n      left + width <= br.x &&\n      top >= tl.y &&\n      top + height <= br.y\n    );\n  }\n\n  isOverlapping<T extends ObjectGeometry>(other: T): boolean {\n    return (\n      this.intersectsWithObject(other) ||\n      this.isContainedWithinObject(other) ||\n      other.isContainedWithinObject(this)\n    );\n  }\n\n  /**\n   * Checks if point is inside the object\n   * @param {Point} point Point to check against\n   * @return {Boolean} true if point is inside the object\n   */\n  containsPoint(point: Point): boolean {\n    return Intersection.isPointInPolygon(point, this.getCoords());\n  }\n\n  /**\n   * Checks if object is contained within the canvas with current viewportTransform\n   * the check is done stopping at first point that appears on screen\n   * @return {Boolean} true if object is fully or partially contained within canvas\n   */\n  isOnScreen(): boolean {\n    if (!this.canvas) {\n      return false;\n    }\n    const { tl, br } = this.canvas.vptCoords;\n    const points = this.getCoords();\n    // if some point is on screen, the object is on screen.\n    if (\n      points.some(\n        (point) =>\n          point.x <= br.x &&\n          point.x >= tl.x &&\n          point.y <= br.y &&\n          point.y >= tl.y,\n      )\n    ) {\n      return true;\n    }\n    // no points on screen, check intersection with absolute coordinates\n    if (this.intersectsWithRect(tl, br)) {\n      return true;\n    }\n    // check if the object is so big that it contains the entire viewport\n    return this.containsPoint(tl.midPointFrom(br));\n  }\n\n  /**\n   * Checks if object is partially contained within the canvas with current viewportTransform\n   * @return {Boolean} true if object is partially contained within canvas\n   */\n  isPartiallyOnScreen(): boolean {\n    if (!this.canvas) {\n      return false;\n    }\n    const { tl, br } = this.canvas.vptCoords;\n    if (this.intersectsWithRect(tl, br)) {\n      return true;\n    }\n    const allPointsAreOutside = this.getCoords().every(\n      (point) =>\n        (point.x >= br.x || point.x <= tl.x) &&\n        (point.y >= br.y || point.y <= tl.y),\n    );\n    // check if the object is so big that it contains the entire viewport\n    return allPointsAreOutside && this.containsPoint(tl.midPointFrom(br));\n  }\n\n  /**\n   * Returns coordinates of object's bounding rectangle (left, top, width, height)\n   * the box is intended as aligned to axis of canvas.\n   * @return {Object} Object with left, top, width, height properties\n   */\n  getBoundingRect(): TBBox {\n    return makeBoundingBoxFromPoints(this.getCoords());\n  }\n\n  /**\n   * Returns width of an object's bounding box counting transformations\n   * @todo shouldn't this account for group transform and return the actual size in canvas coordinate plane?\n   * @return {Number} width value\n   */\n  getScaledWidth(): number {\n    return this._getTransformedDimensions().x;\n  }\n\n  /**\n   * Returns height of an object bounding box counting transformations\n   * @todo shouldn't this account for group transform and return the actual size in canvas coordinate plane?\n   * @return {Number} height value\n   */\n  getScaledHeight(): number {\n    return this._getTransformedDimensions().y;\n  }\n\n  /**\n   * Scales an object (equally by x and y)\n   * @param {Number} value Scale factor\n   * @return {void}\n   */\n  scale(value: number): void {\n    this._set(SCALE_X, value);\n    this._set(SCALE_Y, value);\n    this.setCoords();\n  }\n\n  /**\n   * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n   * @param {Number} value New width value\n   * @return {void}\n   */\n  scaleToWidth(value: number) {\n    // adjust to bounding rect factor so that rotated shapes would fit as well\n    const boundingRectFactor =\n      this.getBoundingRect().width / this.getScaledWidth();\n    return this.scale(value / this.width / boundingRectFactor);\n  }\n\n  /**\n   * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n   * @param {Number} value New height value\n   * @return {void}\n   */\n  scaleToHeight(value: number) {\n    // adjust to bounding rect factor so that rotated shapes would fit as well\n    const boundingRectFactor =\n      this.getBoundingRect().height / this.getScaledHeight();\n    return this.scale(value / this.height / boundingRectFactor);\n  }\n\n  getCanvasRetinaScaling() {\n    return this.canvas?.getRetinaScaling() || 1;\n  }\n\n  /**\n   * Returns the object angle relative to canvas counting also the group property\n   * @returns {TDegree}\n   */\n  getTotalAngle(): TDegree {\n    return this.group\n      ? radiansToDegrees(calcPlaneRotation(this.calcTransformMatrix()))\n      : this.angle;\n  }\n\n  /**\n   * Retrieves viewportTransform from Object's canvas if available\n   * @return {TMat2D}\n   */\n  getViewportTransform(): TMat2D {\n    return this.canvas?.viewportTransform || (iMatrix.concat() as TMat2D);\n  }\n\n  /**\n   * Calculates the coordinates of the 4 corner of the bbox, in absolute coordinates.\n   * those never change with zoom or viewport changes.\n   * @return {TCornerPoint}\n   */\n  calcACoords(): TCornerPoint {\n    const rotateMatrix = createRotateMatrix({ angle: this.angle }),\n      { x, y } = this.getRelativeCenterPoint(),\n      tMatrix = createTranslateMatrix(x, y),\n      finalMatrix = multiplyTransformMatrices(tMatrix, rotateMatrix),\n      dim = this._getTransformedDimensions(),\n      w = dim.x / 2,\n      h = dim.y / 2;\n    return {\n      // corners\n      tl: transformPoint({ x: -w, y: -h }, finalMatrix),\n      tr: transformPoint({ x: w, y: -h }, finalMatrix),\n      bl: transformPoint({ x: -w, y: h }, finalMatrix),\n      br: transformPoint({ x: w, y: h }, finalMatrix),\n    };\n  }\n\n  /**\n   * Sets corner and controls position coordinates based on current angle, width and height, left and top.\n   * aCoords are used to quickly find an object on the canvas.\n   * See {@link https://github.com/fabricjs/fabric.js/wiki/When-to-call-setCoords} and {@link http://fabricjs.com/fabric-gotchas}\n   */\n  setCoords(): void {\n    this.aCoords = this.calcACoords();\n  }\n\n  transformMatrixKey(skipGroup = false): number[] {\n    let prefix: number[] = [];\n    if (!skipGroup && this.group) {\n      prefix = this.group.transformMatrixKey(skipGroup);\n    }\n    prefix.push(\n      this.top,\n      this.left,\n      this.width,\n      this.height,\n      this.scaleX,\n      this.scaleY,\n      this.angle,\n      this.strokeWidth,\n      this.skewX,\n      this.skewY,\n      +this.flipX,\n      +this.flipY,\n      resolveOrigin(this.originX),\n      resolveOrigin(this.originY),\n    );\n\n    return prefix;\n  }\n\n  /**\n   * calculate transform matrix that represents the current transformations from the\n   * object's properties.\n   * @param {Boolean} [skipGroup] return transform matrix for object not counting parent transformations\n   * There are some situation in which this is useful to avoid the fake rotation.\n   * @return {TMat2D} transform matrix for the object\n   */\n  calcTransformMatrix(skipGroup = false): TMat2D {\n    let matrix = this.calcOwnMatrix();\n    if (skipGroup || !this.group) {\n      return matrix;\n    }\n    const key = this.transformMatrixKey(skipGroup),\n      cache = this.matrixCache;\n    if (cache && cache.key.every((x, i) => x === key[i])) {\n      return cache.value;\n    }\n    if (this.group) {\n      matrix = multiplyTransformMatrices(\n        this.group.calcTransformMatrix(false),\n        matrix,\n      );\n    }\n    this.matrixCache = {\n      key,\n      value: matrix,\n    };\n    return matrix;\n  }\n\n  /**\n   * calculate transform matrix that represents the current transformations from the\n   * object's properties, this matrix does not include the group transformation\n   * @return {TMat2D} transform matrix for the object\n   */\n  calcOwnMatrix(): TMat2D {\n    const key = this.transformMatrixKey(true),\n      cache = this.ownMatrixCache;\n    if (cache && cache.key === key) {\n      return cache.value;\n    }\n    const center = this.getRelativeCenterPoint(),\n      options = {\n        angle: this.angle,\n        translateX: center.x,\n        translateY: center.y,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        skewX: this.skewX,\n        skewY: this.skewY,\n        flipX: this.flipX,\n        flipY: this.flipY,\n      },\n      value = composeMatrix(options);\n    this.ownMatrixCache = {\n      key,\n      value,\n    };\n    return value;\n  }\n\n  /**\n   * Calculate object dimensions from its properties\n   * @private\n   * @returns {Point} dimensions\n   */\n  _getNonTransformedDimensions(): Point {\n    return new Point(this.width, this.height).scalarAdd(this.strokeWidth);\n  }\n\n  /**\n   * Calculate object dimensions for controls box, including padding and canvas zoom.\n   * and active selection\n   * @private\n   * @param {object} [options] transform options\n   * @returns {Point} dimensions\n   */\n  _calculateCurrentDimensions(options?: any): Point {\n    return this._getTransformedDimensions(options)\n      .transform(this.getViewportTransform(), true)\n      .scalarAdd(2 * this.padding);\n  }\n\n  // #region Origin\n\n  declare top: number;\n  declare left: number;\n  declare width: number;\n  declare height: number;\n  declare flipX: boolean;\n  declare flipY: boolean;\n  declare scaleX: number;\n  declare scaleY: number;\n  declare skewX: number;\n  declare skewY: number;\n  /**\n   * @deprecated please use 'center' as value in new projects\n   * */\n  declare originX: TOriginX;\n  /**\n   * @deprecated please use 'center' as value in new projects\n   * */\n  declare originY: TOriginY;\n  declare angle: TDegree;\n  declare strokeWidth: number;\n  declare strokeUniform: boolean;\n\n  /**\n   * Object containing this object.\n   * can influence its size and position\n   */\n  declare group?: Group;\n\n  /**\n   * Calculate object bounding box dimensions from its properties scale, skew.\n   * This bounding box is aligned with object angle and not with canvas axis or screen.\n   * @param {Object} [options]\n   * @param {Number} [options.scaleX]\n   * @param {Number} [options.scaleY]\n   * @param {Number} [options.skewX]\n   * @param {Number} [options.skewY]\n   * @private\n   * @returns {Point} dimensions\n   */\n  _getTransformedDimensions(options: any = {}): Point {\n    const dimOptions = {\n      // if scaleX or scaleY are negative numbers,\n      // this will return dimensions that are negative.\n      // and this will break assumptions around the codebase\n      scaleX: this.scaleX,\n      scaleY: this.scaleY,\n      skewX: this.skewX,\n      skewY: this.skewY,\n      width: this.width,\n      height: this.height,\n      strokeWidth: this.strokeWidth,\n      ...options,\n    };\n    // stroke is applied before/after transformations are applied according to `strokeUniform`\n    const strokeWidth = dimOptions.strokeWidth;\n    let preScalingStrokeValue = strokeWidth,\n      postScalingStrokeValue = 0;\n\n    if (this.strokeUniform) {\n      preScalingStrokeValue = 0;\n      postScalingStrokeValue = strokeWidth;\n    }\n    const dimX = dimOptions.width + preScalingStrokeValue,\n      dimY = dimOptions.height + preScalingStrokeValue,\n      noSkew = dimOptions.skewX === 0 && dimOptions.skewY === 0;\n    let finalDimensions;\n    if (noSkew) {\n      finalDimensions = new Point(\n        dimX * dimOptions.scaleX,\n        dimY * dimOptions.scaleY,\n      );\n    } else {\n      finalDimensions = sizeAfterTransform(\n        dimX,\n        dimY,\n        calcDimensionsMatrix(dimOptions),\n      );\n    }\n\n    return finalDimensions.scalarAdd(postScalingStrokeValue);\n  }\n\n  /**\n   * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n   * @param {Point} point The point which corresponds to the originX and originY params\n   * @param {TOriginX} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n   * @param {TOriginX} toOriginX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  translateToGivenOrigin(\n    point: Point,\n    fromOriginX: TOriginX,\n    fromOriginY: TOriginY,\n    toOriginX: TOriginX,\n    toOriginY: TOriginY,\n  ): Point {\n    let x = point.x,\n      y = point.y;\n    const offsetX = resolveOrigin(toOriginX) - resolveOrigin(fromOriginX),\n      offsetY = resolveOrigin(toOriginY) - resolveOrigin(fromOriginY);\n\n    if (offsetX || offsetY) {\n      const dim = this._getTransformedDimensions();\n      x += offsetX * dim.x;\n      y += offsetY * dim.y;\n    }\n\n    return new Point(x, y);\n  }\n\n  /**\n   * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n   * @param {Point} point The point which corresponds to the originX and originY params\n   * @param {TOriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  translateToCenterPoint(\n    point: Point,\n    originX: TOriginX,\n    originY: TOriginY,\n  ): Point {\n    if (originX === CENTER && originY === CENTER) {\n      return point;\n    }\n    const p = this.translateToGivenOrigin(\n      point,\n      originX,\n      originY,\n      CENTER,\n      CENTER,\n    );\n    if (this.angle) {\n      return p.rotate(degreesToRadians(this.angle), point);\n    }\n    return p;\n  }\n\n  /**\n   * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n   * @param {Point} center The point which corresponds to center of the object\n   * @param {OriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {OriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  translateToOriginPoint(\n    center: Point,\n    originX: TOriginX,\n    originY: TOriginY,\n  ): Point {\n    const p = this.translateToGivenOrigin(\n      center,\n      CENTER,\n      CENTER,\n      originX,\n      originY,\n    );\n    if (this.angle) {\n      return p.rotate(degreesToRadians(this.angle), center);\n    }\n    return p;\n  }\n\n  /**\n   * Returns the center coordinates of the object relative to canvas\n   * @return {Point}\n   */\n  getCenterPoint(): Point {\n    const relCenter = this.getRelativeCenterPoint();\n    return this.group\n      ? transformPoint(relCenter, this.group.calcTransformMatrix())\n      : relCenter;\n  }\n\n  /**\n   * Returns the center coordinates of the object relative to it's parent\n   * @return {Point}\n   */\n  getRelativeCenterPoint(): Point {\n    return this.translateToCenterPoint(\n      new Point(this.left, this.top),\n      this.originX,\n      this.originY,\n    );\n  }\n\n  /**\n   * Returns the position of the object as if it has a different origin.\n   * Take an object that has left, top set to 100, 100 with origin 'left', 'top'.\n   * Return the values of left top ( wrapped in a point ) that you would need to keep\n   * the same position if origin where different.\n   * Alternatively you can use this to also find which point in the parent plane is a specific origin\n   * ( where is the bottom right corner of my object? )\n   * @param {TOriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  getPointByOrigin(originX: TOriginX, originY: TOriginY): Point {\n    return this.translateToOriginPoint(\n      this.getRelativeCenterPoint(),\n      originX,\n      originY,\n    );\n  }\n\n  /**\n   * Sets the position of the object taking into consideration the object's origin\n   * @param {Point} pos The new position of the object\n   * @param {TOriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {void}\n   */\n  setPositionByOrigin(pos: Point, originX: TOriginX, originY: TOriginY) {\n    const center = this.translateToCenterPoint(pos, originX, originY),\n      position = this.translateToOriginPoint(\n        center,\n        this.originX,\n        this.originY,\n      );\n    this.set({ left: position.x, top: position.y });\n  }\n\n  /**\n   * @private\n   */\n  _getLeftTopCoords() {\n    return this.translateToOriginPoint(\n      this.getRelativeCenterPoint(),\n      LEFT,\n      TOP,\n    );\n  }\n}\n","import { cache } from '../../cache';\nimport { config } from '../../config';\nimport {\n  ALIASING_LIMIT,\n  CENTER,\n  iMatrix,\n  LEFT,\n  SCALE_X,\n  SCALE_Y,\n  STROKE,\n  FILL,\n  TOP,\n  VERSION,\n} from '../../constants';\nimport type { ObjectEvents } from '../../EventTypeDefs';\nimport { Point } from '../../Point';\nimport { Shadow } from '../../Shadow';\nimport type {\n  TDegree,\n  TFiller,\n  TSize,\n  TCacheCanvasDimensions,\n  Abortable,\n  TOptions,\n  ImageFormat,\n} from '../../typedefs';\nimport { classRegistry } from '../../ClassRegistry';\nimport { runningAnimations } from '../../util/animation/AnimationRegistry';\nimport { capValue } from '../../util/misc/capValue';\nimport {\n  createCanvasElement,\n  createCanvasElementFor,\n  toDataURL,\n} from '../../util/misc/dom';\nimport { invertTransform, qrDecompose } from '../../util/misc/matrix';\nimport { enlivenObjectEnlivables } from '../../util/misc/objectEnlive';\nimport {\n  resetObjectTransform,\n  saveObjectTransform,\n} from '../../util/misc/objectTransforms';\nimport { sendObjectToPlane } from '../../util/misc/planeChange';\nimport { pick, pickBy } from '../../util/misc/pick';\nimport { toFixed } from '../../util/misc/toFixed';\nimport type { Group } from '../Group';\nimport { StaticCanvas } from '../../canvas/StaticCanvas';\nimport { isFiller, isSerializableFiller } from '../../util/typeAssertions';\nimport type { FabricImage } from '../Image';\nimport {\n  cacheProperties,\n  fabricObjectDefaultValues,\n  stateProperties,\n} from './defaultValues';\nimport type { Gradient } from '../../gradient/Gradient';\nimport type { Pattern } from '../../Pattern';\nimport type { Canvas } from '../../canvas/Canvas';\nimport type { SerializedObjectProps } from './types/SerializedObjectProps';\nimport type { ObjectProps } from './types/ObjectProps';\nimport { getDevicePixelRatio, getEnv } from '../../env';\nimport { log } from '../../util/internals/console';\nimport type { TColorArg } from '../../color/typedefs';\nimport type { TAnimation } from '../../util/animation/animate';\nimport { animate, animateColor } from '../../util/animation/animate';\nimport type {\n  AnimationOptions,\n  ArrayAnimationOptions,\n  ColorAnimationOptions,\n  ValueAnimationOptions,\n} from '../../util/animation/types';\nimport { ObjectGeometry } from './ObjectGeometry';\n\ntype TAncestor = FabricObject;\ntype TCollection = Group;\n\nexport type Ancestors =\n  | [FabricObject | Group]\n  | [FabricObject | Group, ...Group[]]\n  | Group[];\n\nexport type AncestryComparison = {\n  /**\n   * common ancestors of `this` and`other`(may include`this` | `other`)\n   */\n  common: Ancestors;\n  /**\n   * ancestors that are of `this` only\n   */\n  fork: Ancestors;\n  /**\n   * ancestors that are of `other` only\n   */\n  otherFork: Ancestors;\n};\n\nexport type TCachedFabricObject<T extends FabricObject = FabricObject> = T &\n  Required<\n    Pick<\n      T,\n      | 'zoomX'\n      | 'zoomY'\n      | '_cacheCanvas'\n      | '_cacheContext'\n      | 'cacheTranslationX'\n      | 'cacheTranslationY'\n    >\n  > & {\n    _cacheContext: CanvasRenderingContext2D;\n  };\n\nexport type ObjectToCanvasElementOptions = {\n  format?: ImageFormat;\n  /** Multiplier to scale by */\n  multiplier?: number;\n  /** Cropping left offset. Introduced in v1.2.14 */\n  left?: number;\n  /** Cropping top offset. Introduced in v1.2.14 */\n  top?: number;\n  /** Cropping width. Introduced in v1.2.14 */\n  width?: number;\n  /** Cropping height. Introduced in v1.2.14 */\n  height?: number;\n  /** Enable retina scaling for clone image. Introduce in 1.6.4 */\n  enableRetinaScaling?: boolean;\n  /** Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4 */\n  withoutTransform?: boolean;\n  /** Remove current object shadow. Introduced in 2.4.2 */\n  withoutShadow?: boolean;\n  /** Account for canvas viewport transform */\n  viewportTransform?: boolean;\n  /** Function to create the output canvas to export onto */\n  canvasProvider?: <T extends StaticCanvas>(el?: HTMLCanvasElement) => T;\n};\n\ntype toDataURLOptions = ObjectToCanvasElementOptions & {\n  quality?: number;\n};\n\nexport type DrawContext =\n  | {\n      parentClipPaths: FabricObject[];\n      width: number;\n      height: number;\n      cacheTranslationX: number;\n      cacheTranslationY: number;\n      zoomX: number;\n      zoomY: number;\n    }\n  | Record<string, never>;\n\n/**\n * Root object class from which all 2d shape classes inherit from\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n *\n * @fires added\n * @fires removed\n *\n * @fires selected\n * @fires deselected\n *\n * @fires rotating\n * @fires scaling\n * @fires moving\n * @fires skewing\n * @fires modified\n *\n * @fires mousedown\n * @fires mouseup\n * @fires mouseover\n * @fires mouseout\n * @fires mousewheel\n * @fires mousedblclick\n *\n * @fires dragover\n * @fires dragenter\n * @fires dragleave\n * @fires drop\n */\nexport class FabricObject<\n    Props extends TOptions<ObjectProps> = Partial<ObjectProps>,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    SProps extends SerializedObjectProps = SerializedObjectProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends ObjectGeometry<EventSpec>\n  implements ObjectProps\n{\n  declare minScaleLimit: number;\n\n  declare opacity: number;\n\n  declare paintFirst: 'fill' | 'stroke';\n  declare fill: string | TFiller | null;\n  declare fillRule: CanvasFillRule;\n  declare stroke: string | TFiller | null;\n  declare strokeDashArray: number[] | null;\n  declare strokeDashOffset: number;\n  declare strokeLineCap: CanvasLineCap;\n  declare strokeLineJoin: CanvasLineJoin;\n  declare strokeMiterLimit: number;\n\n  declare globalCompositeOperation: GlobalCompositeOperation;\n  declare backgroundColor: string;\n\n  declare shadow: Shadow | null;\n\n  declare visible: boolean;\n\n  declare includeDefaultValues: boolean;\n  declare excludeFromExport: boolean;\n\n  declare objectCaching: boolean;\n\n  declare clipPath?: FabricObject;\n  declare inverted: boolean;\n  declare absolutePositioned: boolean;\n  declare centeredRotation: boolean;\n  declare centeredScaling: boolean;\n\n  /**\n   * This list of properties is used to check if the state of an object is changed.\n   * This state change now is only used for children of groups to understand if a group\n   * needs its cache regenerated during a .set call\n   * @type Array\n   */\n  static stateProperties: string[] = stateProperties;\n\n  /**\n   * List of properties to consider when checking if cache needs refresh\n   * Those properties are checked by\n   * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n   * and refreshed at the next render\n   * @type Array\n   */\n  static cacheProperties: string[] = cacheProperties;\n\n  /**\n   * When set to `true`, object's cache will be rerendered next render call.\n   * since 1.7.0\n   * @type Boolean\n   * @default true\n   */\n  declare dirty: boolean;\n\n  /**\n   * Quick access for the _cacheCanvas rendering context\n   * This is part of the objectCaching feature\n   * since 1.7.0\n   * @type boolean\n   * @default undefined\n   * @private\n   */\n  _cacheContext: CanvasRenderingContext2D | null = null;\n\n  /**\n   * A reference to the HTMLCanvasElement that is used to contain the cache of the object\n   * this canvas element is resized and cleared as needed\n   * Is marked private, you can read it, don't use it since it is handled by fabric\n   * since 1.7.0\n   * @type HTMLCanvasElement\n   * @default undefined\n   * @private\n   */\n  declare _cacheCanvas?: HTMLCanvasElement;\n\n  /**\n   * zoom level used on the cacheCanvas to draw the cache, X axe\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare zoomX?: number;\n\n  /**\n   * zoom level used on the cacheCanvas to draw the cache, Y axe\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare zoomY?: number;\n\n  /**\n   * zoom level used on the cacheCanvas to draw the cache, Y axe\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare cacheTranslationX?: number;\n\n  /**\n   * translation of the cacheCanvas away from the center, for subpixel accuracy and crispness\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare cacheTranslationY?: number;\n\n  /**\n   * A reference to the parent of the object, usually a Group\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare group?: Group;\n\n  /**\n   * Indicate if the object is sitting on a cache dedicated to it\n   * or is part of a larger cache for many object ( a group for example)\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare ownCaching?: boolean;\n\n  /**\n   * Private. indicates if the object inside a group is on a transformed context or not\n   * or is part of a larger cache for many object ( a group for example)\n   * @type boolean\n   * @default undefined\n   * @private\n   */\n  declare _transformDone?: boolean;\n\n  static ownDefaults = fabricObjectDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return FabricObject.ownDefaults;\n  }\n\n  /**\n   * The class type.\n   * This is used for serialization and deserialization purposes and internally it can be used\n   * to identify classes.\n   * When we transform a class in a plain JS object we need a way to recognize which class it was,\n   * and the type is the way we do that. It has no other purposes and you should not give one.\n   * Hard to reach on instances and please do not use to drive instance's logic (this.constructor.type).\n   * To idenfity a class use instanceof class ( instanceof Rect ).\n   * We do not do that in fabricJS code because we want to try to have code splitting possible.\n   */\n  static type = 'FabricObject';\n\n  /**\n   * Legacy identifier of the class. Prefer using utils like isType or instanceOf\n   * Will be removed in fabric 7 or 8.\n   * The setter exists to avoid type errors in old code and possibly current deserialization code.\n   * DO NOT build new code around this type value\n   * @TODO add sustainable warning message\n   * @type string\n   * @deprecated\n   */\n  get type() {\n    const name = (this.constructor as typeof FabricObject).type;\n    if (name === 'FabricObject') {\n      return 'object';\n    }\n    return name.toLowerCase();\n  }\n\n  set type(value) {\n    log('warn', 'Setting type has no effect', value);\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, FabricObject.ownDefaults);\n    this.setOptions(options);\n  }\n\n  /**\n   * Create a the canvas used to keep the cached copy of the object\n   * @private\n   */\n  _createCacheCanvas() {\n    this._cacheCanvas = createCanvasElement();\n    this._cacheContext = this._cacheCanvas.getContext('2d');\n    this._updateCacheCanvas();\n    // if canvas gets created, is empty, so dirty.\n    this.dirty = true;\n  }\n\n  /**\n   * Limit the cache dimensions so that X * Y do not cross config.perfLimitSizeTotal\n   * and each side do not cross fabric.cacheSideLimit\n   * those numbers are configurable so that you can get as much detail as you want\n   * making bargain with performances.\n   * @param {Object} dims\n   * @param {Object} dims.width width of canvas\n   * @param {Object} dims.height height of canvas\n   * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   * @return {Object}.width width of canvas\n   * @return {Object}.height height of canvas\n   * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   */\n  _limitCacheSize(\n    dims: TSize & { zoomX: number; zoomY: number; capped: boolean } & any,\n  ) {\n    const width = dims.width,\n      height = dims.height,\n      max = config.maxCacheSideLimit,\n      min = config.minCacheSideLimit;\n    if (\n      width <= max &&\n      height <= max &&\n      width * height <= config.perfLimitSizeTotal\n    ) {\n      if (width < min) {\n        dims.width = min;\n      }\n      if (height < min) {\n        dims.height = min;\n      }\n      return dims;\n    }\n    const ar = width / height,\n      [limX, limY] = cache.limitDimsByArea(ar),\n      x = capValue(min, limX, max),\n      y = capValue(min, limY, max);\n    if (width > x) {\n      dims.zoomX /= width / x;\n      dims.width = x;\n      dims.capped = true;\n    }\n    if (height > y) {\n      dims.zoomY /= height / y;\n      dims.height = y;\n      dims.capped = true;\n    }\n    return dims;\n  }\n\n  /**\n   * Return the dimension and the zoom level needed to create a cache canvas\n   * big enough to host the object to be cached.\n   * @private\n   * @return {Object}.x width of object to be cached\n   * @return {Object}.y height of object to be cached\n   * @return {Object}.width width of canvas\n   * @return {Object}.height height of canvas\n   * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   */\n  _getCacheCanvasDimensions(): TCacheCanvasDimensions {\n    const objectScale = this.getTotalObjectScaling(),\n      // calculate dimensions without skewing\n      dim = this._getTransformedDimensions({ skewX: 0, skewY: 0 }),\n      neededX = (dim.x * objectScale.x) / this.scaleX,\n      neededY = (dim.y * objectScale.y) / this.scaleY;\n    return {\n      // for sure this ALIASING_LIMIT is slightly creating problem\n      // in situation in which the cache canvas gets an upper limit\n      // also objectScale contains already scaleX and scaleY\n      width: Math.ceil(neededX + ALIASING_LIMIT),\n      height: Math.ceil(neededY + ALIASING_LIMIT),\n      zoomX: objectScale.x,\n      zoomY: objectScale.y,\n      x: neededX,\n      y: neededY,\n    };\n  }\n\n  /**\n   * Update width and height of the canvas for cache\n   * returns true or false if canvas needed resize.\n   * @private\n   * @return {Boolean} true if the canvas has been resized\n   */\n  _updateCacheCanvas() {\n    const canvas = this._cacheCanvas!,\n      context = this._cacheContext,\n      { width, height, zoomX, zoomY, x, y } = this._limitCacheSize(\n        this._getCacheCanvasDimensions(),\n      ),\n      dimensionsChanged = width !== canvas.width || height !== canvas.height,\n      zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY;\n\n    if (!canvas || !context) {\n      return false;\n    }\n\n    const shouldRedraw = dimensionsChanged || zoomChanged;\n\n    if (shouldRedraw) {\n      if (width !== canvas.width || height !== canvas.height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      }\n      const drawingWidth = x / 2;\n      const drawingHeight = y / 2;\n      this.cacheTranslationX =\n        Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n      this.cacheTranslationY =\n        Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n      context.translate(this.cacheTranslationX, this.cacheTranslationY);\n      context.scale(zoomX, zoomY);\n      this.zoomX = zoomX;\n      this.zoomY = zoomY;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Sets object's properties from options, for class constructor only.\n   * Needs to be overridden for different defaults.\n   * @protected\n   * @param {Object} [options] Options object\n   */\n  protected setOptions(options: Record<string, any> = {}) {\n    this._setOptions(options);\n  }\n\n  /**\n   * Transforms context when rendering an object\n   * @param {CanvasRenderingContext2D} ctx Context\n   */\n  transform(ctx: CanvasRenderingContext2D) {\n    const needFullTransform =\n      (this.group && !this.group._transformDone) ||\n      (this.group && this.canvas && ctx === (this.canvas as Canvas).contextTop);\n    const m = this.calcTransformMatrix(!needFullTransform);\n    ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n  }\n\n  /**\n   * Return the object scale factor counting also the group scaling\n   * @return {Point}\n   */\n  getObjectScaling() {\n    // if the object is a top level one, on the canvas, we go for simple aritmetic\n    // otherwise the complex method with angles will return approximations and decimals\n    // and will likely kill the cache when not needed\n    // https://github.com/fabricjs/fabric.js/issues/7157\n    if (!this.group) {\n      return new Point(Math.abs(this.scaleX), Math.abs(this.scaleY));\n    }\n    // if we are inside a group total zoom calculation is complex, we defer to generic matrices\n    const options = qrDecompose(this.calcTransformMatrix());\n    return new Point(Math.abs(options.scaleX), Math.abs(options.scaleY));\n  }\n\n  /**\n   * Return the object scale factor counting also the group scaling, zoom and retina\n   * @return {Object} object with scaleX and scaleY properties\n   */\n  getTotalObjectScaling() {\n    const scale = this.getObjectScaling();\n    if (this.canvas) {\n      const zoom = this.canvas.getZoom();\n      const retina = this.getCanvasRetinaScaling();\n      return scale.scalarMultiply(zoom * retina);\n    }\n    return scale;\n  }\n\n  /**\n   * Return the object opacity counting also the group property\n   * @return {Number}\n   */\n  getObjectOpacity() {\n    let opacity = this.opacity;\n    if (this.group) {\n      opacity *= this.group.getObjectOpacity();\n    }\n    return opacity;\n  }\n\n  /**\n   * Makes sure the scale is valid and modifies it if necessary\n   * @todo: this is a control action issue, not a geometry one\n   * @private\n   * @param {Number} value, unconstrained\n   * @return {Number} constrained value;\n   */\n  _constrainScale(value: number): number {\n    if (Math.abs(value) < this.minScaleLimit) {\n      if (value < 0) {\n        return -this.minScaleLimit;\n      } else {\n        return this.minScaleLimit;\n      }\n    } else if (value === 0) {\n      return 0.0001;\n    }\n    return value;\n  }\n\n  /**\n   * Handles setting values on the instance and handling internal side effects\n   * @protected\n   * @param {String} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    if (key === SCALE_X || key === SCALE_Y) {\n      value = this._constrainScale(value);\n    }\n    if (key === SCALE_X && value < 0) {\n      this.flipX = !this.flipX;\n      value *= -1;\n    } else if (key === 'scaleY' && value < 0) {\n      this.flipY = !this.flipY;\n      value *= -1;\n      // i don't like this automatic initialization here\n    } else if (key === 'shadow' && value && !(value instanceof Shadow)) {\n      value = new Shadow(value);\n    }\n\n    const isChanged = this[key as keyof this] !== value;\n    this[key as keyof this] = value;\n\n    // invalidate caches\n    if (\n      isChanged &&\n      (this.constructor as typeof FabricObject).cacheProperties.includes(key)\n    ) {\n      this.dirty = true;\n    }\n    // a dirty child makes the parent dirty.\n    // but a non dirty child does not make the parent not dirty.\n    // the parent could be dirty for some other reason.\n    this.parent &&\n      (this.dirty ||\n        (isChanged &&\n          (this.constructor as typeof FabricObject).stateProperties.includes(\n            key,\n          ))) &&\n      this.parent._set('dirty', true);\n\n    return this;\n  }\n\n  /*\n   * @private\n   * return if the object would be visible in rendering\n   * @memberOf FabricObject.prototype\n   * @return {Boolean}\n   */\n  isNotVisible() {\n    return (\n      this.opacity === 0 ||\n      (!this.width && !this.height && this.strokeWidth === 0) ||\n      !this.visible\n    );\n  }\n\n  /**\n   * Renders an object on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    // do not render if width/height are zeros or object is not visible\n    if (this.isNotVisible()) {\n      return;\n    }\n    if (\n      this.canvas &&\n      this.canvas.skipOffscreen &&\n      !this.group &&\n      !this.isOnScreen()\n    ) {\n      return;\n    }\n    ctx.save();\n    this._setupCompositeOperation(ctx);\n    this.drawSelectionBackground(ctx);\n    this.transform(ctx);\n    this._setOpacity(ctx);\n    this._setShadow(ctx);\n    if (this.shouldCache()) {\n      (this as TCachedFabricObject).renderCache();\n      (this as TCachedFabricObject).drawCacheOnCanvas(ctx);\n    } else {\n      this._removeCacheCanvas();\n      this.drawObject(ctx, false, {});\n      this.dirty = false;\n    }\n    ctx.restore();\n  }\n\n  drawSelectionBackground(_ctx: CanvasRenderingContext2D) {\n    /* no op */\n  }\n\n  renderCache(this: TCachedFabricObject, options?: any) {\n    options = options || {};\n    if (!this._cacheCanvas || !this._cacheContext) {\n      this._createCacheCanvas();\n    }\n    if (this.isCacheDirty() && this._cacheContext) {\n      const { zoomX, zoomY, cacheTranslationX, cacheTranslationY } = this;\n      const { width, height } = this._cacheCanvas;\n      this.drawObject(this._cacheContext, options.forClipping, {\n        zoomX,\n        zoomY,\n        cacheTranslationX,\n        cacheTranslationY,\n        width,\n        height,\n        parentClipPaths: [],\n      });\n      this.dirty = false;\n    }\n  }\n\n  /**\n   * Remove cacheCanvas and its dimensions from the objects\n   */\n  _removeCacheCanvas() {\n    this._cacheCanvas = undefined;\n    this._cacheContext = null;\n  }\n\n  /**\n   * return true if the object will draw a stroke\n   * Does not consider text styles. This is just a shortcut used at rendering time\n   * We want it to be an approximation and be fast.\n   * wrote to avoid extra caching, it has to return true when stroke happens,\n   * can guess when it will not happen at 100% chance, does not matter if it misses\n   * some use case where the stroke is invisible.\n   * @since 3.0.0\n   * @returns Boolean\n   */\n  hasStroke() {\n    return (\n      this.stroke && this.stroke !== 'transparent' && this.strokeWidth !== 0\n    );\n  }\n\n  /**\n   * return true if the object will draw a fill\n   * Does not consider text styles. This is just a shortcut used at rendering time\n   * We want it to be an approximation and be fast.\n   * wrote to avoid extra caching, it has to return true when fill happens,\n   * can guess when it will not happen at 100% chance, does not matter if it misses\n   * some use case where the fill is invisible.\n   * @since 3.0.0\n   * @returns Boolean\n   */\n  hasFill() {\n    return this.fill && this.fill !== 'transparent';\n  }\n\n  /**\n   * When set to `true`, force the object to have its own cache, even if it is inside a group\n   * it may be needed when your object behave in a particular way on the cache and always needs\n   * its own isolated canvas to render correctly.\n   * Created to be overridden\n   * since 1.7.12\n   * @returns Boolean\n   */\n  needsItsOwnCache() {\n    if (\n      this.paintFirst === STROKE &&\n      this.hasFill() &&\n      this.hasStroke() &&\n      !!this.shadow\n    ) {\n      return true;\n    }\n    if (this.clipPath) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Decide if the object should cache or not. Create its own cache level\n   * objectCaching is a global flag, wins over everything\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step. None of the fabric classes requires it.\n   * Generally you do not cache objects in groups because the group outside is cached.\n   * Read as: cache if is needed, or if the feature is enabled but we are not already caching.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    this.ownCaching =\n      this.needsItsOwnCache() ||\n      (this.objectCaching && (!this.parent || !this.parent.isOnACache()));\n    return this.ownCaching;\n  }\n\n  /**\n   * Check if this object will cast a shadow with an offset.\n   * used by Group.shouldCache to know if child has a shadow recursively\n   * @return {Boolean}\n   * @deprecated\n   */\n  willDrawShadow() {\n    return (\n      !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0)\n    );\n  }\n\n  /**\n   * Execute the drawing operation for an object clipPath\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {FabricObject} clipPath\n   */\n  drawClipPathOnCache(\n    ctx: CanvasRenderingContext2D,\n    clipPath: FabricObject,\n    canvasWithClipPath: HTMLCanvasElement,\n  ) {\n    ctx.save();\n    // DEBUG: uncomment this line, comment the following\n    // ctx.globalAlpha = 0.4\n    if (clipPath.inverted) {\n      ctx.globalCompositeOperation = 'destination-out';\n    } else {\n      ctx.globalCompositeOperation = 'destination-in';\n    }\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    //ctx.scale(1 / 2, 1 / 2);\n    ctx.drawImage(canvasWithClipPath, 0, 0);\n    ctx.restore();\n  }\n\n  /**\n   * Execute the drawing operation for an object on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {boolean} forClipping apply clipping styles\n   * @param {DrawContext} context additional context for rendering\n   */\n  drawObject(\n    ctx: CanvasRenderingContext2D,\n    forClipping: boolean | undefined,\n    context: DrawContext,\n  ) {\n    const originalFill = this.fill,\n      originalStroke = this.stroke;\n    if (forClipping) {\n      this.fill = 'black';\n      this.stroke = '';\n      this._setClippingProperties(ctx);\n    } else {\n      this._renderBackground(ctx);\n    }\n    this._render(ctx);\n    this._drawClipPath(ctx, this.clipPath, context);\n    this.fill = originalFill;\n    this.stroke = originalStroke;\n  }\n\n  private createClipPathLayer(\n    this: TCachedFabricObject,\n    clipPath: FabricObject,\n    context: DrawContext,\n  ) {\n    const canvas = createCanvasElementFor(context as TSize);\n    const ctx = canvas.getContext('2d')!;\n    ctx.translate(context.cacheTranslationX, context.cacheTranslationY);\n    ctx.scale(context.zoomX, context.zoomY);\n    clipPath._cacheCanvas = canvas;\n    context.parentClipPaths.forEach((prevClipPath) => {\n      prevClipPath.transform(ctx);\n    });\n    context.parentClipPaths.push(clipPath);\n    if (clipPath.absolutePositioned) {\n      const m = invertTransform(this.calcTransformMatrix());\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    }\n    clipPath.transform(ctx);\n    clipPath.drawObject(ctx, true, context);\n    return canvas;\n  }\n\n  /**\n   * Prepare clipPath state and cache and draw it on instance's cache\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {FabricObject} clipPath\n   */\n  _drawClipPath(\n    ctx: CanvasRenderingContext2D,\n    clipPath: FabricObject | undefined,\n    context: DrawContext,\n  ) {\n    if (!clipPath) {\n      return;\n    }\n    // needed to setup _transformDone\n    // TODO find a better solution?\n    clipPath._transformDone = true;\n    const canvas = (this as TCachedFabricObject).createClipPathLayer(\n      clipPath,\n      context,\n    );\n    this.drawClipPathOnCache(ctx, clipPath, canvas);\n  }\n\n  /**\n   * Paint the cached copy of the object on the target context.\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawCacheOnCanvas(this: TCachedFabricObject, ctx: CanvasRenderingContext2D) {\n    ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n    ctx.drawImage(\n      this._cacheCanvas,\n      -this.cacheTranslationX,\n      -this.cacheTranslationY,\n    );\n  }\n\n  /**\n   * Check if cache is dirty\n   * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n   * on parent canvas.\n   */\n  isCacheDirty(skipCanvas = false) {\n    if (this.isNotVisible()) {\n      return false;\n    }\n    const canvas = this._cacheCanvas;\n    const ctx = this._cacheContext;\n    if (canvas && ctx && !skipCanvas && this._updateCacheCanvas()) {\n      // in this case the context is already cleared.\n      return true;\n    } else {\n      if (this.dirty || (this.clipPath && this.clipPath.absolutePositioned)) {\n        if (canvas && ctx && !skipCanvas) {\n          ctx.save();\n          ctx.setTransform(1, 0, 0, 1, 0, 0);\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          ctx.restore();\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Draws a background for the object big as its untransformed dimensions\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderBackground(ctx: CanvasRenderingContext2D) {\n    if (!this.backgroundColor) {\n      return;\n    }\n    const dim = this._getNonTransformedDimensions();\n    ctx.fillStyle = this.backgroundColor;\n\n    ctx.fillRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y);\n    // if there is background color no other shadows\n    // should be casted\n    this._removeShadow(ctx);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _setOpacity(ctx: CanvasRenderingContext2D) {\n    if (this.group && !this.group._transformDone) {\n      ctx.globalAlpha = this.getObjectOpacity();\n    } else {\n      ctx.globalAlpha *= this.opacity;\n    }\n  }\n\n  _setStrokeStyles(\n    ctx: CanvasRenderingContext2D,\n    decl: Pick<\n      this,\n      | 'stroke'\n      | 'strokeWidth'\n      | 'strokeLineCap'\n      | 'strokeDashOffset'\n      | 'strokeLineJoin'\n      | 'strokeMiterLimit'\n    >,\n  ) {\n    const stroke = decl.stroke;\n    if (stroke) {\n      ctx.lineWidth = decl.strokeWidth;\n      ctx.lineCap = decl.strokeLineCap;\n      ctx.lineDashOffset = decl.strokeDashOffset;\n      ctx.lineJoin = decl.strokeLineJoin;\n      ctx.miterLimit = decl.strokeMiterLimit;\n      if (isFiller(stroke)) {\n        if (\n          (stroke as Gradient<'linear'>).gradientUnits === 'percentage' ||\n          (stroke as Gradient<'linear'>).gradientTransform ||\n          (stroke as Pattern).patternTransform\n        ) {\n          // need to transform gradient in a pattern.\n          // this is a slow process. If you are hitting this codepath, and the object\n          // is not using caching, you should consider switching it on.\n          // we need a canvas as big as the current object caching canvas.\n          this._applyPatternForTransformedGradient(ctx, stroke);\n        } else {\n          // is a simple gradient or pattern\n          ctx.strokeStyle = stroke.toLive(ctx)!;\n          this._applyPatternGradientTransform(ctx, stroke);\n        }\n      } else {\n        // is a color\n        ctx.strokeStyle = decl.stroke as string;\n      }\n    }\n  }\n\n  _setFillStyles(ctx: CanvasRenderingContext2D, { fill }: Pick<this, 'fill'>) {\n    if (fill) {\n      if (isFiller(fill)) {\n        ctx.fillStyle = fill.toLive(ctx)!;\n        this._applyPatternGradientTransform(ctx, fill);\n      } else {\n        ctx.fillStyle = fill;\n      }\n    }\n  }\n\n  _setClippingProperties(ctx: CanvasRenderingContext2D) {\n    ctx.globalAlpha = 1;\n    ctx.strokeStyle = 'transparent';\n    ctx.fillStyle = '#000000';\n  }\n\n  /**\n   * @private\n   * Sets line dash\n   * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n   * @param {Array} dashArray array representing dashes\n   */\n  _setLineDash(ctx: CanvasRenderingContext2D, dashArray?: number[] | null) {\n    if (!dashArray || dashArray.length === 0) {\n      return;\n    }\n    ctx.setLineDash(dashArray);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _setShadow(ctx: CanvasRenderingContext2D) {\n    if (!this.shadow) {\n      return;\n    }\n\n    const shadow = this.shadow,\n      canvas = this.canvas,\n      retinaScaling = this.getCanvasRetinaScaling(),\n      [sx, , , sy] = canvas?.viewportTransform || iMatrix,\n      multX = sx * retinaScaling,\n      multY = sy * retinaScaling,\n      scaling = shadow.nonScaling ? new Point(1, 1) : this.getObjectScaling();\n    ctx.shadowColor = shadow.color;\n    ctx.shadowBlur =\n      (shadow.blur *\n        config.browserShadowBlurConstant *\n        (multX + multY) *\n        (scaling.x + scaling.y)) /\n      4;\n    ctx.shadowOffsetX = shadow.offsetX * multX * scaling.x;\n    ctx.shadowOffsetY = shadow.offsetY * multY * scaling.y;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _removeShadow(ctx: CanvasRenderingContext2D) {\n    if (!this.shadow) {\n      return;\n    }\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {TFiller} filler {@link Pattern} or {@link Gradient}\n   */\n  _applyPatternGradientTransform(\n    ctx: CanvasRenderingContext2D,\n    filler: TFiller,\n  ) {\n    if (!isFiller(filler)) {\n      return { offsetX: 0, offsetY: 0 };\n    }\n    const t =\n      (filler as Gradient<'linear'>).gradientTransform ||\n      (filler as Pattern).patternTransform;\n    const offsetX = -this.width / 2 + filler.offsetX || 0,\n      offsetY = -this.height / 2 + filler.offsetY || 0;\n\n    if ((filler as Gradient<'linear'>).gradientUnits === 'percentage') {\n      ctx.transform(this.width, 0, 0, this.height, offsetX, offsetY);\n    } else {\n      ctx.transform(1, 0, 0, 1, offsetX, offsetY);\n    }\n    if (t) {\n      ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n    }\n    return { offsetX: offsetX, offsetY: offsetY };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderPaintInOrder(ctx: CanvasRenderingContext2D) {\n    if (this.paintFirst === STROKE) {\n      this._renderStroke(ctx);\n      this._renderFill(ctx);\n    } else {\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    }\n  }\n\n  /**\n   * @private\n   * function that actually render something on the context.\n   * empty here to allow Obects to work on tests to benchmark fabric functionalites\n   * not related to rendering\n   * @param {CanvasRenderingContext2D} _ctx Context to render on\n   */\n  _render(_ctx: CanvasRenderingContext2D) {\n    // placeholder to be overridden\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderFill(ctx: CanvasRenderingContext2D) {\n    if (!this.fill) {\n      return;\n    }\n\n    ctx.save();\n    this._setFillStyles(ctx, this);\n    if (this.fillRule === 'evenodd') {\n      ctx.fill('evenodd');\n    } else {\n      ctx.fill();\n    }\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderStroke(ctx: CanvasRenderingContext2D) {\n    if (!this.stroke || this.strokeWidth === 0) {\n      return;\n    }\n\n    if (this.shadow && !this.shadow.affectStroke) {\n      this._removeShadow(ctx);\n    }\n\n    ctx.save();\n    if (this.strokeUniform) {\n      const scaling = this.getObjectScaling();\n      ctx.scale(1 / scaling.x, 1 / scaling.y);\n    }\n    this._setLineDash(ctx, this.strokeDashArray);\n    this._setStrokeStyles(ctx, this);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  /**\n   * This function try to patch the missing gradientTransform on canvas gradients.\n   * transforming a context to transform the gradient, is going to transform the stroke too.\n   * we want to transform the gradient but not the stroke operation, so we create\n   * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\n   * this method has drawbacks: is slow, is in low resolution, needs a patch for when the size\n   * is limited.\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Gradient} filler\n   */\n  _applyPatternForTransformedGradient(\n    ctx: CanvasRenderingContext2D,\n    filler: TFiller,\n  ) {\n    const dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n      retinaScaling = this.getCanvasRetinaScaling(),\n      width = dims.x / this.scaleX / retinaScaling,\n      height = dims.y / this.scaleY / retinaScaling,\n      pCanvas = createCanvasElementFor({\n        // in case width and height are less than 1px, we have to round up.\n        // since the pattern is no-repeat, this is fine\n        width: Math.ceil(width),\n        height: Math.ceil(height),\n      });\n\n    const pCtx = pCanvas.getContext('2d');\n    if (!pCtx) {\n      return;\n    }\n    pCtx.beginPath();\n    pCtx.moveTo(0, 0);\n    pCtx.lineTo(width, 0);\n    pCtx.lineTo(width, height);\n    pCtx.lineTo(0, height);\n    pCtx.closePath();\n    pCtx.translate(width / 2, height / 2);\n    pCtx.scale(\n      dims.zoomX / this.scaleX / retinaScaling,\n      dims.zoomY / this.scaleY / retinaScaling,\n    );\n    this._applyPatternGradientTransform(pCtx, filler);\n    pCtx.fillStyle = filler.toLive(ctx)!;\n    pCtx.fill();\n    ctx.translate(\n      -this.width / 2 - this.strokeWidth / 2,\n      -this.height / 2 - this.strokeWidth / 2,\n    );\n    ctx.scale(\n      (retinaScaling * this.scaleX) / dims.zoomX,\n      (retinaScaling * this.scaleY) / dims.zoomY,\n    );\n    ctx.strokeStyle = pCtx.createPattern(pCanvas, 'no-repeat') ?? '';\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement() {\n    return new Point(this.left + this.width / 2, this.top + this.height / 2);\n  }\n\n  /**\n   * Clones an instance.\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @returns {Promise<FabricObject>}\n   */\n  clone(propertiesToInclude?: string[]): Promise<this> {\n    const objectForm = this.toObject(propertiesToInclude);\n    return (this.constructor as typeof FabricObject).fromObject(\n      objectForm,\n    ) as unknown as Promise<this>;\n  }\n\n  /**\n   * Creates an instance of Image out of an object\n   * makes use of toCanvasElement.\n   * Once this method was based on toDataUrl and loadImage, so it also had a quality\n   * and format option. toCanvasElement is faster and produce no loss of quality.\n   * If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it.\n   * toCanvasElement and then toBlob from the obtained canvas is also a good option.\n   * @todo fix the export type, it could not be Image but the type that getClass return for 'image'.\n   * @param {ObjectToCanvasElementOptions} [options] for clone as image, passed to toDataURL\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n   * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n   * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n   * @return {FabricImage} Object cloned as image.\n   */\n  cloneAsImage(options: ObjectToCanvasElementOptions): FabricImage {\n    const canvasEl = this.toCanvasElement(options);\n    // TODO: how to import Image w/o an import cycle?\n    const ImageClass = classRegistry.getClass<typeof FabricImage>('image');\n    return new ImageClass(canvasEl);\n  }\n\n  /**\n   * Converts an object into a HTMLCanvas element\n   * @param {ObjectToCanvasElementOptions} options Options object\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n   * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n   * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n   * @param {Boolean} [options.viewportTransform] Account for canvas viewport transform\n   * @param {(el?: HTMLCanvasElement) => StaticCanvas} [options.canvasProvider] Create the output canvas\n   * @return {HTMLCanvasElement} Returns DOM element <canvas> with the FabricObject\n   */\n  toCanvasElement(options: ObjectToCanvasElementOptions = {}) {\n    const origParams = saveObjectTransform(this),\n      originalGroup = this.group,\n      originalShadow = this.shadow,\n      abs = Math.abs,\n      retinaScaling = options.enableRetinaScaling ? getDevicePixelRatio() : 1,\n      multiplier = (options.multiplier || 1) * retinaScaling,\n      canvasProvider: (el: HTMLCanvasElement) => StaticCanvas =\n        options.canvasProvider ||\n        ((el: HTMLCanvasElement) =>\n          new StaticCanvas(el, {\n            enableRetinaScaling: false,\n            renderOnAddRemove: false,\n            skipOffscreen: false,\n          }));\n    delete this.group;\n    if (options.withoutTransform) {\n      resetObjectTransform(this);\n    }\n    if (options.withoutShadow) {\n      this.shadow = null;\n    }\n    if (options.viewportTransform) {\n      sendObjectToPlane(this, this.getViewportTransform());\n    }\n\n    this.setCoords();\n    const el = createCanvasElement(),\n      boundingRect = this.getBoundingRect(),\n      shadow = this.shadow,\n      shadowOffset = new Point();\n\n    if (shadow) {\n      const shadowBlur = shadow.blur;\n      const scaling = shadow.nonScaling\n        ? new Point(1, 1)\n        : this.getObjectScaling();\n      // consider non scaling shadow.\n      shadowOffset.x =\n        2 * Math.round(abs(shadow.offsetX) + shadowBlur) * abs(scaling.x);\n      shadowOffset.y =\n        2 * Math.round(abs(shadow.offsetY) + shadowBlur) * abs(scaling.y);\n    }\n    const width = boundingRect.width + shadowOffset.x,\n      height = boundingRect.height + shadowOffset.y;\n    // if the current width/height is not an integer\n    // we need to make it so.\n    el.width = Math.ceil(width);\n    el.height = Math.ceil(height);\n    const canvas = canvasProvider(el);\n    if (options.format === 'jpeg') {\n      canvas.backgroundColor = '#fff';\n    }\n    this.setPositionByOrigin(\n      new Point(canvas.width / 2, canvas.height / 2),\n      CENTER,\n      CENTER,\n    );\n    const originalCanvas = this.canvas;\n    // static canvas and canvas have both an array of InteractiveObjects\n    // @ts-expect-error this needs to be fixed somehow, or ignored globally\n    canvas._objects = [this];\n    this.set('canvas', canvas);\n    this.setCoords();\n    const canvasEl = canvas.toCanvasElement(multiplier || 1, options);\n    this.set('canvas', originalCanvas);\n    this.shadow = originalShadow;\n    if (originalGroup) {\n      this.group = originalGroup;\n    }\n    this.set(origParams);\n    this.setCoords();\n    // canvas.dispose will call image.dispose that will nullify the elements\n    // since this canvas is a simple element for the process, we remove references\n    // to objects in this way in order to avoid object trashing.\n    canvas._objects = [];\n    // since render has settled it is safe to destroy canvas\n    canvas.destroy();\n    return canvasEl;\n  }\n\n  /**\n   * Converts an object into a data-url-like string\n   * @param {Object} options Options object\n   * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n   * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n   * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n   * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n   * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n   */\n  toDataURL(options: toDataURLOptions = {}) {\n    return toDataURL(\n      this.toCanvasElement(options),\n      options.format || 'png',\n      options.quality || 1,\n    );\n  }\n\n  /**\n   * Returns true if any of the specified types is identical to the type of an instance\n   * @param {String} type Type to check against\n   * @return {Boolean}\n   */\n  isType(...types: string[]) {\n    return (\n      types.includes((this.constructor as typeof FabricObject).type) ||\n      types.includes(this.type)\n    );\n  }\n\n  /**\n   * Returns complexity of an instance\n   * @return {Number} complexity of this instance (is 1 unless subclassed)\n   */\n  complexity() {\n    return 1;\n  }\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON() {\n    // delegate, not alias\n    return this.toObject();\n  }\n\n  /**\n   * Sets \"angle\" of an instance with centered rotation\n   * @param {TDegree} angle Angle value (in degrees)\n   */\n  rotate(angle: TDegree) {\n    const { centeredRotation, originX, originY } = this;\n\n    if (centeredRotation) {\n      const { x, y } = this.getRelativeCenterPoint();\n      this.originX = CENTER;\n      this.originY = CENTER;\n      this.left = x;\n      this.top = y;\n    }\n\n    this.set('angle', angle);\n\n    if (centeredRotation) {\n      const { x, y } = this.translateToOriginPoint(\n        this.getRelativeCenterPoint(),\n        originX,\n        originY,\n      );\n      this.left = x;\n      this.top = y;\n      this.originX = originX;\n      this.originY = originY;\n    }\n  }\n\n  /**\n   * This callback function is called by the parent group of an object every\n   * time a non-delegated property changes on the group. It is passed the key\n   * and value as parameters. Not adding in this function's signature to avoid\n   * Travis build error about unused variables.\n   */\n  setOnGroup() {\n    // implemented by sub-classes, as needed.\n  }\n\n  /**\n   * Sets canvas globalCompositeOperation for specific object\n   * custom composition operation for the particular object can be specified using globalCompositeOperation property\n   * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n   */\n  _setupCompositeOperation(ctx: CanvasRenderingContext2D) {\n    if (this.globalCompositeOperation) {\n      ctx.globalCompositeOperation = this.globalCompositeOperation;\n    }\n  }\n\n  /**\n   * cancel instance's running animations\n   * override if necessary to dispose artifacts such as `clipPath`\n   */\n  dispose() {\n    runningAnimations.cancelByTarget(this);\n    this.off();\n    this._set('canvas', undefined);\n    // clear caches\n    this._cacheCanvas && getEnv().dispose(this._cacheCanvas);\n    this._cacheCanvas = undefined;\n    this._cacheContext = null;\n  }\n\n  // #region Animation methods\n  /**\n   * List of properties to consider for animating colors.\n   * @type String[]\n   */\n  static colorProperties: string[] = [FILL, STROKE, 'backgroundColor'];\n\n  /**\n   * Animates object's properties\n   * @param {Record<string, number | number[] | TColorArg>} animatable map of keys and end values\n   * @param {Partial<AnimationOptions<T>>} options\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @return {Record<string, TAnimation<T>>} map of animation contexts\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   */\n  animate<T extends number | number[] | TColorArg>(\n    animatable: Record<string, T>,\n    options?: Partial<AnimationOptions<T>>,\n  ): Record<string, TAnimation<T>> {\n    return Object.entries(animatable).reduce(\n      (acc, [key, endValue]) => {\n        acc[key] = this._animate(key, endValue, options);\n        return acc;\n      },\n      {} as Record<string, TAnimation<T>>,\n    );\n  }\n\n  /**\n   * @private\n   * @param {String} key Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   */\n  _animate<T extends number | number[] | TColorArg>(\n    key: string,\n    endValue: T,\n    options: Partial<AnimationOptions<T>> = {},\n  ): TAnimation<T> {\n    const path = key.split('.');\n    const propIsColor = (\n      this.constructor as typeof FabricObject\n    ).colorProperties.includes(path[path.length - 1]);\n    const { abort, startValue, onChange, onComplete } = options;\n    const animationOptions = {\n      ...options,\n      target: this,\n      // path.reduce... is the current value in case start value isn't provided\n      startValue:\n        startValue ?? path.reduce((deep: any, key) => deep[key], this),\n      endValue,\n      abort: abort?.bind(this),\n      onChange: (\n        value: number | number[] | string,\n        valueProgress: number,\n        durationProgress: number,\n      ) => {\n        path.reduce((deep: Record<string, any>, key, index) => {\n          if (index === path.length - 1) {\n            deep[key] = value;\n          }\n          return deep[key];\n        }, this);\n        onChange &&\n          // @ts-expect-error generic callback arg0 is wrong\n          onChange(value, valueProgress, durationProgress);\n      },\n      onComplete: (\n        value: number | number[] | string,\n        valueProgress: number,\n        durationProgress: number,\n      ) => {\n        this.setCoords();\n        onComplete &&\n          // @ts-expect-error generic callback arg0 is wrong\n          onComplete(value, valueProgress, durationProgress);\n      },\n    } as AnimationOptions<T>;\n\n    return (\n      propIsColor\n        ? animateColor(animationOptions as ColorAnimationOptions)\n        : animate(\n            animationOptions as ValueAnimationOptions | ArrayAnimationOptions,\n          )\n    ) as TAnimation<T>;\n  }\n\n  // #region Object stacking methods\n\n  /**\n   * A reference to the parent of the object\n   * Used to keep the original parent ref when the object has been added to an ActiveSelection, hence loosing the `group` ref\n   */\n  declare parent?: Group;\n\n  /**\n   * Checks if object is descendant of target\n   * Should be used instead of {@link Group.contains} or {@link StaticCanvas.contains} for performance reasons\n   * @param {TAncestor} target\n   * @returns {boolean}\n   */\n  isDescendantOf(target: TAncestor): boolean {\n    const { parent, group } = this;\n    return (\n      parent === target ||\n      group === target ||\n      // walk up\n      (!!parent && parent.isDescendantOf(target)) ||\n      (!!group && group !== parent && group.isDescendantOf(target))\n    );\n  }\n\n  /**\n   * @returns {Ancestors} ancestors (excluding `ActiveSelection`) from bottom to top\n   */\n  getAncestors(): Ancestors {\n    const ancestors: TAncestor[] = [];\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let parent: TAncestor | undefined = this;\n    do {\n      parent = parent.parent;\n      parent && ancestors.push(parent);\n    } while (parent);\n    return ancestors as Ancestors;\n  }\n\n  /**\n   * Compare ancestors\n   *\n   * @param {StackedObject} other\n   * @returns {AncestryComparison} an object that represent the ancestry situation.\n   */\n  findCommonAncestors<T extends this>(other: T): AncestryComparison {\n    if (this === other) {\n      return {\n        fork: [],\n        otherFork: [],\n        common: [this, ...this.getAncestors()],\n      } as AncestryComparison;\n    }\n    const ancestors = this.getAncestors();\n    const otherAncestors = other.getAncestors();\n    //  if `this` has no ancestors and `this` is top ancestor of `other` we must handle the following case\n    if (\n      ancestors.length === 0 &&\n      otherAncestors.length > 0 &&\n      this === otherAncestors[otherAncestors.length - 1]\n    ) {\n      return {\n        fork: [],\n        otherFork: [\n          other,\n          ...otherAncestors.slice(0, otherAncestors.length - 1),\n        ],\n        common: [this],\n      } as AncestryComparison;\n    }\n    //  compare ancestors\n    for (let i = 0, ancestor; i < ancestors.length; i++) {\n      ancestor = ancestors[i];\n      if (ancestor === other) {\n        return {\n          fork: [this, ...ancestors.slice(0, i)],\n          otherFork: [],\n          common: ancestors.slice(i),\n        } as AncestryComparison;\n      }\n      for (let j = 0; j < otherAncestors.length; j++) {\n        if (this === otherAncestors[j]) {\n          return {\n            fork: [],\n            otherFork: [other, ...otherAncestors.slice(0, j)],\n            common: [this, ...ancestors],\n          } as AncestryComparison;\n        }\n        if (ancestor === otherAncestors[j]) {\n          return {\n            fork: [this, ...ancestors.slice(0, i)],\n            otherFork: [other, ...otherAncestors.slice(0, j)],\n            common: ancestors.slice(i),\n          } as AncestryComparison;\n        }\n      }\n    }\n    // nothing shared\n    return {\n      fork: [this, ...ancestors],\n      otherFork: [other, ...otherAncestors],\n      common: [],\n    } as AncestryComparison;\n  }\n\n  /**\n   *\n   * @param {StackedObject} other\n   * @returns {boolean}\n   */\n  hasCommonAncestors<T extends this>(other: T): boolean {\n    const commonAncestors = this.findCommonAncestors(other);\n    return commonAncestors && !!commonAncestors.common.length;\n  }\n\n  /**\n   *\n   * @param {FabricObject} other object to compare against\n   * @returns {boolean | undefined} if objects do not share a common ancestor or they are strictly equal it is impossible to determine which is in front of the other; in such cases the function returns `undefined`\n   */\n  isInFrontOf<T extends this>(other: T): boolean | undefined {\n    if (this === other) {\n      return undefined;\n    }\n    const ancestorData = this.findCommonAncestors(other);\n\n    if (ancestorData.fork.includes(other as any)) {\n      return true;\n    }\n    if (ancestorData.otherFork.includes(this as any)) {\n      return false;\n    }\n    // if there isn't a common ancestor, we take the canvas.\n    // if there is no canvas, there is nothing to compare\n    const firstCommonAncestor = ancestorData.common[0] || this.canvas;\n    if (!firstCommonAncestor) {\n      return undefined;\n    }\n    const headOfFork = ancestorData.fork.pop(),\n      headOfOtherFork = ancestorData.otherFork.pop(),\n      thisIndex = (firstCommonAncestor as TCollection)._objects.indexOf(\n        headOfFork as any,\n      ),\n      otherIndex = (firstCommonAncestor as TCollection)._objects.indexOf(\n        headOfOtherFork as any,\n      );\n    return thisIndex > -1 && thisIndex > otherIndex;\n  }\n\n  // #region Serialization\n  /**\n   * Define a list of custom properties that will be serialized when\n   * instance.toObject() gets called\n   */\n  static customProperties: string[] = [];\n\n  /**\n   * Returns an object representation of an instance\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject(propertiesToInclude: any[] = []): any {\n    const propertiesToSerialize = propertiesToInclude.concat(\n      FabricObject.customProperties,\n      (this.constructor as typeof FabricObject).customProperties || [],\n    );\n    let clipPathData: Partial<SerializedObjectProps> | undefined;\n    const NUM_FRACTION_DIGITS = config.NUM_FRACTION_DIGITS;\n    const {\n      clipPath,\n      fill,\n      stroke,\n      shadow,\n      strokeDashArray,\n      left,\n      top,\n      originX,\n      originY,\n      width,\n      height,\n      strokeWidth,\n      strokeLineCap,\n      strokeDashOffset,\n      strokeLineJoin,\n      strokeUniform,\n      strokeMiterLimit,\n      scaleX,\n      scaleY,\n      angle,\n      flipX,\n      flipY,\n      opacity,\n      visible,\n      backgroundColor,\n      fillRule,\n      paintFirst,\n      globalCompositeOperation,\n      skewX,\n      skewY,\n    } = this;\n    if (clipPath && !clipPath.excludeFromExport) {\n      clipPathData = clipPath.toObject(\n        propertiesToSerialize.concat('inverted', 'absolutePositioned'),\n      );\n    }\n    const toFixedBound = (val: number) => toFixed(val, NUM_FRACTION_DIGITS);\n    const object = {\n      ...pick(this, propertiesToSerialize as (keyof this)[]),\n      type: (this.constructor as typeof FabricObject).type,\n      version: VERSION,\n      originX,\n      originY,\n      left: toFixedBound(left),\n      top: toFixedBound(top),\n      width: toFixedBound(width),\n      height: toFixedBound(height),\n      fill: isSerializableFiller(fill) ? fill.toObject() : fill,\n      stroke: isSerializableFiller(stroke) ? stroke.toObject() : stroke,\n      strokeWidth: toFixedBound(strokeWidth),\n      strokeDashArray: strokeDashArray\n        ? strokeDashArray.concat()\n        : strokeDashArray,\n      strokeLineCap,\n      strokeDashOffset,\n      strokeLineJoin,\n      strokeUniform,\n      strokeMiterLimit: toFixedBound(strokeMiterLimit),\n      scaleX: toFixedBound(scaleX),\n      scaleY: toFixedBound(scaleY),\n      angle: toFixedBound(angle),\n      flipX,\n      flipY,\n      opacity: toFixedBound(opacity),\n      shadow: shadow ? shadow.toObject() : shadow,\n      visible,\n      backgroundColor,\n      fillRule,\n      paintFirst,\n      globalCompositeOperation,\n      skewX: toFixedBound(skewX),\n      skewY: toFixedBound(skewY),\n      ...(clipPathData ? { clipPath: clipPathData } : null),\n    };\n\n    return !this.includeDefaultValues\n      ? this._removeDefaultValues(object)\n      : object;\n  }\n\n  /**\n   * Returns (dataless) object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toDatalessObject(propertiesToInclude?: any[]): any {\n    // will be overwritten by subclasses\n    return this.toObject(propertiesToInclude);\n  }\n\n  /**\n   * @private\n   * @param {Object} object\n   */\n  _removeDefaultValues<T extends object>(object: T): Partial<T> {\n    // getDefaults() ( get from static ownDefaults ) should win over prototype since anyway they get assigned to instance\n    // ownDefault vs prototype is swappable only if you change all the fabric objects consistently.\n    const defaults = (this.constructor as typeof FabricObject).getDefaults();\n    const hasStaticDefaultValues = Object.keys(defaults).length > 0;\n    const baseValues = hasStaticDefaultValues\n      ? defaults\n      : Object.getPrototypeOf(this);\n\n    return pickBy(object, (value, key) => {\n      if (key === LEFT || key === TOP || key === 'type') {\n        return true;\n      }\n      const baseValue = baseValues[key];\n      return (\n        value !== baseValue &&\n        // basically a check for [] === []\n        !(\n          Array.isArray(value) &&\n          Array.isArray(baseValue) &&\n          value.length === 0 &&\n          baseValue.length === 0\n        )\n      );\n    });\n  }\n\n  /**\n   * Returns a string representation of an instance\n   * @return {String}\n   */\n  toString() {\n    return `#<${(this.constructor as typeof FabricObject).type}>`;\n  }\n\n  /**\n   *\n   * @param {Function} klass\n   * @param {object} object\n   * @param {object} [options]\n   * @param {string} [options.extraParam] property to pass as first argument to the constructor\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<FabricObject>}\n   */\n  static _fromObject<S extends FabricObject>(\n    { type, ...serializedObjectOptions }: Record<string, unknown>,\n    { extraParam, ...options }: Abortable & { extraParam?: string } = {},\n  ): Promise<S> {\n    return enlivenObjectEnlivables<any>(serializedObjectOptions, options).then(\n      (enlivedObjectOptions) => {\n        // from the resulting enlived options, extract options.extraParam to arg0\n        // to avoid accidental overrides later\n        if (extraParam) {\n          delete enlivedObjectOptions[extraParam];\n          return new this(\n            serializedObjectOptions[extraParam],\n            // @ts-expect-error different signature\n            enlivedObjectOptions,\n          );\n        } else {\n          return new this(enlivedObjectOptions);\n        }\n      },\n    ) as Promise<S>;\n  }\n\n  /**\n   *\n   * @param {object} object\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<FabricObject>}\n   */\n  static fromObject<T extends TOptions<SerializedObjectProps>>(\n    object: T,\n    options?: Abortable,\n  ) {\n    return this._fromObject(object, options);\n  }\n}\n\nclassRegistry.setClass(FabricObject);\nclassRegistry.setClass(FabricObject, 'object');\n","import type {\n  TModificationEvents,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { fireEvent } from './fireEvent';\nimport { commonEventInfo } from './util';\n\n/**\n * Wrap an action handler with firing an event if the action is performed\n * @param {TModificationEvents} eventName the event we want to fire\n * @param {TransformActionHandler<T>} actionHandler the function to wrap\n * @param {object} extraEventInfo extra information to pas to the event handler\n * @return {TransformActionHandler<T>} a function with an action handler signature\n */\nexport const wrapWithFireEvent = <\n  T extends Transform,\n  P extends object = Record<string, never>,\n>(\n  eventName: TModificationEvents,\n  actionHandler: TransformActionHandler<T>,\n  extraEventInfo?: P,\n) => {\n  return ((eventData, transform, x, y) => {\n    const actionPerformed = actionHandler(eventData, transform, x, y);\n    if (actionPerformed) {\n      fireEvent(eventName, {\n        ...commonEventInfo(eventData, transform, x, y),\n        ...extraEventInfo,\n      });\n    }\n    return actionPerformed;\n  }) as TransformActionHandler<T>;\n};\n","import type { Transform, TransformActionHandler } from '../EventTypeDefs';\n\n/**\n * Wrap an action handler with saving/restoring object position on the transform.\n * this is the code that permits to objects to keep their position while transforming.\n * @param {Function} actionHandler the function to wrap\n * @return {Function} a function with an action handler signature\n */\nexport function wrapWithFixedAnchor<T extends Transform>(\n  actionHandler: TransformActionHandler<T>,\n) {\n  return ((eventData, transform, x, y) => {\n    const { target, originX, originY } = transform,\n      centerPoint = target.getRelativeCenterPoint(),\n      constraint = target.translateToOriginPoint(centerPoint, originX, originY),\n      actionPerformed = actionHandler(eventData, transform, x, y);\n    // flipping requires to change the transform origin, so we read from the mutated transform\n    // instead of leveraging the one destructured before\n    target.setPositionByOrigin(\n      constraint,\n      transform.originX,\n      transform.originY,\n    );\n    return actionPerformed;\n  }) as TransformActionHandler<T>;\n}\n","import type { TransformActionHandler } from '../EventTypeDefs';\nimport { CENTER, LEFT, RESIZING, RIGHT } from '../constants';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { getLocalPoint, isTransformCentered } from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\n\n/**\n * Action handler to change object's width\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const changeObjectWidth: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  const localPoint = getLocalPoint(\n    transform,\n    transform.originX,\n    transform.originY,\n    x,\n    y,\n  );\n  //  make sure the control changes width ONLY from it's side of target\n  if (\n    resolveOrigin(transform.originX) === resolveOrigin(CENTER) ||\n    (resolveOrigin(transform.originX) === resolveOrigin(RIGHT) &&\n      localPoint.x < 0) ||\n    (resolveOrigin(transform.originX) === resolveOrigin(LEFT) &&\n      localPoint.x > 0)\n  ) {\n    const { target } = transform,\n      strokePadding =\n        target.strokeWidth / (target.strokeUniform ? target.scaleX : 1),\n      multiplier = isTransformCentered(transform) ? 2 : 1,\n      oldWidth = target.width,\n      newWidth =\n        Math.abs((localPoint.x * multiplier) / target.scaleX) - strokePadding;\n    target.set('width', Math.max(newWidth, 1));\n    //  check against actual target width in case `newWidth` was rejected\n    return oldWidth !== target.width;\n  }\n  return false;\n};\n\nexport const changeWidth = wrapWithFireEvent(\n  RESIZING,\n  wrapWithFixedAnchor(changeObjectWidth),\n);\n","import { FILL, STROKE, twoMathPi } from '../constants';\nimport type { InteractiveFabricObject } from '../shapes/Object/InteractiveObject';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport type { Control } from './Control';\nimport { ROTATE } from '../constants';\n\nexport type ControlRenderingStyleOverride = Partial<\n  Pick<\n    InteractiveFabricObject,\n    | 'cornerStyle'\n    | 'cornerSize'\n    | 'cornerColor'\n    | 'cornerStrokeColor'\n    | 'cornerDashArray'\n    | 'transparentCorners'\n    | 'cornerSecondColor'\n  >\n>;\n\nexport type ControlRenderer<\n  O extends InteractiveFabricObject = InteractiveFabricObject,\n> = (\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: O,\n) => void;\n\nexport function renderMultiPointControl(\n  this: Control,\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: InteractiveFabricObject,\n) {\n  if (this.actionName == ROTATE) {\n    renderRoundedPointControl.apply(this, [\n      ctx,\n      left,\n      top,\n      styleOverride,\n      fabricObject,\n    ]);\n  } else {\n    renderPointControl.apply(this, [\n      ctx,\n      left,\n      top,\n      styleOverride,\n      fabricObject,\n    ]);\n  }\n}\n\nexport function renderPointControl(\n  this: Control,\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: InteractiveFabricObject,\n) {\n  styleOverride = styleOverride || {};\n  const xSize =\n    this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize;\n  const ySize =\n    this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize;\n\n  let myLeft = left;\n  let myTop = top;\n  let size = undefined;\n\n  ctx.save();\n  ctx.fillStyle =\n    styleOverride.cornerSecondColor || fabricObject.cornerSecondColor;\n  ctx.strokeStyle =\n    styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor || '';\n\n  if (xSize > ySize) {\n    size = xSize;\n    ctx.scale(1.0, ySize / xSize);\n    myTop = (top * xSize) / ySize;\n  } else if (ySize > xSize) {\n    size = ySize;\n    ctx.scale(xSize / ySize, 1.0);\n    myLeft = (left * ySize) / xSize;\n  } else {\n    size = xSize;\n  }\n\n  ctx.beginPath();\n  ctx.arc(myLeft, myTop, size / 1.5, 0, Math.PI * 2, false);\n  ctx.fill();\n\n  ctx.closePath();\n\n  ctx.arc(myLeft, myTop, size / 1.5, 0, Math.PI * 2, false);\n  ctx.stroke();\n\n  ctx.restore();\n}\n\nexport function renderRoundedPointControl(\n  this: Control,\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: InteractiveFabricObject,\n) {\n  styleOverride = styleOverride || {};\n  const xSize =\n    this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize;\n  const ySize =\n    this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize;\n\n  let myLeft = left;\n  let myTop = top;\n  let size = undefined;\n\n  ctx.save();\n  ctx.fillStyle =\n    styleOverride.cornerSecondColor || fabricObject.cornerSecondColor;\n  ctx.strokeStyle =\n    styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor || '';\n\n  if (xSize > ySize) {\n    size = xSize;\n    ctx.scale(1.0, ySize / xSize);\n    myTop = (top * xSize) / ySize;\n  } else if (ySize > xSize) {\n    size = ySize;\n    ctx.scale(xSize / ySize, 1.0);\n    myLeft = (left * ySize) / xSize;\n  } else {\n    size = xSize;\n  }\n\n  ctx.beginPath();\n\n  ctx.fillStyle =\n    styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor || '';\n\n  ctx.arc(myLeft, myTop, size / 1, 0, Math.PI * 2, false);\n  ctx.fill();\n\n  ctx.closePath();\n\n  ctx.beginPath();\n\n  ctx.fillStyle =\n    styleOverride.cornerSecondColor || fabricObject.cornerSecondColor || '';\n\n  ctx.arc(myLeft, myTop, size / 2, 0, Math.PI * 2, false);\n  ctx.fill();\n\n  ctx.closePath();\n  ctx.beginPath();\n\n  ctx.strokeStyle =\n    styleOverride.cornerSecondColor || fabricObject.cornerSecondColor || '';\n\n  ctx.arc(myLeft, myTop, size / 1.2, 0, Math.PI * 2, false);\n  ctx.stroke();\n\n  ctx.restore();\n}\n\n/**\n * Render a round control, as per fabric features.\n * This function is written to respect object properties like transparentCorners, cornerSize\n * cornerColor, cornerStrokeColor\n * plus the addition of offsetY and offsetX.\n * @param {CanvasRenderingContext2D} ctx context to render on\n * @param {Number} left x coordinate where the control center should be\n * @param {Number} top y coordinate where the control center should be\n * @param {Object} styleOverride override for FabricObject controls style\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\n */\nexport function renderCircleControl(\n  this: Control,\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: InteractiveFabricObject,\n) {\n  styleOverride = styleOverride || {};\n  const xSize =\n      this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize,\n    ySize = this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize,\n    transparentCorners =\n      typeof styleOverride.transparentCorners !== 'undefined'\n        ? styleOverride.transparentCorners\n        : fabricObject.transparentCorners,\n    methodName = transparentCorners ? STROKE : FILL,\n    stroke =\n      !transparentCorners &&\n      (styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor);\n  let myLeft = left,\n    myTop = top,\n    size;\n  ctx.save();\n  ctx.fillStyle = styleOverride.cornerColor || fabricObject.cornerColor || '';\n  ctx.strokeStyle =\n    styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor || '';\n  // TODO: use proper ellipse code.\n  if (xSize > ySize) {\n    size = xSize;\n    ctx.scale(1.0, ySize / xSize);\n    myTop = (top * xSize) / ySize;\n  } else if (ySize > xSize) {\n    size = ySize;\n    ctx.scale(xSize / ySize, 1.0);\n    myLeft = (left * ySize) / xSize;\n  } else {\n    size = xSize;\n  }\n  ctx.beginPath();\n  ctx.arc(myLeft, myTop, size / 2, 0, twoMathPi, false);\n  ctx[methodName]();\n  if (stroke) {\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n\n/**\n * Render a square control, as per fabric features.\n * This function is written to respect object properties like transparentCorners, cornerSize\n * cornerColor, cornerStrokeColor\n * plus the addition of offsetY and offsetX.\n * @param {CanvasRenderingContext2D} ctx context to render on\n * @param {Number} left x coordinate where the control center should be\n * @param {Number} top y coordinate where the control center should be\n * @param {Object} styleOverride override for FabricObject controls style\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\n */\nexport function renderSquareControl(\n  this: Control,\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: InteractiveFabricObject,\n) {\n  styleOverride = styleOverride || {};\n  const xSize =\n      this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize,\n    ySize = this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize,\n    transparentCorners =\n      typeof styleOverride.transparentCorners !== 'undefined'\n        ? styleOverride.transparentCorners\n        : fabricObject.transparentCorners,\n    methodName = transparentCorners ? STROKE : FILL,\n    stroke =\n      !transparentCorners &&\n      (styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor),\n    xSizeBy2 = xSize / 2,\n    ySizeBy2 = ySize / 2;\n  ctx.save();\n  ctx.fillStyle = styleOverride.cornerColor || fabricObject.cornerColor || '';\n  ctx.strokeStyle =\n    styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor || '';\n  ctx.translate(left, top);\n  //  angle is relative to canvas plane\n  const angle = fabricObject.getTotalAngle();\n  ctx.rotate(degreesToRadians(angle));\n  // this does not work, and fixed with ( && ) does not make sense.\n  // to have real transparent corners we need the controls on upperCanvas\n  // transparentCorners || ctx.clearRect(-xSizeBy2, -ySizeBy2, xSize, ySize);\n  ctx[`${methodName}Rect`](-xSizeBy2, -ySizeBy2, xSize, ySize);\n  if (stroke) {\n    ctx.strokeRect(-xSizeBy2, -ySizeBy2, xSize, ySize);\n  }\n  ctx.restore();\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport type {\n  ControlActionHandler,\n  TPointerEvent,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { Intersection } from '../Intersection';\nimport { Point } from '../Point';\nimport { SCALE } from '../constants';\nimport type { InteractiveFabricObject } from '../shapes/Object/InteractiveObject';\nimport type { TCornerPoint, TDegree, TMat2D } from '../typedefs';\nimport {\n  createRotateMatrix,\n  createScaleMatrix,\n  createTranslateMatrix,\n  multiplyTransformMatrixArray,\n} from '../util/misc/matrix';\nimport type { ControlRenderingStyleOverride } from './controlRendering';\nimport {\n  renderCircleControl,\n  renderSquareControl,\n  renderPointControl,\n  renderRoundedPointControl,\n  renderMultiPointControl,\n} from './controlRendering';\n\nexport class Control {\n  /**\n   * keep track of control visibility.\n   * mainly for backward compatibility.\n   * if you do not want to see a control, you can remove it\n   * from the control set.\n   * @type {Boolean}\n   * @default true\n   */\n  visible = true;\n\n  /**\n   * Name of the action that the control will likely execute.\n   * This is optional. FabricJS uses to identify what the user is doing for some\n   * extra optimizations. If you are writing a custom control and you want to know\n   * somewhere else in the code what is going on, you can use this string here.\n   * you can also provide a custom getActionName if your control run multiple actions\n   * depending on some external state.\n   * default to scale since is the most common, used on 4 corners by default\n   * @type {String}\n   * @default 'scale'\n   */\n  actionName = SCALE;\n\n  /**\n   * Drawing angle of the control.\n   * NOT used for now, but name marked as needed for internal logic\n   * example: to reuse the same drawing function for different rotated controls\n   * @type {Number}\n   * @default 0\n   */\n  angle = 0;\n\n  /**\n   * Relative position of the control. X\n   * 0,0 is the center of the Object, while -0.5 (left) or 0.5 (right) are the extremities\n   * of the bounding box.\n   * @type {Number}\n   * @default 0\n   */\n  x = 0;\n\n  /**\n   * Relative position of the control. Y\n   * 0,0 is the center of the Object, while -0.5 (top) or 0.5 (bottom) are the extremities\n   * of the bounding box.\n   * @type {Number}\n   * @default 0\n   */\n  y = 0;\n\n  /**\n   * Horizontal offset of the control from the defined position. In pixels\n   * Positive offset moves the control to the right, negative to the left.\n   * It used when you want to have position of control that does not scale with\n   * the bounding box. Example: rotation control is placed at x:0, y: 0.5 on\n   * the boundind box, with an offset of 30 pixels vertically. Those 30 pixels will\n   * stay 30 pixels no matter how the object is big. Another example is having 2\n   * controls in the corner, that stay in the same position when the object scale.\n   * of the bounding box.\n   * @type {Number}\n   * @default 0\n   */\n  offsetX = 0;\n\n  /**\n   * Vertical offset of the control from the defined position. In pixels\n   * Positive offset moves the control to the bottom, negative to the top.\n   * @type {Number}\n   * @default 0\n   */\n  offsetY = 0;\n\n  /**\n   * Sets the length of the control. If null, defaults to object's cornerSize.\n   * Expects both sizeX and sizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  sizeX = 0;\n\n  /**\n   * Sets the height of the control. If null, defaults to object's cornerSize.\n   * Expects both sizeX and sizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  sizeY = 0;\n\n  /**\n   * Sets the length of the touch area of the control. If null, defaults to object's touchCornerSize.\n   * Expects both touchSizeX and touchSizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  touchSizeX = 0;\n\n  /**\n   * Sets the height of the touch area of the control. If null, defaults to object's touchCornerSize.\n   * Expects both touchSizeX and touchSizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  touchSizeY = 0;\n\n  /**\n   * Css cursor style to display when the control is hovered.\n   * if the method `cursorStyleHandler` is provided, this property is ignored.\n   * @type {String}\n   * @default 'crosshair'\n   */\n  cursorStyle = 'crosshair';\n\n  /**\n   * If controls has an offsetY or offsetX, draw a line that connects\n   * the control to the bounding box\n   * @type {Boolean}\n   * @default false\n   */\n  withConnection = false;\n\n  constructor(options?: Partial<Control>) {\n    Object.assign(this, options);\n  }\n\n  /**\n   * The control actionHandler, provide one to handle action ( control being moved )\n   * @param {Event} eventData the native mouse event\n   * @param {Transform} transformData properties of the current transform\n   * @param {Number} x x position of the cursor\n   * @param {Number} y y position of the cursor\n   * @return {Boolean} true if the action/event modified the object\n   */\n  declare actionHandler: TransformActionHandler;\n\n  /**\n   * The control handler for mouse down, provide one to handle mouse down on control\n   * @param {Event} eventData the native mouse event\n   * @param {Transform} transformData properties of the current transform\n   * @param {Number} x x position of the cursor\n   * @param {Number} y y position of the cursor\n   * @return {Boolean} true if the action/event modified the object\n   */\n  declare mouseDownHandler?: ControlActionHandler;\n\n  /**\n   * The control mouseUpHandler, provide one to handle an effect on mouse up.\n   * @param {Event} eventData the native mouse event\n   * @param {Transform} transformData properties of the current transform\n   * @param {Number} x x position of the cursor\n   * @param {Number} y y position of the cursor\n   * @return {Boolean} true if the action/event modified the object\n   */\n  declare mouseUpHandler?: ControlActionHandler;\n\n  shouldActivate(\n    controlKey: string,\n    fabricObject: InteractiveFabricObject,\n    pointer: Point,\n    { tl, tr, br, bl }: TCornerPoint,\n  ) {\n    // TODO: locking logic can be handled here instead of in the control handler logic\n    return (\n      fabricObject.canvas?.getActiveObject() === fabricObject &&\n      fabricObject.isControlVisible(controlKey) &&\n      Intersection.isPointInPolygon(pointer, [tl, tr, br, bl])\n    );\n  }\n\n  /**\n   * Returns control actionHandler\n   * @param {Event} eventData the native mouse event\n   * @param {FabricObject} fabricObject on which the control is displayed\n   * @param {Control} control control for which the action handler is being asked\n   * @return {Function} the action handler\n   */\n  getActionHandler(\n    eventData: TPointerEvent,\n    fabricObject: InteractiveFabricObject,\n    control: Control,\n  ): TransformActionHandler | undefined {\n    return this.actionHandler;\n  }\n\n  /**\n   * Returns control mouseDown handler\n   * @param {Event} eventData the native mouse event\n   * @param {FabricObject} fabricObject on which the control is displayed\n   * @param {Control} control control for which the action handler is being asked\n   * @return {Function} the action handler\n   */\n  getMouseDownHandler(\n    eventData: TPointerEvent,\n    fabricObject: InteractiveFabricObject,\n    control: Control,\n  ): ControlActionHandler | undefined {\n    return this.mouseDownHandler;\n  }\n\n  /**\n   * Returns control mouseUp handler.\n   * During actions the fabricObject or the control can be of different obj\n   * @param {Event} eventData the native mouse event\n   * @param {FabricObject} fabricObject on which the control is displayed\n   * @param {Control} control control for which the action handler is being asked\n   * @return {Function} the action handler\n   */\n  getMouseUpHandler(\n    eventData: TPointerEvent,\n    fabricObject: InteractiveFabricObject,\n    control: Control,\n  ): ControlActionHandler | undefined {\n    return this.mouseUpHandler;\n  }\n\n  /**\n   * Returns control cursorStyle for css using cursorStyle. If you need a more elaborate\n   * function you can pass one in the constructor\n   * the cursorStyle property\n   * @param {Event} eventData the native mouse event\n   * @param {Control} control the current control ( likely this)\n   * @param {FabricObject} object on which the control is displayed\n   * @return {String}\n   */\n  cursorStyleHandler(\n    eventData: TPointerEvent,\n    control: Control,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    return control.cursorStyle;\n  }\n\n  /**\n   * Returns the action name. The basic implementation just return the actionName property.\n   * @param {Event} eventData the native mouse event\n   * @param {Control} control the current control ( likely this)\n   * @param {FabricObject} object on which the control is displayed\n   * @return {String}\n   */\n  getActionName(\n    eventData: TPointerEvent,\n    control: Control,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    return control.actionName;\n  }\n\n  /**\n   * Returns controls visibility\n   * @param {FabricObject} object on which the control is displayed\n   * @param {String} controlKey key where the control is memorized on the\n   * @return {Boolean}\n   */\n  getVisibility(fabricObject: InteractiveFabricObject, controlKey: string) {\n    return fabricObject._controlsVisibility?.[controlKey] ?? this.visible;\n  }\n\n  /**\n   * Sets controls visibility\n   * @param {Boolean} visibility for the object\n   * @return {Void}\n   */\n  setVisibility(\n    visibility: boolean,\n    name: string,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    this.visible = visibility;\n  }\n\n  positionHandler(\n    dim: Point,\n    finalMatrix: TMat2D,\n    fabricObject: InteractiveFabricObject,\n    currentControl: Control,\n  ) {\n    return new Point(\n      this.x * dim.x + this.offsetX,\n      this.y * dim.y + this.offsetY,\n    ).transform(finalMatrix);\n  }\n\n  /**\n   * Returns the coords for this control based on object values.\n   * @param {Number} objectAngle angle from the fabric object holding the control\n   * @param {Number} objectCornerSize cornerSize from the fabric object holding the control (or touchCornerSize if\n   *   isTouch is true)\n   * @param {Number} centerX x coordinate where the control center should be\n   * @param {Number} centerY y coordinate where the control center should be\n   * @param {boolean} isTouch true if touch corner, false if normal corner\n   */\n  calcCornerCoords(\n    angle: TDegree,\n    objectCornerSize: number,\n    centerX: number,\n    centerY: number,\n    isTouch: boolean,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    const t = multiplyTransformMatrixArray([\n      createTranslateMatrix(centerX, centerY),\n      createRotateMatrix({ angle }),\n      createScaleMatrix(\n        (isTouch ? this.touchSizeX : this.sizeX) || objectCornerSize,\n        (isTouch ? this.touchSizeY : this.sizeY) || objectCornerSize,\n      ),\n    ]);\n    return {\n      tl: new Point(-0.5, -0.5).transform(t),\n      tr: new Point(0.5, -0.5).transform(t),\n      br: new Point(0.5, 0.5).transform(t),\n      bl: new Point(-0.5, 0.5).transform(t),\n    };\n  }\n\n  /**\n   * Render function for the control.\n   * When this function runs the context is unscaled. unrotate. Just retina scaled.\n   * all the functions will have to translate to the point left,top before starting Drawing\n   * if they want to draw a control where the position is detected.\n   * left and top are the result of the positionHandler function\n   * @param {RenderingContext2D} ctx the context where the control will be drawn\n   * @param {Number} left position of the canvas where we are about to render the control.\n   * @param {Number} top position of the canvas where we are about to render the control.\n   * @param {Object} styleOverride\n   * @param {FabricObject} fabricObject the object where the control is about to be rendered\n   */\n  render(\n    ctx: CanvasRenderingContext2D,\n    left: number,\n    top: number,\n    styleOverride: ControlRenderingStyleOverride | undefined,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    styleOverride = styleOverride || {};\n    switch (styleOverride.cornerStyle || fabricObject.cornerStyle) {\n      case 'multiPoint':\n        renderMultiPointControl.call(\n          this,\n          ctx,\n          left,\n          top,\n          styleOverride,\n          fabricObject,\n        );\n        break;\n\n      case 'point':\n        renderPointControl.call(\n          this,\n          ctx,\n          left,\n          top,\n          styleOverride,\n          fabricObject,\n        );\n        break;\n\n      case 'roundedPoint':\n        renderRoundedPointControl.call(\n          this,\n          ctx,\n          left,\n          top,\n          styleOverride,\n          fabricObject,\n        );\n        break;\n      case 'circle':\n        renderCircleControl.call(\n          this,\n          ctx,\n          left,\n          top,\n          styleOverride,\n          fabricObject,\n        );\n        break;\n      default:\n        renderSquareControl.call(\n          this,\n          ctx,\n          left,\n          top,\n          styleOverride,\n          fabricObject,\n        );\n    }\n  }\n}\n","import type {\n  ControlCursorCallback,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { ROTATING } from '../constants';\nimport { radiansToDegrees } from '../util/misc/radiansDegreesConversion';\nimport { isLocked, NOT_ALLOWED_CURSOR } from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\n\n/**\n * Find the correct style for the control that is used for rotation.\n * this function is very simple and it just take care of not-allowed or standard cursor\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const rotationStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject,\n) => {\n  if (fabricObject.lockRotation) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  return control.cursorStyle;\n};\n\n/**\n * Action handler for rotation and snapping, without anchor point.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n * @private\n */\nconst rotateObjectWithSnapping: TransformActionHandler = (\n  eventData,\n  { target, ex, ey, theta, originX, originY },\n  x,\n  y,\n) => {\n  const pivotPoint = target.translateToOriginPoint(\n    target.getRelativeCenterPoint(),\n    originX,\n    originY,\n  );\n\n  if (isLocked(target, 'lockRotation')) {\n    return false;\n  }\n\n  const lastAngle = Math.atan2(ey - pivotPoint.y, ex - pivotPoint.x),\n    curAngle = Math.atan2(y - pivotPoint.y, x - pivotPoint.x);\n  let angle = radiansToDegrees(curAngle - lastAngle + theta);\n\n  if (target.snapAngle && target.snapAngle > 0) {\n    const snapAngle = target.snapAngle,\n      snapThreshold = target.snapThreshold || snapAngle,\n      rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n      leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n    if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n      angle = leftAngleLocked;\n    } else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n      angle = rightAngleLocked;\n    }\n  }\n\n  // normalize angle to positive value\n  if (angle < 0) {\n    angle = 360 + angle;\n  }\n  angle %= 360;\n\n  const hasRotated = target.angle !== angle;\n  // TODO: why aren't we using set?\n  target.angle = angle;\n  return hasRotated;\n};\n\nexport const rotationWithSnapping = wrapWithFireEvent(\n  ROTATING,\n  wrapWithFixedAnchor(rotateObjectWithSnapping),\n);\n","import type {\n  ControlCursorCallback,\n  TPointerEvent,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TAxis } from '../typedefs';\nimport type { Canvas } from '../canvas/Canvas';\nimport {\n  findCornerQuadrant,\n  getLocalPoint,\n  invertOrigin,\n  isLocked,\n  isTransformCentered,\n  NOT_ALLOWED_CURSOR,\n} from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\nimport { SCALE_X, SCALE_Y, SCALING } from '../constants';\n\ntype ScaleTransform = Transform & {\n  gestureScale?: number;\n  signX?: number;\n  signY?: number;\n};\n\ntype ScaleBy = TAxis | 'equally' | '' | undefined;\n\n/**\n * Inspect event and fabricObject properties to understand if the scaling action\n * @param {Event} eventData from the user action\n * @param {FabricObject} fabricObject the fabric object about to scale\n * @return {Boolean} true if scale is proportional\n */\nexport function scaleIsProportional(\n  eventData: TPointerEvent,\n  fabricObject: FabricObject,\n): boolean {\n  const canvas = fabricObject.canvas as Canvas,\n    uniformIsToggled = eventData[canvas.uniScaleKey!];\n  return (\n    (canvas.uniformScaling && !uniformIsToggled) ||\n    (!canvas.uniformScaling && uniformIsToggled)\n  );\n}\n\n/**\n * Inspect fabricObject to understand if the current scaling action is allowed\n * @param {FabricObject} fabricObject the fabric object about to scale\n * @param {String} by 'x' or 'y' or ''\n * @param {Boolean} scaleProportionally true if we are trying to scale proportionally\n * @return {Boolean} true if scaling is not allowed at current conditions\n */\nexport function scalingIsForbidden(\n  fabricObject: FabricObject,\n  by: ScaleBy,\n  scaleProportionally: boolean,\n) {\n  const lockX = isLocked(fabricObject, 'lockScalingX'),\n    lockY = isLocked(fabricObject, 'lockScalingY');\n  if (lockX && lockY) {\n    return true;\n  }\n  if (!by && (lockX || lockY) && scaleProportionally) {\n    return true;\n  }\n  if (lockX && by === 'x') {\n    return true;\n  }\n  if (lockY && by === 'y') {\n    return true;\n  }\n  // code crashes because of a division by 0 if a 0 sized object is scaled\n  // forbid to prevent scaling to happen. ISSUE-9475\n  const { width, height, strokeWidth } = fabricObject;\n  if (width === 0 && strokeWidth === 0 && by !== 'y') {\n    return true;\n  }\n  if (height === 0 && strokeWidth === 0 && by !== 'x') {\n    return true;\n  }\n  return false;\n}\n\nconst scaleMap = ['e', 'se', 's', 'sw', 'w', 'nw', 'n', 'ne', 'e'];\n\n/**\n * return the correct cursor style for the scale action\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const scaleCursorStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject,\n) => {\n  const scaleProportionally = scaleIsProportional(eventData, fabricObject),\n    by =\n      control.x !== 0 && control.y === 0\n        ? 'x'\n        : control.x === 0 && control.y !== 0\n          ? 'y'\n          : '';\n  if (scalingIsForbidden(fabricObject, by, scaleProportionally)) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  const n = findCornerQuadrant(fabricObject, control);\n  return `${scaleMap[n]}-resize`;\n};\n\n/**\n * Basic scaling logic, reused with different constrain for scaling X,Y, freely or equally.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @param {Object} options additional information for scaling\n * @param {String} options.by 'x', 'y', 'equally' or '' to indicate type of scaling\n * @return {Boolean} true if some change happened\n * @private\n */\nfunction scaleObject(\n  eventData: TPointerEvent,\n  transform: ScaleTransform,\n  x: number,\n  y: number,\n  options: { by?: ScaleBy } = {},\n) {\n  const target = transform.target,\n    by = options.by,\n    scaleProportionally = scaleIsProportional(eventData, target),\n    forbidScaling = scalingIsForbidden(target, by, scaleProportionally);\n  let newPoint, scaleX, scaleY, dim, signX, signY;\n\n  if (forbidScaling) {\n    return false;\n  }\n  if (transform.gestureScale) {\n    scaleX = transform.scaleX * transform.gestureScale;\n    scaleY = transform.scaleY * transform.gestureScale;\n  } else {\n    newPoint = getLocalPoint(\n      transform,\n      transform.originX,\n      transform.originY,\n      x,\n      y,\n    );\n    // use of sign: We use sign to detect change of direction of an action. sign usually change when\n    // we cross the origin point with the mouse. So a scale flip for example. There is an issue when scaling\n    // by center and scaling using one middle control ( default: mr, mt, ml, mb), the mouse movement can easily\n    // cross many time the origin point and flip the object. so we need a way to filter out the noise.\n    // This ternary here should be ok to filter out X scaling when we want Y only and vice versa.\n    signX = by !== 'y' ? Math.sign(newPoint.x || transform.signX || 1) : 1;\n    signY = by !== 'x' ? Math.sign(newPoint.y || transform.signY || 1) : 1;\n    if (!transform.signX) {\n      transform.signX = signX;\n    }\n    if (!transform.signY) {\n      transform.signY = signY;\n    }\n\n    if (\n      isLocked(target, 'lockScalingFlip') &&\n      (transform.signX !== signX || transform.signY !== signY)\n    ) {\n      return false;\n    }\n\n    dim = target._getTransformedDimensions();\n    // missing detection of flip and logic to switch the origin\n    if (scaleProportionally && !by) {\n      // uniform scaling\n      const distance = Math.abs(newPoint.x) + Math.abs(newPoint.y),\n        { original } = transform,\n        originalDistance =\n          Math.abs((dim.x * original.scaleX) / target.scaleX) +\n          Math.abs((dim.y * original.scaleY) / target.scaleY),\n        scale = distance / originalDistance;\n      scaleX = original.scaleX * scale;\n      scaleY = original.scaleY * scale;\n    } else {\n      scaleX = Math.abs((newPoint.x * target.scaleX) / dim.x);\n      scaleY = Math.abs((newPoint.y * target.scaleY) / dim.y);\n    }\n    // if we are scaling by center, we need to double the scale\n    if (isTransformCentered(transform)) {\n      scaleX *= 2;\n      scaleY *= 2;\n    }\n    if (transform.signX !== signX && by !== 'y') {\n      transform.originX = invertOrigin(transform.originX);\n      scaleX *= -1;\n      transform.signX = signX;\n    }\n    if (transform.signY !== signY && by !== 'x') {\n      transform.originY = invertOrigin(transform.originY);\n      scaleY *= -1;\n      transform.signY = signY;\n    }\n  }\n  // minScale is taken care of in the setter.\n  const oldScaleX = target.scaleX,\n    oldScaleY = target.scaleY;\n  if (!by) {\n    !isLocked(target, 'lockScalingX') && target.set(SCALE_X, scaleX);\n    !isLocked(target, 'lockScalingY') && target.set(SCALE_Y, scaleY);\n  } else {\n    // forbidden cases already handled on top here.\n    by === 'x' && target.set(SCALE_X, scaleX);\n    by === 'y' && target.set(SCALE_Y, scaleY);\n  }\n  return oldScaleX !== target.scaleX || oldScaleY !== target.scaleY;\n}\n\n/**\n * Generic scaling logic, to scale from corners either equally or freely.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const scaleObjectFromCorner: TransformActionHandler<ScaleTransform> = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return scaleObject(eventData, transform, x, y);\n};\n\n/**\n * Scaling logic for the X axis.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nconst scaleObjectX: TransformActionHandler<ScaleTransform> = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return scaleObject(eventData, transform, x, y, { by: 'x' });\n};\n\n/**\n * Scaling logic for the Y axis.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nconst scaleObjectY: TransformActionHandler<ScaleTransform> = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return scaleObject(eventData, transform, x, y, { by: 'y' });\n};\n\nexport const scalingEqually = wrapWithFireEvent(\n  SCALING,\n  wrapWithFixedAnchor(scaleObjectFromCorner),\n);\n\nexport const scalingX = wrapWithFireEvent(\n  SCALING,\n  wrapWithFixedAnchor(scaleObjectX),\n);\n\nexport const scalingY = wrapWithFireEvent(\n  SCALING,\n  wrapWithFixedAnchor(scaleObjectY),\n);\n","import type {\n  ControlCursorCallback,\n  TPointerEvent,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { Point } from '../Point';\nimport type { TAxis, TAxisKey } from '../typedefs';\nimport {\n  degreesToRadians,\n  radiansToDegrees,\n} from '../util/misc/radiansDegreesConversion';\nimport {\n  findCornerQuadrant,\n  getLocalPoint,\n  isLocked,\n  NOT_ALLOWED_CURSOR,\n} from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\nimport {\n  CENTER,\n  SCALE_X,\n  SCALE_Y,\n  SKEWING,\n  SKEW_X,\n  SKEW_Y,\n} from '../constants';\n\nexport type SkewTransform = Transform & { skewingSide: -1 | 1 };\n\nconst AXIS_KEYS: Record<\n  TAxis,\n  {\n    counterAxis: TAxis;\n    scale: TAxisKey<'scale'>;\n    skew: TAxisKey<'skew'>;\n    lockSkewing: TAxisKey<'lockSkewing'>;\n    origin: TAxisKey<'origin'>;\n    flip: TAxisKey<'flip'>;\n  }\n> = {\n  x: {\n    counterAxis: 'y',\n    scale: SCALE_X,\n    skew: SKEW_X,\n    lockSkewing: 'lockSkewingX',\n    origin: 'originX',\n    flip: 'flipX',\n  },\n  y: {\n    counterAxis: 'x',\n    scale: SCALE_Y,\n    skew: SKEW_Y,\n    lockSkewing: 'lockSkewingY',\n    origin: 'originY',\n    flip: 'flipY',\n  },\n};\n\nconst skewMap = ['ns', 'nesw', 'ew', 'nwse'];\n\n/**\n * return the correct cursor style for the skew action\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const skewCursorStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject,\n) => {\n  if (control.x !== 0 && isLocked(fabricObject, 'lockSkewingY')) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  if (control.y !== 0 && isLocked(fabricObject, 'lockSkewingX')) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  const n = findCornerQuadrant(fabricObject, control) % 4;\n  return `${skewMap[n]}-resize`;\n};\n\n/**\n * Since skewing is applied before scaling, calculations are done in a scaleless plane\n * @see https://github.com/fabricjs/fabric.js/pull/8380\n */\nfunction skewObject(\n  axis: TAxis,\n  { target, ex, ey, skewingSide, ...transform }: SkewTransform,\n  pointer: Point,\n) {\n  const { skew: skewKey } = AXIS_KEYS[axis],\n    offset = pointer\n      .subtract(new Point(ex, ey))\n      .divide(new Point(target.scaleX, target.scaleY))[axis],\n    skewingBefore = target[skewKey],\n    skewingStart = transform[skewKey],\n    shearingStart = Math.tan(degreesToRadians(skewingStart)),\n    // let a, b be the size of target\n    // let a' be the value of a after applying skewing\n    // then:\n    // a' = a + b * skewA => skewA = (a' - a) / b\n    // the value b is tricky since skewY is applied before skewX\n    b =\n      axis === 'y'\n        ? target._getTransformedDimensions({\n            scaleX: 1,\n            scaleY: 1,\n            // since skewY is applied before skewX, b (=width) is not affected by skewX\n            skewX: 0,\n          }).x\n        : target._getTransformedDimensions({\n            scaleX: 1,\n            scaleY: 1,\n          }).y;\n\n  const shearing =\n    (2 * offset * skewingSide) /\n      // we max out fractions to safeguard from asymptotic behavior\n      Math.max(b, 1) +\n    // add starting state\n    shearingStart;\n\n  const skewing = radiansToDegrees(Math.atan(shearing));\n\n  target.set(skewKey, skewing);\n  const changed = skewingBefore !== target[skewKey];\n\n  if (changed && axis === 'y') {\n    // we don't want skewing to affect scaleX\n    // so we factor it by the inverse skewing diff to make it seem unchanged to the viewer\n    const { skewX, scaleX } = target,\n      dimBefore = target._getTransformedDimensions({ skewY: skewingBefore }),\n      dimAfter = target._getTransformedDimensions(),\n      compensationFactor = skewX !== 0 ? dimBefore.x / dimAfter.x : 1;\n    compensationFactor !== 1 &&\n      target.set(SCALE_X, compensationFactor * scaleX);\n  }\n\n  return changed;\n}\n\n/**\n * Wrapped Action handler for skewing on a given axis, takes care of the\n * skew direction and determines the correct transform origin for the anchor point\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nfunction skewHandler(\n  axis: TAxis,\n  eventData: TPointerEvent,\n  transform: Transform,\n  x: number,\n  y: number,\n) {\n  const { target } = transform,\n    {\n      counterAxis,\n      origin: originKey,\n      lockSkewing: lockSkewingKey,\n      skew: skewKey,\n      flip: flipKey,\n    } = AXIS_KEYS[axis];\n  if (isLocked(target, lockSkewingKey)) {\n    return false;\n  }\n\n  const { origin: counterOriginKey, flip: counterFlipKey } =\n      AXIS_KEYS[counterAxis],\n    counterOriginFactor =\n      resolveOrigin(transform[counterOriginKey]) *\n      (target[counterFlipKey] ? -1 : 1),\n    // if the counter origin is top/left (= -0.5) then we are skewing x/y values on the bottom/right side of target respectively.\n    // if the counter origin is bottom/right (= 0.5) then we are skewing x/y values on the top/left side of target respectively.\n    // skewing direction on the top/left side of target is OPPOSITE to the direction of the movement of the pointer,\n    // so we factor skewing direction by this value.\n    skewingSide = (-Math.sign(counterOriginFactor) *\n      (target[flipKey] ? -1 : 1)) as 1 | -1,\n    skewingDirection =\n      ((target[skewKey] === 0 &&\n        // in case skewing equals 0 we use the pointer offset from target center to determine the direction of skewing\n        getLocalPoint(transform, CENTER, CENTER, x, y)[axis] > 0) ||\n      // in case target has skewing we use that as the direction\n      target[skewKey] > 0\n        ? 1\n        : -1) * skewingSide,\n    // anchor to the opposite side of the skewing direction\n    // normalize value from [-1, 1] to origin value [0, 1]\n    origin = -skewingDirection * 0.5 + 0.5;\n\n  const finalHandler = wrapWithFireEvent<SkewTransform>(\n    SKEWING,\n    wrapWithFixedAnchor((eventData, transform, x, y) =>\n      skewObject(axis, transform, new Point(x, y)),\n    ),\n  );\n\n  return finalHandler(\n    eventData,\n    {\n      ...transform,\n      [originKey]: origin,\n      skewingSide,\n    },\n    x,\n    y,\n  );\n}\n\n/**\n * Wrapped Action handler for skewing on the X axis, takes care of the\n * skew direction and determines the correct transform origin for the anchor point\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const skewHandlerX: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return skewHandler('x', eventData, transform, x, y);\n};\n\n/**\n * Wrapped Action handler for skewing on the Y axis, takes care of the\n * skew direction and determines the correct transform origin for the anchor point\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const skewHandlerY: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return skewHandler('y', eventData, transform, x, y);\n};\n","import type {\n  ControlCallback,\n  ControlCursorCallback,\n  TPointerEvent,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { SCALE_X, SCALE_Y, SKEW_X, SKEW_Y } from '../constants';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TAxisKey } from '../typedefs';\nimport { scaleCursorStyleHandler, scalingX, scalingY } from './scale';\nimport { skewCursorStyleHandler, skewHandlerX, skewHandlerY } from './skew';\n\nfunction isAltAction(eventData: TPointerEvent, target: FabricObject) {\n  return eventData[target.canvas!.altActionKey!];\n}\n\n/**\n * Inspect event, control and fabricObject to return the correct action name\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} an action name\n */\nexport const scaleOrSkewActionName: ControlCallback<\n  TAxisKey<'skew' | 'scale'> | ''\n> = (eventData, control, fabricObject) => {\n  const isAlternative = isAltAction(eventData, fabricObject);\n  if (control.x === 0) {\n    // then is scaleY or skewX\n    return isAlternative ? SKEW_X : SCALE_Y;\n  }\n  if (control.y === 0) {\n    // then is scaleY or skewX\n    return isAlternative ? SKEW_Y : SCALE_X;\n  }\n  return '';\n};\n\n/**\n * Combine skew and scale style handlers to cover fabric standard use case\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const scaleSkewCursorStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject,\n) => {\n  return isAltAction(eventData, fabricObject)\n    ? skewCursorStyleHandler(eventData, control, fabricObject)\n    : scaleCursorStyleHandler(eventData, control, fabricObject);\n};\n/**\n * Composed action handler to either scale X or skew Y\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const scalingXOrSkewingY: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return isAltAction(eventData, transform.target)\n    ? skewHandlerY(eventData, transform, x, y)\n    : scalingX(eventData, transform, x, y);\n};\n\n/**\n * Composed action handler to either scale Y or skew X\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const scalingYOrSkewingX: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return isAltAction(eventData, transform.target)\n    ? skewHandlerX(eventData, transform, x, y)\n    : scalingY(eventData, transform, x, y);\n};\n","import { RESIZING, ROTATE } from '../constants';\nimport { changeWidth } from './changeWidth';\nimport { Control } from './Control';\nimport { rotationStyleHandler, rotationWithSnapping } from './rotate';\nimport { scaleCursorStyleHandler, scalingEqually } from './scale';\nimport {\n  scaleOrSkewActionName,\n  scaleSkewCursorStyleHandler,\n  scalingXOrSkewingY,\n  scalingYOrSkewingX,\n} from './scaleSkew';\n\n// use this function if you want to generate new controls for every instance\nexport const createObjectDefaultControls = () => ({\n  ml: new Control({\n    x: -0.5,\n    y: 0,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingXOrSkewingY,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  mr: new Control({\n    x: 0.5,\n    y: 0,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingXOrSkewingY,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  mb: new Control({\n    x: 0,\n    y: 0.5,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingYOrSkewingX,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  mt: new Control({\n    x: 0,\n    y: -0.5,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingYOrSkewingX,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  tl: new Control({\n    x: -0.5,\n    y: -0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  tr: new Control({\n    x: 0.5,\n    y: -0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  bl: new Control({\n    x: -0.5,\n    y: 0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  br: new Control({\n    x: 0.5,\n    y: 0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  mtr: new Control({\n    x: 0,\n    y: -0.5,\n    actionHandler: rotationWithSnapping,\n    cursorStyleHandler: rotationStyleHandler,\n    offsetY: -40,\n    withConnection: true,\n    actionName: ROTATE,\n  }),\n\n  mlr: new Control({\n    x: -0.5,\n    y: 0,\n    actionHandler: rotationWithSnapping,\n    cursorStyleHandler: rotationStyleHandler,\n    offsetX: -40,\n    withConnection: true,\n    actionName: ROTATE,\n  }),\n\n  mbr: new Control({\n    x: 0,\n    y: 0.5,\n    actionHandler: rotationWithSnapping,\n    cursorStyleHandler: rotationStyleHandler,\n    offsetY: 40,\n    withConnection: true,\n    actionName: ROTATE,\n  }),\n\n  mrr: new Control({\n    x: 0.5,\n    y: 0,\n    actionHandler: rotationWithSnapping,\n    cursorStyleHandler: rotationStyleHandler,\n    offsetX: 40,\n    withConnection: true,\n    actionName: ROTATE,\n  }),\n});\n\nexport const createResizeControls = () => ({\n  mr: new Control({\n    x: 0.5,\n    y: 0,\n    actionHandler: changeWidth,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionName: RESIZING,\n  }),\n  ml: new Control({\n    x: -0.5,\n    y: 0,\n    actionHandler: changeWidth,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionName: RESIZING,\n  }),\n});\n\nexport const createTextboxDefaultControls = () => ({\n  ...createObjectDefaultControls(),\n  ...createResizeControls(),\n});\n","import { Point, ZERO } from '../../Point';\nimport type { TCornerPoint, TDegree } from '../../typedefs';\nimport { FabricObject } from './Object';\nimport { degreesToRadians } from '../../util/misc/radiansDegreesConversion';\nimport type { TQrDecomposeOut } from '../../util/misc/matrix';\nimport {\n  calcDimensionsMatrix,\n  createRotateMatrix,\n  createTranslateMatrix,\n  multiplyTransformMatrices,\n  qrDecompose,\n} from '../../util/misc/matrix';\nimport type { Control } from '../../controls/Control';\nimport { sizeAfterTransform } from '../../util/misc/objectTransforms';\nimport type { ObjectEvents, TPointerEvent } from '../../EventTypeDefs';\nimport type { Canvas } from '../../canvas/Canvas';\nimport type { ControlRenderingStyleOverride } from '../../controls/controlRendering';\nimport type { FabricObjectProps } from './types/FabricObjectProps';\nimport type { TFabricObjectProps, SerializedObjectProps } from './types';\nimport { createObjectDefaultControls } from '../../controls/commonControls';\nimport { interactiveObjectDefaultValues } from './defaultValues';\nimport { SCALE } from '../../constants';\n\nexport type TOCoord = Point & {\n  corner: TCornerPoint;\n  touchCorner: TCornerPoint;\n};\n\nexport type TControlSet = Record<string, Control>;\n\nexport type TBorderRenderingStyleOverride = Partial<\n  Pick<InteractiveFabricObject, 'borderColor' | 'borderDashArray'>\n>;\n\nexport type TStyleOverride = ControlRenderingStyleOverride &\n  TBorderRenderingStyleOverride &\n  Partial<\n    Pick<InteractiveFabricObject, 'hasBorders' | 'hasControls'> & {\n      forActiveSelection: boolean;\n    }\n  >;\n\nexport class InteractiveFabricObject<\n    Props extends TFabricObjectProps = Partial<FabricObjectProps>,\n    SProps extends SerializedObjectProps = SerializedObjectProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements FabricObjectProps\n{\n  declare noScaleCache: boolean;\n\n  declare snapAngle?: TDegree;\n  declare snapThreshold?: TDegree;\n\n  declare lockMovementX: boolean;\n  declare lockMovementY: boolean;\n  declare lockRotation: boolean;\n  declare lockScalingX: boolean;\n  declare lockScalingY: boolean;\n  declare lockSkewingX: boolean;\n  declare lockSkewingY: boolean;\n  declare lockScalingFlip: boolean;\n\n  declare cornerSize: number;\n  declare touchCornerSize: number;\n  declare transparentCorners: boolean;\n  declare cornerColor: string;\n  declare cornerStrokeColor: string;\n  declare cornerSecondColor: string;\n  declare cornerStyle:\n    | 'rect'\n    | 'circle'\n    | 'roundedPoint'\n    | 'point'\n    | 'multiPoint';\n  declare cornerDashArray: number[] | null;\n  declare hasControls: boolean;\n\n  declare borderColor: string;\n  declare borderDashArray: number[] | null;\n  declare borderOpacityWhenMoving: number;\n  declare borderScaleFactor: number;\n  declare hasBorders: boolean;\n  declare selectionBackgroundColor: string;\n\n  declare selectable: boolean;\n  declare evented: boolean;\n  declare perPixelTargetFind: boolean;\n  declare activeOn: 'down' | 'up';\n\n  declare hoverCursor: CSSStyleDeclaration['cursor'] | null;\n  declare moveCursor: CSSStyleDeclaration['cursor'] | null;\n\n  /**\n   * The object's controls' position in viewport coordinates\n   * Calculated by {@link Control#positionHandler} and {@link Control#calcCornerCoords}, depending on {@link padding}.\n   * `corner/touchCorner` describe the 4 points forming the interactive area of the corner.\n   * Used to draw and locate controls.\n   */\n  declare oCoords: Record<string, TOCoord>;\n\n  /**\n   * keeps the value of the last hovered corner during mouse move.\n   * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n   * It should be private, but there is no harm in using it as\n   * a read-only property.\n   * this isn't cleaned automatically. Non selected objects may have wrong values\n   * @type [string]\n   */\n  declare __corner?: string;\n\n  /**\n   * a map of control visibility for this object.\n   * this was left when controls were introduced to not break the api too much\n   * this takes priority over the generic control visibility\n   */\n  declare _controlsVisibility: Record<string, boolean>;\n\n  /**\n   * holds the controls for the object.\n   * controls are added by default_controls.js\n   */\n  declare controls: TControlSet;\n\n  /**\n   * internal boolean to signal the code that the object is\n   * part of the move action.\n   */\n  declare isMoving?: boolean;\n\n  /**\n   * A boolean used from the gesture module to keep tracking of a scaling\n   * action when there is no scaling transform in place.\n   * This is an edge case and is used twice in all codebase.\n   * Probably added to keep track of some performance issues\n   * @TODO use git blame to investigate why it was added\n   * DON'T USE IT. WE WILL TRY TO REMOVE IT\n   */\n  declare _scaling?: boolean;\n\n  declare canvas?: Canvas;\n\n  static ownDefaults = interactiveObjectDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...InteractiveFabricObject.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(\n      this,\n      (this.constructor as typeof InteractiveFabricObject).createControls(),\n      InteractiveFabricObject.ownDefaults,\n    );\n    this.setOptions(options);\n  }\n\n  /**\n   * Creates the default control object.\n   * If you prefer to have on instance of controls shared among all objects\n   * make this function return an empty object and add controls to the ownDefaults\n   * @param {Object} [options] Options object\n   */\n  static createControls(): { controls: Record<string, Control> } {\n    return { controls: createObjectDefaultControls() };\n  }\n\n  /**\n   * Update width and height of the canvas for cache\n   * returns true or false if canvas needed resize.\n   * @private\n   * @return {Boolean} true if the canvas has been resized\n   */\n  _updateCacheCanvas() {\n    const targetCanvas = this.canvas;\n    if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\n      const transform = targetCanvas._currentTransform,\n        target = transform.target,\n        action = transform.action;\n      if (\n        this === (target as unknown as this) &&\n        action &&\n        action.startsWith(SCALE)\n      ) {\n        return false;\n      }\n    }\n    return super._updateCacheCanvas();\n  }\n\n  getActiveControl() {\n    const key = this.__corner;\n    return key\n      ? {\n          key,\n          control: this.controls[key],\n          coord: this.oCoords[key],\n        }\n      : undefined;\n  }\n\n  /**\n   * Determines which corner is under the mouse cursor, represented by `pointer`.\n   * This function is return a corner only if the object is the active one.\n   * This is done to avoid selecting corner of non active object and activating transformations\n   * rather than drag action. The default behavior of fabricJS is that if you want to transform\n   * an object, first you select it to show the control set\n   * @private\n   * @param {Object} pointer The pointer indicating the mouse position\n   * @param {boolean} forTouch indicates if we are looking for interaction area with a touch action\n   * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or 0 if nothing is found.\n   */\n  findControl(\n    pointer: Point,\n    forTouch = false,\n  ): { key: string; control: Control; coord: TOCoord } | undefined {\n    if (!this.hasControls || !this.canvas) {\n      return undefined;\n    }\n\n    this.__corner = undefined;\n    const cornerEntries = Object.entries(this.oCoords);\n    for (let i = cornerEntries.length - 1; i >= 0; i--) {\n      const [key, corner] = cornerEntries[i];\n      const control = this.controls[key];\n\n      if (\n        control.shouldActivate(\n          key,\n          this,\n          pointer,\n          forTouch ? corner.touchCorner : corner.corner,\n        )\n      ) {\n        // this.canvas.contextTop.fillRect(pointer.x - 1, pointer.y - 1, 2, 2);\n        this.__corner = key;\n\n        return { key, control, coord: this.oCoords[key] };\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Calculates the coordinates of the center of each control plus the corners of the control itself\n   * This basically just delegates to each control positionHandler\n   * WARNING: changing what is passed to positionHandler is a breaking change, since position handler\n   * is a public api and should be done just if extremely necessary\n   * @return {Record<string, TOCoord>}\n   */\n  calcOCoords(): Record<string, TOCoord> {\n    const vpt = this.getViewportTransform(),\n      center = this.getCenterPoint(),\n      tMatrix = createTranslateMatrix(center.x, center.y),\n      rMatrix = createRotateMatrix({\n        angle: this.getTotalAngle() - (!!this.group && this.flipX ? 180 : 0),\n      }),\n      positionMatrix = multiplyTransformMatrices(tMatrix, rMatrix),\n      startMatrix = multiplyTransformMatrices(vpt, positionMatrix),\n      finalMatrix = multiplyTransformMatrices(startMatrix, [\n        1 / vpt[0],\n        0,\n        0,\n        1 / vpt[3],\n        0,\n        0,\n      ]),\n      transformOptions = this.group\n        ? qrDecompose(this.calcTransformMatrix())\n        : undefined;\n    // decomposing could bring negative scaling and `_calculateCurrentDimensions` can't take it\n    if (transformOptions) {\n      transformOptions.scaleX = Math.abs(transformOptions.scaleX);\n      transformOptions.scaleY = Math.abs(transformOptions.scaleY);\n    }\n    const dim = this._calculateCurrentDimensions(transformOptions),\n      coords: Record<string, TOCoord> = {};\n\n    this.forEachControl((control, key) => {\n      const position = control.positionHandler(dim, finalMatrix, this, control);\n      // coords[key] are sometimes used as points. Those are points to which we add\n      // the property corner and touchCorner from `_calcCornerCoords`.\n      // don't remove this assign for an object spread.\n      coords[key] = Object.assign(\n        position,\n        this._calcCornerCoords(control, position),\n      );\n    });\n\n    // debug code\n    /*\n      const canvas = this.canvas;\n      setTimeout(function () {\n      if (!canvas) return;\n        canvas.contextTop.clearRect(0, 0, 700, 700);\n        canvas.contextTop.fillStyle = 'green';\n        Object.keys(coords).forEach(function(key) {\n          const control = coords[key];\n          canvas.contextTop.fillRect(control.x, control.y, 3, 3);\n        });\n      } 50);\n    */\n    return coords;\n  }\n\n  /**\n   * Sets the coordinates that determine the interaction area of each control\n   * note: if we would switch to ROUND corner area, all of this would disappear.\n   * everything would resolve to a single point and a pythagorean theorem for the distance\n   * @todo evaluate simplification of code switching to circle interaction area at runtime\n   * @private\n   */\n  private _calcCornerCoords(control: Control, position: Point) {\n    const angle = this.getTotalAngle();\n    const corner = control.calcCornerCoords(\n      angle,\n      this.cornerSize,\n      position.x,\n      position.y,\n      false,\n      this,\n    );\n    const touchCorner = control.calcCornerCoords(\n      angle,\n      this.touchCornerSize,\n      position.x,\n      position.y,\n      true,\n      this,\n    );\n    return { corner, touchCorner };\n  }\n\n  /**\n   * @override set controls' coordinates as well\n   * See {@link https://github.com/fabricjs/fabric.js/wiki/When-to-call-setCoords} and {@link http://fabricjs.com/fabric-gotchas}\n   * @return {void}\n   */\n  setCoords(): void {\n    super.setCoords();\n    this.canvas && (this.oCoords = this.calcOCoords());\n  }\n\n  /**\n   * Calls a function for each control. The function gets called,\n   * with the control, the control's key and the object that is calling the iterator\n   * @param {Function} fn function to iterate over the controls over\n   */\n  forEachControl(\n    fn: (\n      control: Control,\n      key: string,\n      fabricObject: InteractiveFabricObject,\n    ) => any,\n  ) {\n    for (const i in this.controls) {\n      fn(this.controls[i], i, this);\n    }\n  }\n\n  /**\n   * Draws a colored layer behind the object, inside its selection borders.\n   * Requires public options: padding, selectionBackgroundColor\n   * this function is called when the context is transformed\n   * has checks to be skipped when the object is on a staticCanvas\n   * @todo evaluate if make this disappear in favor of a pre-render hook for objects\n   * this was added by Andrea Bogazzi to make possible some feature for work reasons\n   * it seemed a good option, now is an edge case\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   */\n  drawSelectionBackground(ctx: CanvasRenderingContext2D): void {\n    if (\n      !this.selectionBackgroundColor ||\n      (this.canvas && (this.canvas._activeObject as unknown as this) !== this)\n    ) {\n      return;\n    }\n    ctx.save();\n    const center = this.getRelativeCenterPoint(),\n      wh = this._calculateCurrentDimensions(),\n      vpt = this.getViewportTransform();\n    ctx.translate(center.x, center.y);\n    ctx.scale(1 / vpt[0], 1 / vpt[3]);\n    ctx.rotate(degreesToRadians(this.angle));\n    ctx.fillStyle = this.selectionBackgroundColor;\n    ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n    ctx.restore();\n  }\n\n  /**\n   * @public override this function in order to customize the drawing of the control box, e.g. rounded corners, different border style.\n   * @param {CanvasRenderingContext2D} ctx ctx is rotated and translated so that (0,0) is at object's center\n   * @param {Point} size the control box size used\n   */\n  strokeBorders(ctx: CanvasRenderingContext2D, size: Point): void {\n    ctx.strokeRect(-size.x / 2, -size.y / 2, size.x, size.y);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {Point} size\n   * @param {TStyleOverride} styleOverride object to override the object style\n   */\n  _drawBorders(\n    ctx: CanvasRenderingContext2D,\n    size: Point,\n    styleOverride: TStyleOverride = {},\n  ): void {\n    const options = {\n      hasControls: this.hasControls,\n      borderColor: this.borderColor,\n      borderDashArray: this.borderDashArray,\n      ...styleOverride,\n    };\n    ctx.save();\n    ctx.strokeStyle = options.borderColor;\n    this._setLineDash(ctx, options.borderDashArray);\n    this.strokeBorders(ctx, size);\n    options.hasControls && this.drawControlsConnectingLines(ctx, size);\n    ctx.restore();\n  }\n\n  /**\n   * Renders controls and borders for the object\n   * the context here is not transformed\n   * @todo move to interactivity\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {TStyleOverride} [styleOverride] properties to override the object style\n   */\n  _renderControls(\n    ctx: CanvasRenderingContext2D,\n    styleOverride: TStyleOverride = {},\n  ) {\n    const { hasBorders, hasControls } = this;\n    const styleOptions = {\n      hasBorders,\n      hasControls,\n      ...styleOverride,\n    };\n    const vpt = this.getViewportTransform(),\n      shouldDrawBorders = styleOptions.hasBorders,\n      shouldDrawControls = styleOptions.hasControls;\n    const matrix = multiplyTransformMatrices(vpt, this.calcTransformMatrix());\n    const options = qrDecompose(matrix);\n    ctx.save();\n    ctx.translate(options.translateX, options.translateY);\n    ctx.lineWidth = this.borderScaleFactor; // 1 * this.borderScaleFactor;\n    // since interactive groups have been introduced, an object could be inside a group and needing controls\n    // the following equality check `this.group === this.parent` covers:\n    // object without a group ( undefined === undefined )\n    // object inside a group\n    // excludes object inside a group but multi selected since group and parent will differ in value\n    if (this.group === this.parent) {\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n    }\n    if (this.flipX) {\n      options.angle -= 180;\n    }\n    ctx.rotate(degreesToRadians(this.group ? options.angle : this.angle));\n    shouldDrawBorders && this.drawBorders(ctx, options, styleOverride);\n    shouldDrawControls && this.drawControls(ctx, styleOverride);\n    ctx.restore();\n  }\n\n  /**\n   * Draws borders of an object's bounding box.\n   * Requires public properties: width, height\n   * Requires public options: padding, borderColor\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {object} options object representing current object parameters\n   * @param {TStyleOverride} [styleOverride] object to override the object style\n   */\n  drawBorders(\n    ctx: CanvasRenderingContext2D,\n    options: TQrDecomposeOut,\n    styleOverride: TStyleOverride,\n  ): void {\n    let size;\n    if ((styleOverride && styleOverride.forActiveSelection) || this.group) {\n      const bbox = sizeAfterTransform(\n          this.width,\n          this.height,\n          calcDimensionsMatrix(options),\n        ),\n        stroke = !this.isStrokeAccountedForInDimensions()\n          ? (this.strokeUniform\n              ? new Point().scalarAdd(this.canvas ? this.canvas.getZoom() : 1)\n              : // this is extremely confusing. options comes from the upper function\n                // and is the qrDecompose of a matrix that takes in account zoom too\n                new Point(options.scaleX, options.scaleY)\n            ).scalarMultiply(this.strokeWidth)\n          : ZERO;\n      size = bbox\n        .add(stroke)\n        .scalarAdd(this.borderScaleFactor)\n        .scalarAdd(this.padding * 2);\n    } else {\n      size = this._calculateCurrentDimensions().scalarAdd(\n        this.borderScaleFactor,\n      );\n    }\n    this._drawBorders(ctx, size, styleOverride);\n  }\n\n  /**\n   * Draws lines from a borders of an object's bounding box to controls that have `withConnection` property set.\n   * Requires public properties: width, height\n   * Requires public options: padding, borderColor\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {Point} size object size x = width, y = height\n   */\n  drawControlsConnectingLines(\n    ctx: CanvasRenderingContext2D,\n    size: Point,\n  ): void {\n    let shouldStroke = false;\n\n    ctx.beginPath();\n    this.forEachControl((control, key) => {\n      // in this moment, the ctx is centered on the object.\n      // width and height of the above function are the size of the bbox.\n      if (control.withConnection && control.getVisibility(this, key)) {\n        // reset movement for each control\n        shouldStroke = true;\n        ctx.moveTo(control.x * size.x, control.y * size.y);\n        ctx.lineTo(\n          control.x * size.x + control.offsetX,\n          control.y * size.y + control.offsetY,\n        );\n      }\n    });\n    shouldStroke && ctx.stroke();\n  }\n\n  /**\n   * Draws corners of an object's bounding box.\n   * Requires public properties: width, height\n   * Requires public options: cornerSize, padding\n   * Be aware that since fabric 6.0 this function does not call setCoords anymore.\n   * setCoords needs to be called manually if the object of which we are rendering controls\n   * is outside the standard selection and transform process.\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {ControlRenderingStyleOverride} styleOverride object to override the object style\n   */\n  drawControls(\n    ctx: CanvasRenderingContext2D,\n    styleOverride: ControlRenderingStyleOverride = {},\n  ) {\n    ctx.save();\n    const retinaScaling = this.getCanvasRetinaScaling();\n    const { cornerStrokeColor, cornerDashArray, cornerColor } = this;\n    const options = {\n      cornerStrokeColor,\n      cornerDashArray,\n      cornerColor,\n      ...styleOverride,\n    };\n    ctx.setTransform(retinaScaling, 0, 0, retinaScaling, 0, 0);\n    ctx.strokeStyle = ctx.fillStyle = options.cornerColor;\n    if (!this.transparentCorners) {\n      ctx.strokeStyle = options.cornerStrokeColor;\n    }\n    this._setLineDash(ctx, options.cornerDashArray);\n    this.forEachControl((control, key) => {\n      if (control.getVisibility(this, key)) {\n        const p = this.oCoords[key];\n        control.render(ctx, p.x, p.y, options, this);\n      }\n    });\n    ctx.restore();\n  }\n\n  /**\n   * Returns true if the specified control is visible, false otherwise.\n   * @param {string} controlKey The key of the control. Possible values are usually 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr',\n   * but since the control api allow for any control name, can be any string.\n   * @returns {boolean} true if the specified control is visible, false otherwise\n   */\n  isControlVisible(controlKey: string): boolean {\n    return (\n      this.controls[controlKey] &&\n      this.controls[controlKey].getVisibility(this, controlKey)\n    );\n  }\n\n  /**\n   * Sets the visibility of the specified control.\n   * please do not use.\n   * @param {String} controlKey The key of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n   * but since the control api allow for any control name, can be any string.\n   * @param {Boolean} visible true to set the specified control visible, false otherwise\n   * @todo discuss this overlap of priority here with the team. Andrea Bogazzi for details\n   */\n  setControlVisible(controlKey: string, visible: boolean) {\n    if (!this._controlsVisibility) {\n      this._controlsVisibility = {};\n    }\n    this._controlsVisibility[controlKey] = visible;\n  }\n\n  /**\n   * Sets the visibility state of object controls, this is just a bulk option for setControlVisible;\n   * @param {Record<string, boolean>} [options] with an optional key per control\n   * example: {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n   */\n  setControlsVisibility(options: Record<string, boolean> = {}) {\n    Object.entries(options).forEach(([controlKey, visibility]) =>\n      this.setControlVisible(controlKey, visibility),\n    );\n  }\n\n  /**\n   * Clears the canvas.contextTop in a specific area that corresponds to the object's bounding box\n   * that is in the canvas.contextContainer.\n   * This function is used to clear pieces of contextTop where we render ephemeral effects on top of the object.\n   * Example: blinking cursor text selection, drag effects.\n   * @todo discuss swapping restoreManually with a renderCallback, but think of async issues\n   * @param {Boolean} [restoreManually] When true won't restore the context after clear, in order to draw something else.\n   * @return {CanvasRenderingContext2D|undefined} canvas.contextTop that is either still transformed\n   * with the object transformMatrix, or restored to neutral transform\n   */\n  clearContextTop(\n    restoreManually?: boolean,\n  ): CanvasRenderingContext2D | undefined {\n    if (!this.canvas) {\n      return;\n    }\n    const ctx = this.canvas.contextTop;\n    if (!ctx) {\n      return;\n    }\n    const v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n    this.transform(ctx);\n    // we add 4 pixel, to be sure to do not leave any pixel out\n    const width = this.width + 4,\n      height = this.height + 4;\n    ctx.clearRect(-width / 2, -height / 2, width, height);\n\n    restoreManually || ctx.restore();\n    return ctx;\n  }\n\n  /**\n   * This callback function is called every time _discardActiveObject or _setActiveObject\n   * try to to deselect this object. If the function returns true, the process is cancelled\n   * @param {Object} [_options] options sent from the upper functions\n   * @param {TPointerEvent} [options.e] event if the process is generated by an event\n   * @param {FabricObject} [options.object] next object we are setting as active, and reason why\n   * this is being deselected\n   */\n  onDeselect(_options?: {\n    e?: TPointerEvent;\n    object?: InteractiveFabricObject;\n  }): boolean {\n    // implemented by sub-classes, as needed.\n    return false;\n  }\n\n  /**\n   * This callback function is called every time _discardActiveObject or _setActiveObject\n   * try to to select this object. If the function returns true, the process is cancelled\n   * @param {Object} [_options] options sent from the upper functions\n   * @param {Event} [_options.e] event if the process is generated by an event\n   */\n  onSelect(_options?: { e?: TPointerEvent }): boolean {\n    // implemented by sub-classes, as needed.\n    return false;\n  }\n\n  /**\n   * Override to customize Drag behavior\n   * Fired from {@link Canvas#_onMouseMove}\n   * @returns true in order for the window to start a drag session\n   */\n  shouldStartDragging(_e: TPointerEvent) {\n    return false;\n  }\n\n  /**\n   * Override to customize Drag behavior\\\n   * Fired once a drag session has started\n   * @returns true to handle the drag event\n   */\n  onDragStart(_e: DragEvent) {\n    return false;\n  }\n\n  /**\n   * Override to customize drag and drop behavior\n   * @public\n   * @param {DragEvent} _e\n   * @returns {boolean} true if the object currently dragged can be dropped on the target\n   */\n  canDrop(_e: DragEvent): boolean {\n    return false;\n  }\n\n  /**\n   * Override to customize drag and drop behavior\n   * render a specific effect when an object is the source of a drag event\n   * example: render the selection status for the part of text that is being dragged from a text object\n   * @public\n   * @param {DragEvent} _e\n   */\n  renderDragSourceEffect(_e: DragEvent) {\n    // for subclasses\n  }\n\n  /**\n   * Override to customize drag and drop behavior\n   * render a specific effect when an object is the target of a drag event\n   * used to show that the underly object can receive a drop, or to show how the\n   * object will change when dropping. example: show the cursor where the text is about to be dropped\n   * @public\n   * @param {DragEvent} _e\n   */\n  renderDropTargetEffect(_e: DragEvent) {\n    // for subclasses\n  }\n}\n","import type { Constructor } from '../typedefs';\n\n/***\n * https://www.typescriptlang.org/docs/handbook/mixins.html#alternative-pattern\n */\nexport function applyMixins<T extends Constructor, S extends Constructor>(\n  derivedCtor: T,\n  constructors: S[],\n) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      name !== 'constructor' &&\n        Object.defineProperty(\n          derivedCtor.prototype,\n          name,\n          Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n            Object.create(null),\n        );\n    });\n  });\n  return derivedCtor as T & { prototype: InstanceType<T & S> };\n}\n","import type { ObjectEvents } from '../../EventTypeDefs';\nimport { FabricObjectSVGExportMixin } from './FabricObjectSVGExportMixin';\nimport { InteractiveFabricObject } from './InteractiveObject';\nimport { applyMixins } from '../../util/applyMixins';\nimport type { FabricObjectProps } from './types/FabricObjectProps';\nimport type { TFabricObjectProps, SerializedObjectProps } from './types';\nimport { classRegistry } from '../../ClassRegistry';\n\n// TODO somehow we have to make a tree-shakeable import\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nexport interface FabricObject<\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  Props extends TFabricObjectProps = Partial<FabricObjectProps>,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  SProps extends SerializedObjectProps = SerializedObjectProps,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends FabricObjectSVGExportMixin {}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nexport class FabricObject<\n  Props extends TFabricObjectProps = Partial<FabricObjectProps>,\n  SProps extends SerializedObjectProps = SerializedObjectProps,\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends InteractiveFabricObject<Props, SProps, EventSpec> {}\n\napplyMixins(FabricObject, [FabricObjectSVGExportMixin]);\n\nclassRegistry.setClass(FabricObject);\nclassRegistry.setClass(FabricObject, 'object');\n\nexport { cacheProperties } from './defaultValues';\n","/**\n * Returns true if context has transparent pixel\n * at specified location (taking tolerance into account)\n * @param {CanvasRenderingContext2D} ctx context\n * @param {Number} x x coordinate in canvasElementCoordinate, not fabric space. integer\n * @param {Number} y y coordinate in canvasElementCoordinate, not fabric space. integer\n * @param {Number} tolerance Tolerance pixels around the point, not alpha tolerance, integer\n * @return {boolean} true if transparent\n */\nexport const isTransparent = (\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  tolerance: number,\n): boolean => {\n  tolerance = Math.round(tolerance);\n  const size = tolerance * 2 + 1;\n  const { data } = ctx.getImageData(x - tolerance, y - tolerance, size, size);\n\n  // Split image data - for tolerance > 1, pixelDataSize = 4;\n  for (let i = 3; i < data.length; i += 4) {\n    const alphaChannel = data[i];\n    if (alphaChannel > 0) {\n      return false;\n    }\n  }\n  return true;\n};\n","import type { XY } from '../../../Point';\nimport { Point } from '../../../Point';\nimport { degreesToRadians } from '../radiansDegreesConversion';\nimport { createVector } from '../vectors';\nimport type { TProjectStrokeOnPointsOptions, TProjection } from './types';\n\n/**\n * @see https://github.com/fabricjs/fabric.js/pull/8344\n * @todo consider removing skewing from points before calculating stroke projection,\n * see https://github.com/fabricjs/fabric.js/commit/494a10ee2f8c2278ae9a55b20bf50cf6ee25b064#commitcomment-94751537\n */\nexport abstract class StrokeProjectionsBase {\n  declare options: TProjectStrokeOnPointsOptions;\n  declare scale: Point;\n  declare strokeUniformScalar: Point;\n  declare strokeProjectionMagnitude: number;\n\n  constructor(options: TProjectStrokeOnPointsOptions) {\n    this.options = options;\n    this.strokeProjectionMagnitude = this.options.strokeWidth / 2;\n    this.scale = new Point(this.options.scaleX, this.options.scaleY);\n    this.strokeUniformScalar = this.options.strokeUniform\n      ? new Point(1 / this.options.scaleX, 1 / this.options.scaleY)\n      : new Point(1, 1);\n  }\n\n  /**\n   * When the stroke is uniform, scaling affects the arrangement of points. So we must take it into account.\n   */\n  protected createSideVector(from: XY, to: XY) {\n    const v = createVector(from, to);\n    return this.options.strokeUniform ? v.multiply(this.scale) : v;\n  }\n\n  protected abstract calcOrthogonalProjection(\n    from: Point,\n    to: Point,\n    magnitude?: number,\n  ): Point;\n\n  protected projectOrthogonally(from: Point, to: Point, magnitude?: number) {\n    return this.applySkew(\n      from.add(this.calcOrthogonalProjection(from, to, magnitude)),\n    );\n  }\n\n  protected isSkewed() {\n    return this.options.skewX !== 0 || this.options.skewY !== 0;\n  }\n\n  protected applySkew(point: Point) {\n    const p = new Point(point);\n    // skewY must be applied before skewX as this distortion affects skewX calculation\n    p.y += p.x * Math.tan(degreesToRadians(this.options.skewY));\n    p.x += p.y * Math.tan(degreesToRadians(this.options.skewX));\n    return p;\n  }\n\n  protected scaleUnitVector(unitVector: Point, scalar: number) {\n    return unitVector.multiply(this.strokeUniformScalar).scalarMultiply(scalar);\n  }\n\n  protected abstract projectPoints(): Point[];\n\n  public abstract project(): TProjection[];\n}\n","import type { XY } from '../../../Point';\nimport { Point } from '../../../Point';\nimport { halfPI, twoMathPi } from '../../../constants';\nimport type { TRadian } from '../../../typedefs';\nimport { degreesToRadians } from '../radiansDegreesConversion';\nimport {\n  calcAngleBetweenVectors,\n  calcVectorRotation,\n  crossProduct,\n  getOrthonormalVector,\n  getUnitVector,\n  isBetweenVectors,\n  magnitude,\n  rotateVector,\n} from '../vectors';\nimport { StrokeProjectionsBase } from './StrokeProjectionsBase';\nimport type { TProjection, TProjectStrokeOnPointsOptions } from './types';\n\nconst zeroVector = new Point();\n\n/**\n * class in charge of finding projections for each type of line join\n * @see {@link [Closed path projections at #8344](https://github.com/fabricjs/fabric.js/pull/8344#2-closed-path)}\n *\n * - MDN:\n *   - https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineJoin\n *   - https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin\n * - Spec: https://svgwg.org/svg2-draft/painting.html#StrokeLinejoinProperty\n * - Playground to understand how the line joins works: https://hypertolosana.github.io/efficient-webgl-stroking/index.html\n * - View the calculated projections for each of the control points: https://codesandbox.io/s/project-stroke-points-with-context-to-trace-b8jc4j?file=/src/index.js\n *\n */\nexport class StrokeLineJoinProjections extends StrokeProjectionsBase {\n  /**\n   * The point being projected (the angle ∠BAC)\n   */\n  declare A: Point;\n  /**\n   * The point before A\n   */\n  declare B: Point;\n  /**\n   * The point after A\n   */\n  declare C: Point;\n  /**\n   * The AB vector\n   */\n  AB: Point;\n  /**\n   * The AC vector\n   */\n  AC: Point;\n  /**\n   * The angle of A (∠BAC)\n   */\n  alpha: TRadian;\n  /**\n   * The bisector of A (∠BAC)\n   */\n  bisector: Point;\n\n  static getOrthogonalRotationFactor(vector1: Point, vector2?: Point) {\n    const angle = vector2\n      ? calcAngleBetweenVectors(vector1, vector2)\n      : calcVectorRotation(vector1);\n    return Math.abs(angle) < halfPI ? -1 : 1;\n  }\n\n  constructor(A: XY, B: XY, C: XY, options: TProjectStrokeOnPointsOptions) {\n    super(options);\n    this.A = new Point(A);\n    this.B = new Point(B);\n    this.C = new Point(C);\n    this.AB = this.createSideVector(this.A, this.B);\n    this.AC = this.createSideVector(this.A, this.C);\n    this.alpha = calcAngleBetweenVectors(this.AB, this.AC);\n    this.bisector = getUnitVector(\n      // if AC is also the zero vector nothing will be projected\n      // in that case the next point will handle the projection\n      rotateVector(this.AB.eq(zeroVector) ? this.AC : this.AB, this.alpha / 2),\n    );\n  }\n\n  calcOrthogonalProjection(\n    from: Point,\n    to: Point,\n    magnitude: number = this.strokeProjectionMagnitude,\n  ) {\n    const vector = this.createSideVector(from, to);\n    const orthogonalProjection = getOrthonormalVector(vector);\n    const correctSide = StrokeLineJoinProjections.getOrthogonalRotationFactor(\n      orthogonalProjection,\n      this.bisector,\n    );\n    return this.scaleUnitVector(orthogonalProjection, magnitude * correctSide);\n  }\n\n  /**\n   * BEVEL\n   * Calculation: the projection points are formed by the vector orthogonal to the vertex.\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-2-bevel\n   */\n  projectBevel() {\n    const projections: Point[] = [];\n    // if `alpha` equals 0 or 2*PI, the projections are the same for `B` and `C`\n    (this.alpha % twoMathPi === 0 ? [this.B] : [this.B, this.C]).forEach(\n      (to) => {\n        projections.push(this.projectOrthogonally(this.A, to));\n        projections.push(\n          this.projectOrthogonally(this.A, to, -this.strokeProjectionMagnitude),\n        );\n      },\n    );\n    return projections;\n  }\n\n  /**\n   * MITER\n   * Calculation: the corner is formed by extending the outer edges of the stroke\n   * at the tangents of the path segments until they intersect.\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-1-miter\n   */\n  projectMiter() {\n    const projections: Point[] = [],\n      alpha = Math.abs(this.alpha),\n      hypotUnitScalar = 1 / Math.sin(alpha / 2),\n      miterVector = this.scaleUnitVector(\n        this.bisector,\n        -this.strokeProjectionMagnitude * hypotUnitScalar,\n      );\n\n    // When two line segments meet at a sharp angle, it is possible for the join to extend,\n    // far beyond the thickness of the line stroking the path. The stroke-miterlimit imposes\n    // a limit on the extent of the line join.\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit\n    // When the stroke is uniform, scaling changes the arrangement of points, this changes the miter-limit\n    const strokeMiterLimit = this.options.strokeUniform\n      ? magnitude(\n          this.scaleUnitVector(this.bisector, this.options.strokeMiterLimit),\n        )\n      : this.options.strokeMiterLimit;\n\n    if (\n      magnitude(miterVector) / this.strokeProjectionMagnitude <=\n      strokeMiterLimit\n    ) {\n      projections.push(this.applySkew(this.A.add(miterVector)));\n    }\n    /* when the miter-limit is reached, the stroke line join becomes of type bevel.\n      We always need two orthogonal projections which are basically bevel-type projections,\n      so regardless of whether the miter-limit was reached or not, we include these projections.\n    */\n    projections.push(...this.projectBevel());\n\n    return projections;\n  }\n\n  /**\n   * ROUND (without skew)\n   * Calculation: the projections are the two vectors parallel to X and Y axes\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-3-1-round-without-skew\n   */\n  private projectRoundNoSkew(startCircle: Point, endCircle: Point) {\n    const projections: Point[] = [],\n      // correctSide is used to only consider projecting for the outer side\n      correctSide = new Point(\n        StrokeLineJoinProjections.getOrthogonalRotationFactor(this.bisector),\n        StrokeLineJoinProjections.getOrthogonalRotationFactor(\n          new Point(this.bisector.y, this.bisector.x),\n        ),\n      ),\n      radiusOnAxisX = new Point(1, 0)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar)\n        .multiply(correctSide),\n      radiusOnAxisY = new Point(0, 1)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar)\n        .multiply(correctSide);\n\n    [radiusOnAxisX, radiusOnAxisY].forEach((vector) => {\n      if (isBetweenVectors(vector, startCircle, endCircle)) {\n        projections.push(this.A.add(vector));\n      }\n    });\n    return projections;\n  }\n\n  /**\n   * ROUND (with skew)\n   * Calculation: the projections are the points furthest from the vertex in\n   * the direction of the X and Y axes after distortion.\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-3-2-round-skew\n   */\n  private projectRoundWithSkew(startCircle: Point, endCircle: Point) {\n    const projections: Point[] = [];\n\n    const { skewX, skewY, scaleX, scaleY, strokeUniform } = this.options,\n      shearing = new Point(\n        Math.tan(degreesToRadians(skewX)),\n        Math.tan(degreesToRadians(skewY)),\n      );\n    // The points furthest from the vertex in the direction of the X and Y axes after distortion\n    const circleRadius = this.strokeProjectionMagnitude,\n      newY = strokeUniform\n        ? circleRadius /\n          scaleY /\n          Math.sqrt(1 / scaleY ** 2 + (1 / scaleX ** 2) * shearing.y ** 2)\n        : circleRadius / Math.sqrt(1 + shearing.y ** 2),\n      furthestY = new Point(\n        // Safe guard due to floating point precision. In some situations the square root\n        // was returning NaN because of a negative number close to zero.\n        Math.sqrt(Math.max(circleRadius ** 2 - newY ** 2, 0)),\n        newY,\n      ),\n      newX = strokeUniform\n        ? circleRadius /\n          Math.sqrt(\n            1 +\n              (shearing.x ** 2 * (1 / scaleY) ** 2) /\n                (1 / scaleX + (1 / scaleX) * shearing.x * shearing.y) ** 2,\n          )\n        : circleRadius /\n          Math.sqrt(1 + shearing.x ** 2 / (1 + shearing.x * shearing.y) ** 2),\n      furthestX = new Point(\n        newX,\n        Math.sqrt(Math.max(circleRadius ** 2 - newX ** 2, 0)),\n      );\n\n    [\n      furthestX,\n      furthestX.scalarMultiply(-1),\n      furthestY,\n      furthestY.scalarMultiply(-1),\n    ]\n      // We need to skew the vector here as this information is used to check if\n      // it is between the start and end of the circle segment\n      .map((vector) =>\n        this.applySkew(\n          strokeUniform ? vector.multiply(this.strokeUniformScalar) : vector,\n        ),\n      )\n      .forEach((vector) => {\n        if (isBetweenVectors(vector, startCircle, endCircle)) {\n          projections.push(this.applySkew(this.A).add(vector));\n        }\n      });\n\n    return projections;\n  }\n\n  projectRound() {\n    const projections: Point[] = [];\n    /* Include the start and end points of the circle segment, so that only\n      the projections contained within it are included */\n    // add the orthogonal projections (start and end points of circle segment)\n    projections.push(...this.projectBevel());\n    // let's determines which one of the orthogonal projection is the beginning and end of the circle segment.\n    // when `alpha` equals 0 or 2*PI, we have a straight line, so the way to find the start/end is different.\n    const isStraightLine = this.alpha % twoMathPi === 0,\n      // change the origin of the projections to point A\n      // so that the cross product calculation is correct\n      newOrigin = this.applySkew(this.A),\n      proj0 = projections[isStraightLine ? 0 : 2].subtract(newOrigin),\n      proj1 = projections[isStraightLine ? 1 : 0].subtract(newOrigin),\n      // when `isStraightLine` === true, we compare with the vector opposite AB, otherwise we compare with the bisector.\n      comparisonVector = isStraightLine\n        ? this.applySkew(this.AB.scalarMultiply(-1))\n        : this.applySkew(\n            this.bisector.multiply(this.strokeUniformScalar).scalarMultiply(-1),\n          ),\n      // the beginning of the circle segment is always to the right of the comparison vector (cross product > 0)\n      isProj0Start = crossProduct(proj0, comparisonVector) > 0,\n      startCircle = isProj0Start ? proj0 : proj1,\n      endCircle = isProj0Start ? proj1 : proj0;\n    if (!this.isSkewed()) {\n      projections.push(...this.projectRoundNoSkew(startCircle, endCircle));\n    } else {\n      projections.push(...this.projectRoundWithSkew(startCircle, endCircle));\n    }\n    return projections;\n  }\n\n  /**\n   * Project stroke width on points returning projections for each point as follows:\n   * - `miter`: 1 point corresponding to the outer boundary. If the miter limit is exceeded, it will be 2 points (becomes bevel)\n   * - `bevel`: 2 points corresponding to the bevel possible boundaries, orthogonal to the stroke.\n   * - `round`: same as `bevel` when it has no skew, with skew are 4 points.\n   */\n  protected projectPoints() {\n    switch (this.options.strokeLineJoin) {\n      case 'miter':\n        return this.projectMiter();\n      case 'round':\n        return this.projectRound();\n      default:\n        return this.projectBevel();\n    }\n  }\n\n  public project(): TProjection[] {\n    return this.projectPoints().map((point) => ({\n      originPoint: this.A,\n      projectedPoint: point,\n      angle: this.alpha,\n      bisector: this.bisector,\n    }));\n  }\n}\n","import type { XY } from '../../../Point';\nimport { Point } from '../../../Point';\nimport { getOrthonormalVector, getUnitVector } from '../vectors';\nimport { StrokeLineJoinProjections } from './StrokeLineJoinProjections';\nimport { StrokeProjectionsBase } from './StrokeProjectionsBase';\nimport type { TProjection, TProjectStrokeOnPointsOptions } from './types';\n\n/**\n * class in charge of finding projections for each type of line cap for start/end of an open path\n * @see {@link [Open path projections at #8344](https://github.com/fabricjs/fabric.js/pull/8344#1-open-path)}\n *\n * Reference:\n * - MDN:\n *   - https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineCap\n *   - https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap\n * - Spec: https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-linecap-dev\n * - Playground to understand how the line joins works: https://hypertolosana.github.io/efficient-webgl-stroking/index.html\n * - View the calculated projections for each of the control points: https://codesandbox.io/s/project-stroke-points-with-context-to-trace-b8jc4j?file=/src/index.js\n */\nexport class StrokeLineCapProjections extends StrokeProjectionsBase {\n  /**\n   * edge point\n   */\n  declare A: Point;\n  /**\n   * point next to edge point\n   */\n  declare T: Point;\n\n  constructor(A: XY, T: XY, options: TProjectStrokeOnPointsOptions) {\n    super(options);\n    this.A = new Point(A);\n    this.T = new Point(T);\n  }\n\n  calcOrthogonalProjection(\n    from: Point,\n    to: Point,\n    magnitude: number = this.strokeProjectionMagnitude,\n  ) {\n    const vector = this.createSideVector(from, to);\n    return this.scaleUnitVector(getOrthonormalVector(vector), magnitude);\n  }\n\n  /**\n   * OPEN PATH START/END - Line cap: Butt\n   * Calculation: to find the projections, just find the points orthogonal to the stroke\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#1-1-butt\n   */\n  projectButt() {\n    return [\n      this.projectOrthogonally(this.A, this.T, this.strokeProjectionMagnitude),\n      this.projectOrthogonally(this.A, this.T, -this.strokeProjectionMagnitude),\n    ];\n  }\n\n  /**\n   * OPEN PATH START/END - Line cap: Round\n   * Calculation: same as stroke line join `round`\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#1-2-round\n   */\n  projectRound() {\n    const projections: Point[] = [];\n\n    if (!this.isSkewed() && this.A.eq(this.T)) {\n      /* 1 point case without `skew`\n        When `strokeUniform` is true, scaling has no effect.\n        So we divide by scale, to remove its effect.\n      */\n      const projection = new Point(1, 1)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar);\n      projections.push(\n        this.applySkew(this.A.add(projection)),\n        this.applySkew(this.A.subtract(projection)),\n      );\n    } else {\n      projections.push(\n        ...new StrokeLineJoinProjections(\n          this.A,\n          this.T,\n          this.T,\n          this.options,\n        ).projectRound(),\n      );\n    }\n\n    return projections;\n  }\n\n  /**\n   * OPEN PATH START/END - Line cap: Square\n   * Calculation: project a rectangle of points on the stroke in the opposite direction of the vector `AT`\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#1-3-square\n   */\n  projectSquare() {\n    const projections: Point[] = [];\n\n    if (this.A.eq(this.T)) {\n      /* 1 point case without `skew`\n        When `strokeUniform` is true, scaling has no effect.\n        So we divide by scale, to remove its effect.\n      */\n      const projection = new Point(1, 1)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar);\n      projections.push(this.A.add(projection), this.A.subtract(projection));\n    } else {\n      const orthogonalProjection = this.calcOrthogonalProjection(\n        this.A,\n        this.T,\n        this.strokeProjectionMagnitude,\n      );\n      const strokePointingOut = this.scaleUnitVector(\n        getUnitVector(this.createSideVector(this.A, this.T)),\n        -this.strokeProjectionMagnitude,\n      );\n      const projectedA = this.A.add(strokePointingOut);\n      projections.push(\n        projectedA.add(orthogonalProjection),\n        projectedA.subtract(orthogonalProjection),\n      );\n    }\n\n    return projections.map((p) => this.applySkew(p));\n  }\n\n  protected projectPoints() {\n    switch (this.options.strokeLineCap) {\n      case 'round':\n        return this.projectRound();\n      case 'square':\n        return this.projectSquare();\n      default:\n        return this.projectButt();\n    }\n  }\n\n  public project(): TProjection[] {\n    return this.projectPoints().map((point) => ({\n      originPoint: this.A,\n      projectedPoint: point,\n    }));\n  }\n}\n","import { Point, type XY } from '../../../Point';\nimport { findIndexRight } from '../../internals/findRight';\nimport { StrokeLineCapProjections } from './StrokeLineCapProjections';\nimport { StrokeLineJoinProjections } from './StrokeLineJoinProjections';\nimport type { TProjection, TProjectStrokeOnPointsOptions } from './types';\n\nexport * from './types';\n\n/**\n *\n * Used to calculate object's bounding box\n *\n * @see https://github.com/fabricjs/fabric.js/pull/8344\n *\n */\nexport const projectStrokeOnPoints = (\n  points: XY[],\n  options: TProjectStrokeOnPointsOptions,\n  openPath = false,\n): TProjection[] => {\n  const projections: TProjection[] = [];\n\n  if (points.length === 0) {\n    return projections;\n  }\n\n  // first we remove duplicate neighboring points\n  const reduced = points.reduce(\n    (reduced, point) => {\n      if (!reduced[reduced.length - 1].eq(point)) {\n        reduced.push(new Point(point));\n      }\n      return reduced;\n    },\n    [new Point(points[0])],\n  );\n\n  if (reduced.length === 1) {\n    openPath = true;\n  } else if (!openPath) {\n    // remove points from end in case they equal the first point\n    // in order to correctly project the first point\n    const start = reduced[0];\n    const index = findIndexRight(reduced, (point) => !point.eq(start));\n    reduced.splice(index + 1);\n  }\n\n  reduced.forEach((A, index, points) => {\n    let B: XY, C: XY;\n    if (index === 0) {\n      C = points[1];\n      B = openPath ? A : points[points.length - 1];\n    } else if (index === points.length - 1) {\n      B = points[index - 1];\n      C = openPath ? A : points[0];\n    } else {\n      B = points[index - 1];\n      C = points[index + 1];\n    }\n\n    if (openPath && points.length === 1) {\n      projections.push(\n        ...new StrokeLineCapProjections(A, A, options).project(),\n      );\n    } else if (openPath && (index === 0 || index === points.length - 1)) {\n      projections.push(\n        ...new StrokeLineCapProjections(\n          A,\n          index === 0 ? C : B,\n          options,\n        ).project(),\n      );\n    } else {\n      projections.push(\n        ...new StrokeLineJoinProjections(A, B, C, options).project(),\n      );\n    }\n  });\n\n  return projections;\n};\n","export const findIndexRight = <T>(\n  array: T[],\n  predicate: (value: T, index: number, array: T[]) => boolean,\n) => {\n  for (let index = array.length - 1; index >= 0; index--) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n};\n","import type { TextStyle } from '../../shapes/Text/StyledText';\n\nexport const cloneStyles = (style: TextStyle): TextStyle => {\n  const newObj: TextStyle = {};\n  Object.keys(style).forEach((key) => {\n    newObj[key] = {};\n    Object.keys(style[key]).forEach((keyInner) => {\n      newObj[key][keyInner] = { ...style[key][keyInner] };\n    });\n  });\n  return newObj;\n};\n","/**\n * Capitalizes a string\n * @param {String} string String to capitalize\n * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n * and other letters stay untouched, if false first letter is capitalized\n * and other letters are converted to lowercase.\n * @return {String} Capitalized version of a string\n */\nexport const capitalize = (string: string, firstLetterOnly = false): string =>\n  `${string.charAt(0).toUpperCase()}${\n    firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase()\n  }`;\n\n/**\n * Escapes XML in a string\n * @param {String} string String to escape\n * @return {String} Escaped version of a string\n */\nexport const escapeXml = (string: string): string =>\n  string\n    .replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&apos;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n\n/**\n * Divide a string in the user perceived single units\n * @param {String} textstring String to escape\n * @return {Array} array containing the graphemes\n */\nexport const graphemeSplit = (textstring: string): string[] => {\n  const graphemes = [];\n  for (let i = 0, chr; i < textstring.length; i++) {\n    if ((chr = getWholeChar(textstring, i)) === false) {\n      continue;\n    }\n    graphemes.push(chr as string);\n  }\n  return graphemes;\n};\n\n// taken from mdn in the charAt doc page.\nconst getWholeChar = (str: string, i: number): string | boolean => {\n  const code = str.charCodeAt(i);\n  if (isNaN(code)) {\n    return ''; // Position not found\n  }\n  if (code < 0xd800 || code > 0xdfff) {\n    return str.charAt(i);\n  }\n\n  // High surrogate (could change last hex to 0xDB7F to treat high private\n  // surrogates as single characters)\n  if (0xd800 <= code && code <= 0xdbff) {\n    if (str.length <= i + 1) {\n      throw 'High surrogate without following low surrogate';\n    }\n    const next = str.charCodeAt(i + 1);\n    if (0xdc00 > next || next > 0xdfff) {\n      throw 'High surrogate without following low surrogate';\n    }\n    return str.charAt(i) + str.charAt(i + 1);\n  }\n  // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n  if (i === 0) {\n    throw 'Low surrogate without preceding high surrogate';\n  }\n  const prev = str.charCodeAt(i - 1);\n\n  // (could change last hex to 0xDB7F to treat high private\n  // surrogates as single characters)\n  if (0xd800 > prev || prev > 0xdbff) {\n    throw 'Low surrogate without preceding high surrogate';\n  }\n  // We can pass over low surrogates now as the second component\n  // in a pair which we have already processed\n  return false;\n};\n","import { reNewline } from '../../constants';\nimport type {\n  TextStyle,\n  TextStyleDeclaration,\n} from '../../shapes/Text/StyledText';\nimport { cloneStyles } from '../internals/cloneStyles';\nimport { graphemeSplit } from '../lang_string';\n\nexport type TextStyleArray = {\n  start: number;\n  end: number;\n  style: TextStyleDeclaration;\n}[];\n\n/**\n * @param {Object} prevStyle first style to compare\n * @param {Object} thisStyle second style to compare\n * @param {boolean} forTextSpans whether to check overline, underline, and line-through properties\n * @return {boolean} true if the style changed\n */\nexport const hasStyleChanged = (\n  prevStyle: TextStyleDeclaration,\n  thisStyle: TextStyleDeclaration,\n  forTextSpans = false,\n) =>\n  prevStyle.fill !== thisStyle.fill ||\n  prevStyle.stroke !== thisStyle.stroke ||\n  prevStyle.strokeWidth !== thisStyle.strokeWidth ||\n  prevStyle.fontSize !== thisStyle.fontSize ||\n  prevStyle.fontFamily !== thisStyle.fontFamily ||\n  prevStyle.fontWeight !== thisStyle.fontWeight ||\n  prevStyle.fontStyle !== thisStyle.fontStyle ||\n  prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n  prevStyle.deltaY !== thisStyle.deltaY ||\n  (forTextSpans &&\n    (prevStyle.overline !== thisStyle.overline ||\n      prevStyle.underline !== thisStyle.underline ||\n      prevStyle.linethrough !== thisStyle.linethrough));\n\n/**\n * Returns the array form of a text object's inline styles property with styles grouped in ranges\n * rather than per character. This format is less verbose, and is better suited for storage\n * so it is used in serialization (not during runtime).\n * @param {object} styles per character styles for a text object\n * @param {String} text the text string that the styles are applied to\n * @return {{start: number, end: number, style: object}[]}\n */\nexport const stylesToArray = (\n  styles: TextStyle,\n  text: string,\n): TextStyleArray => {\n  const textLines = text.split('\\n'),\n    stylesArray = [];\n  let charIndex = -1,\n    prevStyle = {};\n  // clone style structure to prevent mutation\n  styles = cloneStyles(styles);\n\n  //loop through each textLine\n  for (let i = 0; i < textLines.length; i++) {\n    const chars = graphemeSplit(textLines[i]);\n    if (!styles[i]) {\n      //no styles exist for this line, so add the line's length to the charIndex total and reset prevStyle\n      charIndex += chars.length;\n      prevStyle = {};\n      continue;\n    }\n    //loop through each character of the current line\n    for (let c = 0; c < chars.length; c++) {\n      charIndex++;\n      const thisStyle = styles[i][c];\n      //check if style exists for this character\n      if (thisStyle && Object.keys(thisStyle).length > 0) {\n        if (hasStyleChanged(prevStyle, thisStyle, true)) {\n          stylesArray.push({\n            start: charIndex,\n            end: charIndex + 1,\n            style: thisStyle,\n          });\n        } else {\n          //if style is the same as previous character, increase end index\n          stylesArray[stylesArray.length - 1].end++;\n        }\n      }\n      prevStyle = thisStyle || {};\n    }\n  }\n  return stylesArray;\n};\n\n/**\n * Returns the object form of the styles property with styles that are assigned per\n * character rather than grouped by range. This format is more verbose, and is\n * only used during runtime (not for serialization/storage)\n * @param {Array} styles the serialized form of a text object's styles\n * @param {String} text the text string that the styles are applied to\n * @return {Object}\n */\nexport const stylesFromArray = (\n  styles: TextStyleArray | TextStyle,\n  text: string,\n): TextStyle => {\n  if (!Array.isArray(styles)) {\n    // clone to prevent mutation\n    return cloneStyles(styles);\n  }\n  const textLines = text.split(reNewline),\n    stylesObject: TextStyle = {};\n  let charIndex = -1,\n    styleIndex = 0;\n  //loop through each textLine\n  for (let i = 0; i < textLines.length; i++) {\n    const chars = graphemeSplit(textLines[i]);\n\n    //loop through each character of the current line\n    for (let c = 0; c < chars.length; c++) {\n      charIndex++;\n      //check if there's a style collection that includes the current character\n      if (\n        styles[styleIndex] &&\n        styles[styleIndex].start <= charIndex &&\n        charIndex < styles[styleIndex].end\n      ) {\n        //create object for line index if it doesn't exist\n        stylesObject[i] = stylesObject[i] || {};\n        //assign a style at this character's index\n        stylesObject[i][c] = { ...styles[styleIndex].style };\n        //if character is at the end of the current style collection, move to the next\n        if (charIndex === styles[styleIndex].end - 1) {\n          styleIndex++;\n        }\n      }\n    }\n  }\n  return stylesObject;\n};\n","import { FILL, STROKE } from '../constants';\n\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nexport const SHARED_ATTRIBUTES = [\n  'display',\n  'transform',\n  FILL,\n  'fill-opacity',\n  'fill-rule',\n  'opacity',\n  STROKE,\n  'stroke-dasharray',\n  'stroke-linecap',\n  'stroke-dashoffset',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke-width',\n  'id',\n  'paint-order',\n  'vector-effect',\n  'instantiated_by_use',\n  'clip-path',\n];\n","export function selectorMatches(element: HTMLElement, selector: string) {\n  const nodeName = element.nodeName;\n  const classNames = element.getAttribute('class');\n  const id = element.getAttribute('id');\n  const azAz = '(?![a-zA-Z\\\\-]+)';\n  let matcher;\n  // i check if a selector matches slicing away part from it.\n  // if i get empty string i should match\n  matcher = new RegExp('^' + nodeName, 'i');\n  selector = selector.replace(matcher, '');\n  if (id && selector.length) {\n    matcher = new RegExp('#' + id + azAz, 'i');\n    selector = selector.replace(matcher, '');\n  }\n  if (classNames && selector.length) {\n    const splitClassNames = classNames.split(' ');\n    for (let i = splitClassNames.length; i--; ) {\n      matcher = new RegExp('\\\\.' + splitClassNames[i] + azAz, 'i');\n      selector = selector.replace(matcher, '');\n    }\n  }\n  return selector.length === 0;\n}\n","import { selectorMatches } from './selectorMatches';\nimport { doesSomeParentMatch } from './doesSomeParentMatch';\n\n/**\n * @private\n */\n\nexport function elementMatchesRule(element: HTMLElement, selectors: string[]) {\n  let parentMatching = true;\n  // start from rightmost selector.\n  const firstMatching = selectorMatches(element, selectors.pop()!);\n  if (firstMatching && selectors.length) {\n    parentMatching = doesSomeParentMatch(element, selectors);\n  }\n  return firstMatching && parentMatching && selectors.length === 0;\n}\n","import { selectorMatches } from './selectorMatches';\n\nexport function doesSomeParentMatch(element: HTMLElement, selectors: string[]) {\n  let selector: string,\n    parentMatching = true;\n  while (\n    element.parentElement &&\n    element.parentElement.nodeType === 1 &&\n    selectors.length\n  ) {\n    if (parentMatching) {\n      selector = selectors.pop()!;\n    }\n    element = element.parentElement;\n    parentMatching = selectorMatches(element, selector!);\n  }\n  return selectors.length === 0;\n}\n","import { attributesMap } from './constants';\n\nexport const normalizeAttr = (\n  attr: keyof typeof attributesMap | string,\n): string => attributesMap[attr as keyof typeof attributesMap] ?? attr;\n","import { reNum } from '../../parser/constants';\n\nconst regex = new RegExp(`(${reNum})`, 'gi');\n\nexport const cleanupSvgAttribute = (attributeValue: string) =>\n  attributeValue\n    .replace(regex, ' $1 ')\n    // replace annoying commas and arbitrary whitespace with single spaces\n    .replace(/,/gi, ' ')\n    .replace(/\\s+/gi, ' ');\n","import { ROTATE, SCALE, SKEW_X, SKEW_Y, iMatrix } from '../constants';\nimport { reNum } from './constants';\nimport type { TMat2D } from '../typedefs';\nimport { cleanupSvgAttribute } from '../util/internals/cleanupSvgAttribute';\nimport {\n  createRotateMatrix,\n  createScaleMatrix,\n  createSkewXMatrix,\n  createSkewYMatrix,\n  createTranslateMatrix,\n  multiplyTransformMatrixArray,\n} from '../util/misc/matrix';\n\n// == begin transform regexp\nconst p = `(${reNum})`;\nconst skewX = String.raw`(skewX)\\(${p}\\)`;\nconst skewY = String.raw`(skewY)\\(${p}\\)`;\nconst rotate = String.raw`(rotate)\\(${p}(?: ${p} ${p})?\\)`;\nconst scale = String.raw`(scale)\\(${p}(?: ${p})?\\)`;\nconst translate = String.raw`(translate)\\(${p}(?: ${p})?\\)`;\nconst matrix = String.raw`(matrix)\\(${p} ${p} ${p} ${p} ${p} ${p}\\)`;\nconst transform = `(?:${matrix}|${translate}|${rotate}|${scale}|${skewX}|${skewY})`;\nconst transforms = `(?:${transform}*)`;\nconst transformList = String.raw`^\\s*(?:${transforms}?)\\s*$`;\n// http://www.w3.org/TR/SVG/coords.html#TransformAttribute\nconst reTransformList = new RegExp(transformList);\nconst reTransform = new RegExp(transform);\nconst reTransformAll = new RegExp(transform, 'g');\n// == end transform regexp\n\n/**\n * Parses \"transform\" attribute, returning an array of values\n * @static\n * @function\n * @memberOf fabric\n * @param {String} attributeValue String containing attribute value\n * @return {TTransformMatrix} Array of 6 elements representing transformation matrix\n */\nexport function parseTransformAttribute(attributeValue: string): TMat2D {\n  // first we clean the string\n  attributeValue = cleanupSvgAttribute(attributeValue)\n    // remove spaces around front parentheses\n    .replace(/\\s*([()])\\s*/gi, '$1');\n\n  // start with identity matrix\n  const matrices: TMat2D[] = [];\n\n  // return if no argument was given or\n  // an argument does not match transform attribute regexp\n  if (\n    !attributeValue ||\n    (attributeValue && !reTransformList.test(attributeValue))\n  ) {\n    return [...iMatrix];\n  }\n\n  for (const match of attributeValue.matchAll(reTransformAll)) {\n    const transformMatch = reTransform.exec(match[0]);\n    if (!transformMatch) {\n      continue;\n    }\n    let matrix: TMat2D = iMatrix;\n    const matchedParams = transformMatch.filter((m) => !!m);\n    const [, operation, ...rawArgs] = matchedParams;\n    const [arg0, arg1, arg2, arg3, arg4, arg5] = rawArgs.map((arg) =>\n      parseFloat(arg),\n    );\n\n    switch (operation) {\n      case 'translate':\n        matrix = createTranslateMatrix(arg0, arg1);\n        break;\n      case ROTATE:\n        matrix = createRotateMatrix({ angle: arg0 }, { x: arg1, y: arg2 });\n        break;\n      case SCALE:\n        matrix = createScaleMatrix(arg0, arg1);\n        break;\n      case SKEW_X:\n        matrix = createSkewXMatrix(arg0);\n        break;\n      case SKEW_Y:\n        matrix = createSkewYMatrix(arg0);\n        break;\n      case 'matrix':\n        matrix = [arg0, arg1, arg2, arg3, arg4, arg5];\n        break;\n    }\n\n    // snapshot current matrix into matrices array\n    matrices.push(matrix);\n  }\n\n  return multiplyTransformMatrixArray(matrices);\n}\n","import { multiplyTransformMatrices } from '../util/misc/matrix';\nimport { parseUnit } from '../util/misc/svgParsing';\nimport { parseTransformAttribute } from './parseTransformAttribute';\nimport { CENTER, LEFT, RIGHT, NONE, FILL, STROKE } from '../constants';\n\nexport function normalizeValue(\n  attr: string,\n  value: any,\n  parentAttributes: Record<string, any>,\n  fontSize: number,\n): string | null | boolean | number[] | number {\n  const isArray = Array.isArray(value);\n  let parsed: number | number[];\n  let ouputValue: string | null | boolean | number[] | number = value;\n  if ((attr === FILL || attr === STROKE) && value === NONE) {\n    ouputValue = '';\n  } else if (attr === 'strokeUniform') {\n    return value === 'non-scaling-stroke';\n  } else if (attr === 'strokeDashArray') {\n    if (value === NONE) {\n      ouputValue = null;\n    } else {\n      ouputValue = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\n    }\n  } else if (attr === 'transformMatrix') {\n    if (parentAttributes && parentAttributes.transformMatrix) {\n      ouputValue = multiplyTransformMatrices(\n        parentAttributes.transformMatrix,\n        parseTransformAttribute(value),\n      );\n    } else {\n      ouputValue = parseTransformAttribute(value);\n    }\n  } else if (attr === 'visible') {\n    ouputValue = value !== NONE && value !== 'hidden';\n    // display=none on parent element always takes precedence over child element\n    if (parentAttributes && parentAttributes.visible === false) {\n      ouputValue = false;\n    }\n  } else if (attr === 'opacity') {\n    ouputValue = parseFloat(value);\n    if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n      ouputValue *= parentAttributes.opacity as number;\n    }\n  } else if (attr === 'textAnchor' /* text-anchor */) {\n    ouputValue = value === 'start' ? LEFT : value === 'end' ? RIGHT : CENTER;\n  } else if (attr === 'charSpacing') {\n    // parseUnit returns px and we convert it to em\n    parsed = (parseUnit(value, fontSize) / fontSize) * 1000;\n  } else if (attr === 'paintFirst') {\n    const fillIndex = value.indexOf(FILL);\n    const strokeIndex = value.indexOf(STROKE);\n    ouputValue = FILL;\n    if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n      ouputValue = STROKE;\n    } else if (fillIndex === -1 && strokeIndex > -1) {\n      ouputValue = STROKE;\n    }\n  } else if (\n    attr === 'href' ||\n    attr === 'xlink:href' ||\n    attr === 'font' ||\n    attr === 'id'\n  ) {\n    return value;\n  } else if (attr === 'imageSmoothing') {\n    return value === 'optimizeQuality';\n  } else {\n    parsed = isArray\n      ? (value as string[]).map(parseUnit)\n      : parseUnit(value, fontSize);\n  }\n\n  return !isArray && isNaN(parsed! as number) ? ouputValue : parsed!;\n}\n","import { parseUnit } from '../util/misc/svgParsing';\nimport { reFontDeclaration } from './constants';\n\n/**\n * Parses a short font declaration, building adding its properties to a style object\n * @static\n * @function\n * @memberOf fabric\n * @param {String} value font declaration\n * @param {Object} oStyle definition\n */\nexport function parseFontDeclaration(\n  value: string,\n  oStyle: Record<string, any>,\n): void {\n  const match = value.match(reFontDeclaration);\n\n  if (!match) {\n    return;\n  }\n  const fontStyle = match[1],\n    // font variant is not used\n    // fontVariant = match[2],\n    fontWeight = match[3],\n    fontSize = match[4],\n    lineHeight = match[5],\n    fontFamily = match[6];\n\n  if (fontStyle) {\n    oStyle.fontStyle = fontStyle;\n  }\n  if (fontWeight) {\n    oStyle.fontWeight = isNaN(parseFloat(fontWeight))\n      ? fontWeight\n      : parseFloat(fontWeight);\n  }\n  if (fontSize) {\n    oStyle.fontSize = parseUnit(fontSize);\n  }\n  if (fontFamily) {\n    oStyle.fontFamily = fontFamily;\n  }\n  if (lineHeight) {\n    oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n  }\n}\n","/**\n * Takes a style string and parses it in one that has only defined values\n * and lowercases properties\n * @param style\n * @param oStyle\n */\nexport function parseStyleString(\n  style: string,\n  oStyle: Record<string, any>,\n): void {\n  style\n    .replace(/;\\s*$/, '')\n    .split(';')\n    .forEach((chunk) => {\n      if (!chunk) return;\n      const [attr, value] = chunk.split(':');\n      oStyle[attr.trim().toLowerCase()] = value.trim();\n    });\n}\n","import { parseStyleObject } from './parseStyleObject';\nimport { parseStyleString } from './parseStyleString';\n\n/**\n * Parses \"style\" attribute, retuning an object with values\n * @static\n * @memberOf fabric\n * @param {SVGElement} element Element to parse\n * @return {Object} Objects with values parsed from style attribute of an element\n */\nexport function parseStyleAttribute(element: HTMLElement): Record<string, any> {\n  const oStyle: Record<string, any> = {},\n    style = element.getAttribute('style');\n\n  if (!style) {\n    return oStyle;\n  }\n\n  if (typeof style === 'string') {\n    parseStyleString(style, oStyle);\n  } else {\n    parseStyleObject(style, oStyle);\n  }\n\n  return oStyle;\n}\n","/**\n * Takes a style object and parses it in one that has only defined values\n * and lowercases properties\n * @param style\n * @param oStyle\n */\nexport function parseStyleObject(\n  style: Record<string, any>,\n  oStyle: Record<string, any>,\n): void {\n  Object.entries(style).forEach(([prop, value]) => {\n    if (value === undefined) {\n      return;\n    }\n    oStyle[prop.toLowerCase()] = value;\n  });\n}\n","import { Color } from '../color/Color';\nimport { toFixed } from '../util/misc/toFixed';\nimport { FabricObject } from '../shapes/Object/FabricObject';\n\nconst colorAttributesMap = {\n  stroke: 'strokeOpacity',\n  fill: 'fillOpacity',\n};\n\n/**\n * @private\n * @param {Object} attributes Array of attributes to parse\n */\n\nexport function setStrokeFillOpacity(\n  attributes: Record<string, any>,\n): Record<string, any> {\n  const defaults = FabricObject.getDefaults();\n  Object.entries(colorAttributesMap).forEach(([attr, colorAttr]) => {\n    if (\n      typeof attributes[colorAttr] === 'undefined' ||\n      attributes[attr] === ''\n    ) {\n      return;\n    }\n    if (typeof attributes[attr] === 'undefined') {\n      if (!defaults[attr]) {\n        return;\n      }\n      attributes[attr] = defaults[attr];\n    }\n    if (attributes[attr].indexOf('url(') === 0) {\n      return;\n    }\n    const color = new Color(attributes[attr]);\n    attributes[attr] = color\n      .setAlpha(toFixed(color.getAlpha() * attributes[colorAttr], 2))\n      .toRgba();\n  });\n  return attributes;\n}\n","import { DEFAULT_SVG_FONT_SIZE } from '../constants';\nimport { parseUnit } from '../util/misc/svgParsing';\nimport { cPath, fSize, svgValidParentsRegEx } from './constants';\nimport { getGlobalStylesForElement } from './getGlobalStylesForElement';\nimport { normalizeAttr } from './normalizeAttr';\nimport { normalizeValue } from './normalizeValue';\nimport { parseFontDeclaration } from './parseFontDeclaration';\nimport { parseStyleAttribute } from './parseStyleAttribute';\nimport { setStrokeFillOpacity } from './setStrokeFillOpacity';\nimport type { CSSRules } from './typedefs';\n\n/**\n * Returns an object of attributes' name/value, given element and an array of attribute names;\n * Parses parent \"g\" nodes recursively upwards.\n * @param {SVGElement | HTMLElement} element Element to parse\n * @param {Array} attributes Array of attributes to parse\n * @return {Object} object containing parsed attributes' names/values\n */\nexport function parseAttributes(\n  element: HTMLElement | null,\n  attributes: string[],\n  cssRules?: CSSRules,\n): Record<string, any> {\n  if (!element) {\n    return {};\n  }\n\n  let parentAttributes: Record<string, string> = {},\n    fontSize: number,\n    parentFontSize = DEFAULT_SVG_FONT_SIZE;\n\n  // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n  if (\n    element.parentNode &&\n    svgValidParentsRegEx.test(element.parentNode.nodeName)\n  ) {\n    parentAttributes = parseAttributes(\n      element.parentElement,\n      attributes,\n      cssRules,\n    );\n    if (parentAttributes.fontSize) {\n      fontSize = parentFontSize = parseUnit(parentAttributes.fontSize);\n    }\n  }\n\n  const ownAttributes: Record<string, string> = {\n    ...attributes.reduce<Record<string, string>>((memo, attr) => {\n      const value = element.getAttribute(attr);\n      if (value) {\n        memo[attr] = value;\n      }\n      return memo;\n    }, {}),\n    // add values parsed from style, which take precedence over attributes\n    // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n    ...getGlobalStylesForElement(element, cssRules),\n    ...parseStyleAttribute(element),\n  };\n\n  if (ownAttributes[cPath]) {\n    element.setAttribute(cPath, ownAttributes[cPath]);\n  }\n  if (ownAttributes[fSize]) {\n    // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\n    fontSize = parseUnit(ownAttributes[fSize], parentFontSize);\n    ownAttributes[fSize] = `${fontSize}`;\n  }\n\n  // this should have its own complex type\n  const normalizedStyle: Record<\n    string,\n    string | boolean | number | number[] | null\n  > = {};\n  for (const attr in ownAttributes) {\n    const normalizedAttr = normalizeAttr(attr);\n    const normalizedValue = normalizeValue(\n      normalizedAttr,\n      ownAttributes[attr],\n      parentAttributes,\n      fontSize!,\n    );\n    normalizedStyle[normalizedAttr] = normalizedValue;\n  }\n  if (normalizedStyle && normalizedStyle.font) {\n    parseFontDeclaration(normalizedStyle.font as string, normalizedStyle);\n  }\n  const mergedAttrs = { ...parentAttributes, ...normalizedStyle };\n  return svgValidParentsRegEx.test(element.nodeName)\n    ? mergedAttrs\n    : setStrokeFillOpacity(mergedAttrs);\n}\n","import { elementMatchesRule } from './elementMatchesRule';\nimport type { CSSRules } from './typedefs';\n\n/**\n * @private\n */\n\nexport function getGlobalStylesForElement(\n  element: HTMLElement,\n  cssRules: CSSRules = {},\n) {\n  let styles: Record<string, string> = {};\n  for (const rule in cssRules) {\n    if (elementMatchesRule(element, rule.split(' '))) {\n      styles = {\n        ...styles,\n        ...cssRules[rule],\n      };\n    }\n  }\n  return styles;\n}\n","import { kRect } from '../constants';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport type { CSSRules } from '../parser/typedefs';\n\nexport const rectDefaultValues: Partial<TClassProperties<Rect>> = {\n  rx: 0,\n  ry: 0,\n};\n\ninterface UniqueRectProps {\n  rx: number;\n  ry: number;\n}\n\nexport interface SerializedRectProps\n  extends SerializedObjectProps,\n    UniqueRectProps {}\n\nexport interface RectProps extends FabricObjectProps, UniqueRectProps {}\n\nconst RECT_PROPS = ['rx', 'ry'] as const;\n\nexport class Rect<\n    Props extends TOptions<RectProps> = Partial<RectProps>,\n    SProps extends SerializedRectProps = SerializedRectProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements RectProps\n{\n  /**\n   * Horizontal border radius\n   * @type Number\n   * @default\n   */\n  declare rx: number;\n\n  /**\n   * Vertical border radius\n   * @type Number\n   * @default\n   */\n  declare ry: number;\n\n  static type = 'Rect';\n\n  static cacheProperties = [...cacheProperties, ...RECT_PROPS];\n\n  static ownDefaults = rectDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Rect.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, Rect.ownDefaults);\n    this.setOptions(options);\n    this._initRxRy();\n  }\n  /**\n   * Initializes rx/ry attributes\n   * @private\n   */\n  _initRxRy() {\n    const { rx, ry } = this;\n    if (rx && !ry) {\n      this.ry = rx;\n    } else if (ry && !rx) {\n      this.rx = ry;\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const { width: w, height: h } = this;\n    const x = -w / 2;\n    const y = -h / 2;\n    const rx = this.rx ? Math.min(this.rx, w / 2) : 0;\n    const ry = this.ry ? Math.min(this.ry, h / 2) : 0;\n    const isRounded = rx !== 0 || ry !== 0;\n\n    ctx.beginPath();\n\n    ctx.moveTo(x + rx, y);\n\n    ctx.lineTo(x + w - rx, y);\n    isRounded &&\n      ctx.bezierCurveTo(\n        x + w - kRect * rx,\n        y,\n        x + w,\n        y + kRect * ry,\n        x + w,\n        y + ry,\n      );\n\n    ctx.lineTo(x + w, y + h - ry);\n    isRounded &&\n      ctx.bezierCurveTo(\n        x + w,\n        y + h - kRect * ry,\n        x + w - kRect * rx,\n        y + h,\n        x + w - rx,\n        y + h,\n      );\n\n    ctx.lineTo(x + rx, y + h);\n    isRounded &&\n      ctx.bezierCurveTo(\n        x + kRect * rx,\n        y + h,\n        x,\n        y + h - kRect * ry,\n        x,\n        y + h - ry,\n      );\n\n    ctx.lineTo(x, y + ry);\n    isRounded &&\n      ctx.bezierCurveTo(x, y + kRect * ry, x + kRect * rx, y, x + rx, y);\n\n    ctx.closePath();\n\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject([...RECT_PROPS, ...propertiesToInclude]);\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const { width, height, rx, ry } = this;\n    return [\n      '<rect ',\n      'COMMON_PARTS',\n      `x=\"${-width / 2}\" y=\"${\n        -height / 2\n      }\" rx=\"${rx}\" ry=\"${ry}\" width=\"${width}\" height=\"${height}\" />\\n`,\n    ];\n  }\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `Rect.fromElement`)\n   * @static\n   * @memberOf Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  static ATTRIBUTE_NAMES = [\n    ...SHARED_ATTRIBUTES,\n    'x',\n    'y',\n    'rx',\n    'ry',\n    'width',\n    'height',\n  ];\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * Returns {@link Rect} instance from an SVG element\n   * @static\n   * @memberOf Rect\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const {\n      left = 0,\n      top = 0,\n      width = 0,\n      height = 0,\n      visible = true,\n      ...restOfparsedAttributes\n    } = parseAttributes(element, this.ATTRIBUTE_NAMES, cssRules);\n\n    return new this({\n      ...options,\n      ...restOfparsedAttributes,\n      left,\n      top,\n      width,\n      height,\n      visible: Boolean(visible && width && height),\n    });\n  }\n\n  /* _FROM_SVG_END_ */\n}\n\nclassRegistry.setClass(Rect);\nclassRegistry.setSVGClass(Rect);\n","export const LAYOUT_TYPE_INITIALIZATION = 'initialization';\nexport const LAYOUT_TYPE_ADDED = 'added';\nexport const LAYOUT_TYPE_REMOVED = 'removed';\nexport const LAYOUT_TYPE_IMPERATIVE = 'imperative';\nexport const LAYOUT_TYPE_OBJECT_MODIFIED = 'object_modified';\nexport const LAYOUT_TYPE_OBJECT_MODIFYING = 'object_modifying';\n","import { Point, ZERO } from '../../Point';\nimport type { Group } from '../../shapes/Group';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { multiplyTransformMatrixArray } from '../../util/misc/matrix';\nimport { sizeAfterTransform } from '../../util/misc/objectTransforms';\nimport {\n  calcPlaneChangeMatrix,\n  sendVectorToPlane,\n} from '../../util/misc/planeChange';\n\n/**\n * @returns 2 points, the tl and br corners of the non rotated bounding box of an object\n * in the {@link group} plane, taking into account objects that {@link group} is their parent\n * but also belong to the active selection.\n */\nexport const getObjectBounds = (\n  destinationGroup: Group,\n  object: FabricObject,\n): Point[] => {\n  const {\n    strokeUniform,\n    strokeWidth,\n    width,\n    height,\n    group: currentGroup,\n  } = object;\n  const t =\n    currentGroup && currentGroup !== destinationGroup\n      ? calcPlaneChangeMatrix(\n          currentGroup.calcTransformMatrix(),\n          destinationGroup.calcTransformMatrix(),\n        )\n      : null;\n  const objectCenter = t\n    ? object.getRelativeCenterPoint().transform(t)\n    : object.getRelativeCenterPoint();\n  const accountForStroke = !object['isStrokeAccountedForInDimensions']();\n  const strokeUniformVector =\n    strokeUniform && accountForStroke\n      ? sendVectorToPlane(\n          new Point(strokeWidth, strokeWidth),\n          undefined,\n          destinationGroup.calcTransformMatrix(),\n        )\n      : ZERO;\n  const scalingStrokeWidth =\n    !strokeUniform && accountForStroke ? strokeWidth : 0;\n  const sizeVector = sizeAfterTransform(\n    width + scalingStrokeWidth,\n    height + scalingStrokeWidth,\n    multiplyTransformMatrixArray([t, object.calcOwnMatrix()], true),\n  )\n    .add(strokeUniformVector)\n    .scalarDivide(2);\n  return [objectCenter.subtract(sizeVector), objectCenter.add(sizeVector)];\n};\n","import { Point } from '../../Point';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { makeBoundingBoxFromPoints } from '../../util/misc/boundingBoxFromPoints';\nimport {\n  LAYOUT_TYPE_INITIALIZATION,\n  LAYOUT_TYPE_IMPERATIVE,\n} from '../constants';\nimport type {\n  InitializationLayoutContext,\n  LayoutStrategyResult,\n  StrictLayoutContext,\n} from '../types';\nimport { getObjectBounds } from './utils';\n\n/**\n * Exposes a main public method {@link calcLayoutResult} that is used by the `LayoutManager` to perform layout.\n * Returning `undefined` signals the `LayoutManager` to skip the layout.\n *\n * In charge of calculating the bounding box of the passed objects.\n */\nexport abstract class LayoutStrategy {\n  /**\n   * override by subclass for persistence (TS does not support `static abstract`)\n   */\n  static type = 'strategy';\n\n  /**\n   * Used by the `LayoutManager` to perform layout\n   * @TODO/fix: if this method is calcResult, should calc unconditionally.\n   * the condition to not calc should be evaluated by the layoutManager.\n   * @returns layout result **OR** `undefined` to skip layout\n   */\n  public calcLayoutResult(\n    context: StrictLayoutContext,\n    objects: FabricObject[],\n  ): LayoutStrategyResult | undefined {\n    if (this.shouldPerformLayout(context)) {\n      return this.calcBoundingBox(objects, context);\n    }\n  }\n\n  shouldPerformLayout({ type, prevStrategy, strategy }: StrictLayoutContext) {\n    return (\n      type === LAYOUT_TYPE_INITIALIZATION ||\n      type === LAYOUT_TYPE_IMPERATIVE ||\n      (!!prevStrategy && strategy !== prevStrategy)\n    );\n  }\n\n  shouldLayoutClipPath({ type, target: { clipPath } }: StrictLayoutContext) {\n    return (\n      type !== LAYOUT_TYPE_INITIALIZATION &&\n      clipPath &&\n      !clipPath.absolutePositioned\n    );\n  }\n\n  getInitialSize(\n    context: StrictLayoutContext & InitializationLayoutContext,\n    result: Pick<LayoutStrategyResult, 'center' | 'size'>,\n  ) {\n    return result.size;\n  }\n\n  /**\n   * Override this method to customize layout.\n   */\n  calcBoundingBox(\n    objects: FabricObject[],\n    context: StrictLayoutContext,\n  ): LayoutStrategyResult | undefined {\n    const { type, target } = context;\n    if (type === LAYOUT_TYPE_IMPERATIVE && context.overrides) {\n      return context.overrides;\n    }\n    if (objects.length === 0) {\n      return;\n    }\n    const { left, top, width, height } = makeBoundingBoxFromPoints(\n      objects\n        .map((object) => getObjectBounds(target, object))\n        .reduce<Point[]>((coords, curr) => coords.concat(curr), []),\n    );\n    const bboxSize = new Point(width, height);\n    const bboxLeftTop = new Point(left, top);\n    const bboxCenter = bboxLeftTop.add(bboxSize.scalarDivide(2));\n\n    if (type === LAYOUT_TYPE_INITIALIZATION) {\n      const actualSize = this.getInitialSize(context, {\n        size: bboxSize,\n        center: bboxCenter,\n      });\n      return {\n        // in `initialization` we do not account for target's transformation matrix\n        center: bboxCenter,\n        // TODO: investigate if this is still necessary\n        relativeCorrection: new Point(0, 0),\n        size: actualSize,\n      };\n    } else {\n      //  we send `relativeCenter` up to group's containing plane\n      const center = bboxCenter.transform(target.calcOwnMatrix());\n      return {\n        center,\n        size: bboxSize,\n      };\n    }\n  }\n}\n","import type { StrictLayoutContext } from '../types';\nimport { LayoutStrategy } from './LayoutStrategy';\nimport { classRegistry } from '../../ClassRegistry';\n\n/**\n * Layout will adjust the bounding box to fit target's objects.\n */\nexport class FitContentLayout extends LayoutStrategy {\n  static readonly type = 'fit-content';\n\n  /**\n   * @override layout on all triggers\n   * Override at will\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  shouldPerformLayout(context: StrictLayoutContext) {\n    return true;\n  }\n}\n\nclassRegistry.setClass(FitContentLayout);\n","import { Point } from '../Point';\nimport {\n  CENTER,\n  CHANGED,\n  MODIFIED,\n  MODIFY_PATH,\n  MODIFY_POLY,\n  MOVING,\n  RESIZING,\n  ROTATING,\n  SCALING,\n  SKEWING,\n  iMatrix,\n} from '../constants';\nimport type { Group } from '../shapes/Group';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport { invertTransform } from '../util/misc/matrix';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { FitContentLayout } from './LayoutStrategies/FitContentLayout';\nimport type { LayoutStrategy } from './LayoutStrategies/LayoutStrategy';\nimport {\n  LAYOUT_TYPE_INITIALIZATION,\n  LAYOUT_TYPE_ADDED,\n  LAYOUT_TYPE_REMOVED,\n  LAYOUT_TYPE_IMPERATIVE,\n  LAYOUT_TYPE_OBJECT_MODIFIED,\n  LAYOUT_TYPE_OBJECT_MODIFYING,\n} from './constants';\nimport type {\n  LayoutContext,\n  LayoutResult,\n  RegistrationContext,\n  StrictLayoutContext,\n} from './types';\nimport { classRegistry } from '../ClassRegistry';\nimport type { TModificationEvents } from '../EventTypeDefs';\n\nconst LAYOUT_MANAGER = 'layoutManager';\n\nexport type SerializedLayoutManager = {\n  type: string;\n  strategy: string;\n};\n\nexport class LayoutManager {\n  private declare _prevLayoutStrategy?: LayoutStrategy;\n  protected declare _subscriptions: Map<FabricObject, VoidFunction[]>;\n\n  strategy: LayoutStrategy;\n\n  constructor(strategy: LayoutStrategy = new FitContentLayout()) {\n    this.strategy = strategy;\n    this._subscriptions = new Map();\n  }\n\n  public performLayout(context: LayoutContext) {\n    const strictContext: StrictLayoutContext = {\n      bubbles: true,\n      strategy: this.strategy,\n      ...context,\n      prevStrategy: this._prevLayoutStrategy,\n      stopPropagation() {\n        this.bubbles = false;\n      },\n    };\n\n    this.onBeforeLayout(strictContext);\n\n    const layoutResult = this.getLayoutResult(strictContext);\n    if (layoutResult) {\n      this.commitLayout(strictContext, layoutResult);\n    }\n\n    this.onAfterLayout(strictContext, layoutResult);\n    this._prevLayoutStrategy = strictContext.strategy;\n  }\n\n  /**\n   * Attach handlers for events that we know will invalidate the layout when\n   * performed on child objects ( general transforms ).\n   * Returns the disposers for later unsubscribing and cleanup\n   * @param {FabricObject} object\n   * @param {RegistrationContext & Partial<StrictLayoutContext>} context\n   * @returns {VoidFunction[]} disposers remove the handlers\n   */\n  protected attachHandlers(\n    object: FabricObject,\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ): VoidFunction[] {\n    const { target } = context;\n    return (\n      [\n        MODIFIED,\n        MOVING,\n        RESIZING,\n        ROTATING,\n        SCALING,\n        SKEWING,\n        CHANGED,\n        MODIFY_POLY,\n        MODIFY_PATH,\n      ] as (TModificationEvents & 'modified')[]\n    ).map((key) =>\n      object.on(key, (e) =>\n        this.performLayout(\n          key === MODIFIED\n            ? {\n                type: LAYOUT_TYPE_OBJECT_MODIFIED,\n                trigger: key,\n                e,\n                target,\n              }\n            : {\n                type: LAYOUT_TYPE_OBJECT_MODIFYING,\n                trigger: key,\n                e,\n                target,\n              },\n        ),\n      ),\n    );\n  }\n\n  /**\n   * Subscribe an object to transform events that will trigger a layout change on the parent\n   * This is important only for interactive groups.\n   * @param object\n   * @param context\n   */\n  protected subscribe(\n    object: FabricObject,\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ) {\n    this.unsubscribe(object, context);\n    const disposers = this.attachHandlers(object, context);\n    this._subscriptions.set(object, disposers);\n  }\n\n  /**\n   * unsubscribe object layout triggers\n   */\n  protected unsubscribe(\n    object: FabricObject,\n    _context?: RegistrationContext & Partial<StrictLayoutContext>,\n  ) {\n    (this._subscriptions.get(object) || []).forEach((d) => d());\n    this._subscriptions.delete(object);\n  }\n\n  unsubscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ) {\n    context.targets.forEach((object) => this.unsubscribe(object, context));\n  }\n\n  subscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ) {\n    context.targets.forEach((object) => this.subscribe(object, context));\n  }\n\n  protected onBeforeLayout(context: StrictLayoutContext) {\n    const { target, type } = context;\n    const { canvas } = target;\n    // handle layout triggers subscription\n    // @TODO: gate the registration when the group is interactive\n    if (type === LAYOUT_TYPE_INITIALIZATION || type === LAYOUT_TYPE_ADDED) {\n      this.subscribeTargets(context);\n    } else if (type === LAYOUT_TYPE_REMOVED) {\n      this.unsubscribeTargets(context);\n    }\n    // fire layout event (event will fire only for layouts after initialization layout)\n    target.fire('layout:before', {\n      context,\n    });\n    canvas &&\n      canvas.fire('object:layout:before', {\n        target,\n        context,\n      });\n\n    if (type === LAYOUT_TYPE_IMPERATIVE && context.deep) {\n      const { strategy: _, ...tricklingContext } = context;\n      // traverse the tree\n      target.forEachObject(\n        (object) =>\n          (object as Group).layoutManager &&\n          (object as Group).layoutManager.performLayout({\n            ...tricklingContext,\n            bubbles: false,\n            target: object as Group,\n          }),\n      );\n    }\n  }\n\n  protected getLayoutResult(\n    context: StrictLayoutContext,\n  ): Required<LayoutResult> | undefined {\n    const { target, strategy, type } = context;\n\n    const result = strategy.calcLayoutResult(context, target.getObjects());\n\n    if (!result) {\n      return;\n    }\n\n    const prevCenter =\n      type === LAYOUT_TYPE_INITIALIZATION\n        ? new Point()\n        : target.getRelativeCenterPoint();\n\n    const {\n      center: nextCenter,\n      correction = new Point(),\n      relativeCorrection = new Point(),\n    } = result;\n    const offset = prevCenter\n      .subtract(nextCenter)\n      .add(correction)\n      .transform(\n        // in `initialization` we do not account for target's transformation matrix\n        type === LAYOUT_TYPE_INITIALIZATION\n          ? iMatrix\n          : invertTransform(target.calcOwnMatrix()),\n        true,\n      )\n      .add(relativeCorrection);\n\n    return {\n      result,\n      prevCenter,\n      nextCenter,\n      offset,\n    };\n  }\n\n  protected commitLayout(\n    context: StrictLayoutContext,\n    layoutResult: Required<LayoutResult>,\n  ) {\n    const { target } = context;\n    const {\n      result: { size },\n      nextCenter,\n    } = layoutResult;\n    // set dimensions\n    target.set({ width: size.x, height: size.y });\n    // layout descendants\n    this.layoutObjects(context, layoutResult);\n    //  set position\n    // in `initialization` we do not account for target's transformation matrix\n    if (context.type === LAYOUT_TYPE_INITIALIZATION) {\n      // TODO: what about strokeWidth?\n      target.set({\n        left:\n          context.x ?? nextCenter.x + size.x * resolveOrigin(target.originX),\n        top: context.y ?? nextCenter.y + size.y * resolveOrigin(target.originY),\n      });\n    } else {\n      target.setPositionByOrigin(nextCenter, CENTER, CENTER);\n      // invalidate\n      target.setCoords();\n      target.set('dirty', true);\n    }\n  }\n\n  protected layoutObjects(\n    context: StrictLayoutContext,\n    layoutResult: Required<LayoutResult>,\n  ) {\n    const { target } = context;\n    //  adjust objects to account for new center\n    target.forEachObject((object) => {\n      object.group === target &&\n        this.layoutObject(context, layoutResult, object);\n    });\n    // adjust clip path to account for new center\n    context.strategy.shouldLayoutClipPath(context) &&\n      this.layoutObject(context, layoutResult, target.clipPath as FabricObject);\n  }\n\n  /**\n   * @param {FabricObject} object\n   * @param {Point} offset\n   */\n  protected layoutObject(\n    context: StrictLayoutContext,\n    { offset }: Required<LayoutResult>,\n    object: FabricObject,\n  ) {\n    // TODO: this is here for cache invalidation.\n    // verify if this is necessary since we have explicit\n    // cache invalidation at the end of commitLayout\n    object.set({\n      left: object.left + offset.x,\n      top: object.top + offset.y,\n    });\n  }\n\n  protected onAfterLayout(\n    context: StrictLayoutContext,\n    layoutResult?: LayoutResult,\n  ) {\n    const {\n      target,\n      strategy,\n      bubbles,\n      prevStrategy: _,\n      ...bubblingContext\n    } = context;\n    const { canvas } = target;\n\n    //  fire layout event (event will fire only for layouts after initialization layout)\n    target.fire('layout:after', {\n      context,\n      result: layoutResult,\n    });\n    canvas &&\n      canvas.fire('object:layout:after', {\n        context,\n        result: layoutResult,\n        target,\n      });\n\n    //  bubble\n    const parent = target.parent;\n    if (bubbles && parent?.layoutManager) {\n      //  add target to context#path\n      (bubblingContext.path || (bubblingContext.path = [])).push(target);\n      //  all parents should invalidate their layout\n      parent.layoutManager.performLayout({\n        ...bubblingContext,\n        target: parent,\n      });\n    }\n    target.set('dirty', true);\n  }\n\n  dispose() {\n    const { _subscriptions } = this;\n    _subscriptions.forEach((disposers) => disposers.forEach((d) => d()));\n    _subscriptions.clear();\n  }\n\n  toObject() {\n    return {\n      type: LAYOUT_MANAGER,\n      strategy: (this.strategy.constructor as typeof LayoutStrategy).type,\n    };\n  }\n\n  toJSON() {\n    return this.toObject();\n  }\n}\n\nclassRegistry.setClass(LayoutManager, LAYOUT_MANAGER);\n","import type { CollectionEvents, ObjectEvents } from '../EventTypeDefs';\nimport { createCollectionMixin } from '../Collection';\nimport type {\n  TClassProperties,\n  TSVGReviver,\n  TOptions,\n  Abortable,\n} from '../typedefs';\nimport {\n  invertTransform,\n  multiplyTransformMatrices,\n} from '../util/misc/matrix';\nimport {\n  enlivenObjectEnlivables,\n  enlivenObjects,\n} from '../util/misc/objectEnlive';\nimport { applyTransformToObject } from '../util/misc/objectTransforms';\nimport { FabricObject } from './Object/FabricObject';\nimport { Rect } from './Rect';\nimport { classRegistry } from '../ClassRegistry';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport { log } from '../util/internals/console';\nimport type {\n  ImperativeLayoutOptions,\n  LayoutBeforeEvent,\n  LayoutAfterEvent,\n} from '../LayoutManager/types';\nimport { LayoutManager } from '../LayoutManager/LayoutManager';\nimport {\n  LAYOUT_TYPE_ADDED,\n  LAYOUT_TYPE_IMPERATIVE,\n  LAYOUT_TYPE_INITIALIZATION,\n  LAYOUT_TYPE_REMOVED,\n} from '../LayoutManager/constants';\nimport type { SerializedLayoutManager } from '../LayoutManager/LayoutManager';\nimport type { FitContentLayout } from '../LayoutManager';\nimport type { DrawContext } from './Object/Object';\n\n/**\n * This class handles the specific case of creating a group using {@link Group#fromObject} and is not meant to be used in any other case.\n * We could have used a boolean in the constructor, as we did previously, but we think the boolean\n * would stay in the group's constructor interface and create confusion, therefore it was removed.\n * This layout manager doesn't do anything and therefore keeps the exact layout the group had when {@link Group#toObject} was called.\n */\nclass NoopLayoutManager extends LayoutManager {\n  performLayout() {}\n}\n\nexport interface GroupEvents extends ObjectEvents, CollectionEvents {\n  'layout:before': LayoutBeforeEvent;\n  'layout:after': LayoutAfterEvent;\n}\n\nexport interface GroupOwnProps {\n  subTargetCheck: boolean;\n  interactive: boolean;\n}\n\nexport interface SerializedGroupProps\n  extends SerializedObjectProps,\n    GroupOwnProps {\n  objects: SerializedObjectProps[];\n  layoutManager: SerializedLayoutManager;\n}\n\nexport interface GroupProps extends FabricObjectProps, GroupOwnProps {\n  layoutManager: LayoutManager;\n}\n\nexport const groupDefaultValues: Partial<TClassProperties<Group>> = {\n  strokeWidth: 0,\n  subTargetCheck: false,\n  interactive: false,\n};\n\n/**\n * @fires object:added\n * @fires object:removed\n * @fires layout:before\n * @fires layout:after\n */\nexport class Group\n  extends createCollectionMixin(\n    FabricObject<GroupProps, SerializedGroupProps, GroupEvents>,\n  )\n  implements GroupProps\n{\n  /**\n   * Used to optimize performance\n   * set to `false` if you don't need contained objects to be targets of events\n   * @default\n   * @type boolean\n   */\n  declare subTargetCheck: boolean;\n\n  /**\n   * Used to allow targeting of object inside groups.\n   * set to true if you want to select an object inside a group.\\\n   * **REQUIRES** `subTargetCheck` set to true\n   * This will be not removed but slowly replaced with a method setInteractive\n   * that will take care of enabling subTargetCheck and necessary object events.\n   * There is too much attached to group interactivity to just be evaluated by a\n   * boolean in the code\n   * @default\n   * @deprecated\n   * @type boolean\n   */\n  declare interactive: boolean;\n\n  declare layoutManager: LayoutManager;\n\n  /**\n   * Used internally to optimize performance\n   * Once an object is selected, instance is rendered without the selected object.\n   * This way instance is cached only once for the entire interaction with the selected object.\n   * @private\n   */\n  protected _activeObjects: FabricObject[] = [];\n\n  static type = 'Group';\n\n  static ownDefaults: Record<string, any> = groupDefaultValues;\n  private __objectSelectionTracker: (ev: ObjectEvents['selected']) => void;\n  private __objectSelectionDisposer: (ev: ObjectEvents['deselected']) => void;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Group.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {FabricObject[]} [objects] instance objects\n   * @param {Object} [options] Options object\n   */\n  constructor(objects: FabricObject[] = [], options: Partial<GroupProps> = {}) {\n    super();\n    Object.assign(this, Group.ownDefaults);\n    this.setOptions(options);\n    this.groupInit(objects, options);\n  }\n\n  /**\n   * Shared code between group and active selection\n   * Meant to be used by the constructor.\n   */\n  protected groupInit(\n    objects: FabricObject[],\n    options: {\n      layoutManager?: LayoutManager;\n      top?: number;\n      left?: number;\n    },\n  ) {\n    this._objects = [...objects]; // Avoid unwanted mutations of Collection to affect the caller\n\n    this.__objectSelectionTracker = this.__objectSelectionMonitor.bind(\n      this,\n      true,\n    );\n    this.__objectSelectionDisposer = this.__objectSelectionMonitor.bind(\n      this,\n      false,\n    );\n\n    this.forEachObject((object) => {\n      this.enterGroup(object, false);\n    });\n\n    // perform initial layout\n    this.layoutManager = options.layoutManager ?? new LayoutManager();\n    this.layoutManager.performLayout({\n      type: LAYOUT_TYPE_INITIALIZATION,\n      target: this,\n      targets: [...objects],\n      // @TODO remove this concept from the layout manager.\n      // Layout manager will calculate the correct position,\n      // group options can override it later.\n      x: options.left,\n      y: options.top,\n    });\n  }\n\n  /**\n   * Checks if object can enter group and logs relevant warnings\n   * @private\n   * @param {FabricObject} object\n   * @returns\n   */\n  canEnterGroup(object: FabricObject) {\n    if (object === this || this.isDescendantOf(object)) {\n      //  prevent circular object tree\n      log(\n        'error',\n        'Group: circular object trees are not supported, this call has no effect',\n      );\n      return false;\n    } else if (this._objects.indexOf(object) !== -1) {\n      // is already in the objects array\n      log(\n        'error',\n        'Group: duplicate objects are not supported inside group, this call has no effect',\n      );\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Override this method to enhance performance (for groups with a lot of objects).\n   * If Overriding, be sure not pass illegal objects to group - it will break your app.\n   * @private\n   */\n  protected _filterObjectsBeforeEnteringGroup(objects: FabricObject[]) {\n    return objects.filter((object, index, array) => {\n      // can enter AND is the first occurrence of the object in the passed args (to prevent adding duplicates)\n      return this.canEnterGroup(object) && array.indexOf(object) === index;\n    });\n  }\n\n  /**\n   * Add objects\n   * @param {...FabricObject[]} objects\n   */\n  add(...objects: FabricObject[]) {\n    const allowedObjects = this._filterObjectsBeforeEnteringGroup(objects);\n    const size = super.add(...allowedObjects);\n    this._onAfterObjectsChange(LAYOUT_TYPE_ADDED, allowedObjects);\n    return size;\n  }\n\n  /**\n   * Inserts an object into collection at specified index\n   * @param {FabricObject[]} objects Object to insert\n   * @param {Number} index Index to insert object at\n   */\n  insertAt(index: number, ...objects: FabricObject[]) {\n    const allowedObjects = this._filterObjectsBeforeEnteringGroup(objects);\n    const size = super.insertAt(index, ...allowedObjects);\n    this._onAfterObjectsChange(LAYOUT_TYPE_ADDED, allowedObjects);\n    return size;\n  }\n\n  /**\n   * Remove objects\n   * @param {...FabricObject[]} objects\n   * @returns {FabricObject[]} removed objects\n   */\n  remove(...objects: FabricObject[]) {\n    const removed = super.remove(...objects);\n    this._onAfterObjectsChange(LAYOUT_TYPE_REMOVED, removed);\n    return removed;\n  }\n\n  _onObjectAdded(object: FabricObject) {\n    this.enterGroup(object, true);\n    this.fire('object:added', { target: object });\n    object.fire('added', { target: this });\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  _onObjectRemoved(object: FabricObject, removeParentTransform?: boolean) {\n    this.exitGroup(object, removeParentTransform);\n    this.fire('object:removed', { target: object });\n    object.fire('removed', { target: this });\n  }\n\n  /**\n   * @private\n   * @param {'added'|'removed'} type\n   * @param {FabricObject[]} targets\n   */\n  _onAfterObjectsChange(type: 'added' | 'removed', targets: FabricObject[]) {\n    this.layoutManager.performLayout({\n      type,\n      targets,\n      target: this,\n    });\n  }\n\n  _onStackOrderChanged() {\n    this._set('dirty', true);\n  }\n\n  /**\n   * @private\n   * @param {string} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    const prev = this[key as keyof this];\n    super._set(key, value);\n    if (key === 'canvas' && prev !== value) {\n      (this._objects || []).forEach((object) => {\n        object._set(key, value);\n      });\n    }\n    return this;\n  }\n\n  /**\n   * @private\n   */\n  _shouldSetNestedCoords() {\n    return this.subTargetCheck;\n  }\n\n  /**\n   * Remove all objects\n   * @returns {FabricObject[]} removed objects\n   */\n  removeAll() {\n    this._activeObjects = [];\n    return this.remove(...this._objects);\n  }\n\n  /**\n   * keeps track of the selected objects\n   * @private\n   */\n  __objectSelectionMonitor<T extends boolean>(\n    selected: T,\n    {\n      target: object,\n    }: ObjectEvents[T extends true ? 'selected' : 'deselected'],\n  ) {\n    const activeObjects = this._activeObjects;\n    if (selected) {\n      activeObjects.push(object);\n      this._set('dirty', true);\n    } else if (activeObjects.length > 0) {\n      const index = activeObjects.indexOf(object);\n      if (index > -1) {\n        activeObjects.splice(index, 1);\n        this._set('dirty', true);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} watch\n   * @param {FabricObject} object\n   */\n  _watchObject(watch: boolean, object: FabricObject) {\n    //  make sure we listen only once\n    watch && this._watchObject(false, object);\n    if (watch) {\n      object.on('selected', this.__objectSelectionTracker);\n      object.on('deselected', this.__objectSelectionDisposer);\n    } else {\n      object.off('selected', this.__objectSelectionTracker);\n      object.off('deselected', this.__objectSelectionDisposer);\n    }\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object is in canvas coordinate plane\n   */\n  enterGroup(object: FabricObject, removeParentTransform?: boolean) {\n    object.group && object.group.remove(object);\n    object._set('parent', this);\n    this._enterGroup(object, removeParentTransform);\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object is in canvas coordinate plane\n   */\n  _enterGroup(object: FabricObject, removeParentTransform?: boolean) {\n    if (removeParentTransform) {\n      // can this be converted to utils (sendObjectToPlane)?\n      applyTransformToObject(\n        object,\n        multiplyTransformMatrices(\n          invertTransform(this.calcTransformMatrix()),\n          object.calcTransformMatrix(),\n        ),\n      );\n    }\n    this._shouldSetNestedCoords() && object.setCoords();\n    object._set('group', this);\n    object._set('canvas', this.canvas);\n    this._watchObject(true, object);\n    const activeObject =\n      this.canvas &&\n      this.canvas.getActiveObject &&\n      this.canvas.getActiveObject();\n    // if we are adding the activeObject in a group\n    if (\n      activeObject &&\n      (activeObject === object || object.isDescendantOf(activeObject))\n    ) {\n      this._activeObjects.push(object);\n    }\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  exitGroup(object: FabricObject, removeParentTransform?: boolean) {\n    this._exitGroup(object, removeParentTransform);\n    object._set('parent', undefined);\n    object._set('canvas', undefined);\n  }\n\n  /**\n   * Executes the inner fabric logic of exiting a group.\n   * - Stop watching the object\n   * - Remove the object from the optimization map this._activeObjects\n   * - unset the group property of the object\n   * @protected\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  _exitGroup(object: FabricObject, removeParentTransform?: boolean) {\n    object._set('group', undefined);\n    if (!removeParentTransform) {\n      applyTransformToObject(\n        object,\n        multiplyTransformMatrices(\n          this.calcTransformMatrix(),\n          object.calcTransformMatrix(),\n        ),\n      );\n      object.setCoords();\n    }\n    this._watchObject(false, object);\n    const index =\n      this._activeObjects.length > 0 ? this._activeObjects.indexOf(object) : -1;\n    if (index > -1) {\n      this._activeObjects.splice(index, 1);\n    }\n  }\n\n  /**\n   * Decide if the object should cache or not. Create its own cache level\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step. None of the fabric classes requires it.\n   * Generally you do not cache objects in groups because the group is already cached.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    const ownCache = FabricObject.prototype.shouldCache.call(this);\n    if (ownCache) {\n      for (let i = 0; i < this._objects.length; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          this.ownCaching = false;\n          return false;\n        }\n      }\n    }\n    return ownCache;\n  }\n\n  /**\n   * Check if this object or a child object will cast a shadow\n   * @return {Boolean}\n   */\n  willDrawShadow() {\n    if (super.willDrawShadow()) {\n      return true;\n    }\n    for (let i = 0; i < this._objects.length; i++) {\n      if (this._objects[i].willDrawShadow()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if instance or its group are caching, recursively up\n   * @return {Boolean}\n   */\n  isOnACache(): boolean {\n    return this.ownCaching || (!!this.parent && this.parent.isOnACache());\n  }\n\n  /**\n   * Execute the drawing operation for an object on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawObject(\n    ctx: CanvasRenderingContext2D,\n    forClipping: boolean | undefined,\n    context: DrawContext,\n  ) {\n    this._renderBackground(ctx);\n    for (let i = 0; i < this._objects.length; i++) {\n      const obj = this._objects[i];\n      // TODO: handle rendering edge case somehow\n      if (this.canvas?.preserveObjectStacking && obj.group !== this) {\n        ctx.save();\n        ctx.transform(...invertTransform(this.calcTransformMatrix()));\n        obj.render(ctx);\n        ctx.restore();\n      } else if (obj.group === this) {\n        obj.render(ctx);\n      }\n    }\n    this._drawClipPath(ctx, this.clipPath, context);\n  }\n\n  /**\n   * @override\n   * @return {Boolean}\n   */\n  setCoords() {\n    super.setCoords();\n    this._shouldSetNestedCoords() &&\n      this.forEachObject((object) => object.setCoords());\n  }\n\n  triggerLayout(options: ImperativeLayoutOptions = {}) {\n    this.layoutManager.performLayout({\n      target: this,\n      type: LAYOUT_TYPE_IMPERATIVE,\n      ...options,\n    });\n  }\n\n  /**\n   * Renders instance on a given context\n   * @param {CanvasRenderingContext2D} ctx context to render instance on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    this._transformDone = true;\n    super.render(ctx);\n    this._transformDone = false;\n  }\n\n  /**\n   *\n   * @private\n   * @param {'toObject'|'toDatalessObject'} [method]\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @returns {FabricObject[]} serialized objects\n   */\n  __serializeObjects(\n    method: 'toObject' | 'toDatalessObject',\n    propertiesToInclude?: string[],\n  ) {\n    const _includeDefaultValues = this.includeDefaultValues;\n    return this._objects\n      .filter(function (obj) {\n        return !obj.excludeFromExport;\n      })\n      .map(function (obj) {\n        const originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = _includeDefaultValues;\n        const data = obj[method || 'toObject'](propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        // delete data.version;\n        return data;\n      });\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<\n      GroupProps & TClassProperties<this>,\n      keyof SerializedGroupProps\n    >,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SerializedGroupProps {\n    const layoutManager = this.layoutManager.toObject();\n\n    return {\n      ...super.toObject([\n        'subTargetCheck',\n        'interactive',\n        ...propertiesToInclude,\n      ]),\n      ...(layoutManager.strategy !== 'fit-content' || this.includeDefaultValues\n        ? { layoutManager }\n        : {}),\n      objects: this.__serializeObjects(\n        'toObject',\n        propertiesToInclude as string[],\n      ),\n    };\n  }\n\n  toString() {\n    return `#<Group: (${this.complexity()})>`;\n  }\n\n  dispose() {\n    this.layoutManager.unsubscribeTargets({\n      targets: this.getObjects(),\n      target: this,\n    });\n    this._activeObjects = [];\n    this.forEachObject((object) => {\n      this._watchObject(false, object);\n      object.dispose();\n    });\n    super.dispose();\n  }\n\n  /**\n   * @private\n   */\n  _createSVGBgRect(reviver?: TSVGReviver) {\n    if (!this.backgroundColor) {\n      return '';\n    }\n    const fillStroke = Rect.prototype._toSVG.call(this);\n    const commons = fillStroke.indexOf('COMMON_PARTS');\n    fillStroke[commons] = 'for=\"group\" ';\n    const markup = fillStroke.join('');\n    return reviver ? reviver(markup) : markup;\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @param {TSVGReviver} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  _toSVG(reviver?: TSVGReviver) {\n    const svgString = ['<g ', 'COMMON_PARTS', ' >\\n'];\n    const bg = this._createSVGBgRect(reviver);\n    bg && svgString.push('\\t\\t', bg);\n    for (let i = 0; i < this._objects.length; i++) {\n      svgString.push('\\t\\t', this._objects[i].toSVG(reviver));\n    }\n    svgString.push('</g>\\n');\n    return svgString;\n  }\n\n  /**\n   * Returns styles-string for svg-export, specific version for group\n   * @return {String}\n   */\n  getSvgStyles(): string {\n    const opacity =\n        typeof this.opacity !== 'undefined' && this.opacity !== 1\n          ? `opacity: ${this.opacity};`\n          : '',\n      visibility = this.visible ? '' : ' visibility: hidden;';\n    return [opacity, this.getSvgFilter(), visibility].join('');\n  }\n\n  /**\n   * Returns svg clipPath representation of an instance\n   * @param {Function} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  toClipPathSVG(reviver?: TSVGReviver): string {\n    const svgString = [];\n    const bg = this._createSVGBgRect(reviver);\n    bg && svgString.push('\\t', bg);\n    for (let i = 0; i < this._objects.length; i++) {\n      svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\n    }\n    return this._createBaseClipPathSVGMarkup(svgString, {\n      reviver,\n    });\n  }\n\n  /**\n   * @todo support loading from svg\n   * @private\n   * @static\n   * @memberOf Group\n   * @param {Object} object Object to create a group from\n   * @returns {Promise<Group>}\n   */\n  static fromObject<T extends TOptions<SerializedGroupProps>>(\n    { type, objects = [], layoutManager, ...options }: T,\n    abortable?: Abortable,\n  ) {\n    return Promise.all([\n      enlivenObjects<FabricObject>(objects, abortable),\n      enlivenObjectEnlivables(options, abortable),\n    ]).then(([objects, hydratedOptions]) => {\n      const group = new this(objects, {\n        ...options,\n        ...hydratedOptions,\n        layoutManager: new NoopLayoutManager(),\n      });\n      if (layoutManager) {\n        const layoutClass = classRegistry.getClass<typeof LayoutManager>(\n          layoutManager.type,\n        );\n        const strategyClass = classRegistry.getClass<typeof FitContentLayout>(\n          layoutManager.strategy,\n        );\n        group.layoutManager = new layoutClass(new strategyClass());\n      } else {\n        group.layoutManager = new LayoutManager();\n      }\n      group.layoutManager.subscribeTargets({\n        type: LAYOUT_TYPE_INITIALIZATION,\n        target: group,\n        targets: group.getObjects(),\n      });\n      group.setCoords();\n      return group;\n    });\n  }\n}\n\nclassRegistry.setClass(Group);\n","import type { GroupProps } from '../../shapes/Group';\nimport { Group } from '../../shapes/Group';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\n\n/**\n * TODO experiment with different layout manager and svg results ( fixed fit content )\n * Groups SVG elements (usually those retrieved from SVG document)\n * @static\n * @param {FabricObject[]} elements FabricObject(s) parsed from svg, to group\n * @return {FabricObject | Group}\n */\nexport const groupSVGElements = (\n  elements: FabricObject[],\n  options?: Partial<GroupProps>,\n) => {\n  if (elements && elements.length === 1) {\n    return elements[0];\n  }\n  return new Group(elements, options);\n};\n","import type { TSize } from '../../typedefs';\n\n/**\n * Finds the scale for the object source to fit inside the object destination,\n * keeping aspect ratio intact.\n * respect the total allowed area for the cache.\n * @param {TSize} source natural unscaled size of the object\n * @param {TSize} destination natural unscaled size of the object\n * @return {Number} scale factor to apply to source to fit into destination\n */\nexport const findScaleToFit = (source: TSize, destination: TSize) =>\n  Math.min(\n    destination.width / source.width,\n    destination.height / source.height,\n  );\n\n/**\n * Finds the scale for the object source to cover entirely the object destination,\n * keeping aspect ratio intact.\n * respect the total allowed area for the cache.\n * @param {TSize} source natural unscaled size of the object\n * @param {TSize} destination natural unscaled size of the object\n * @return {Number} scale factor to apply to source to cover destination\n */\nexport const findScaleToCover = (source: TSize, destination: TSize) =>\n  Math.max(\n    destination.width / source.width,\n    destination.height / source.height,\n  );\n","import { reNum } from '../../parser/constants';\n\nconst commaWsp = `\\\\s*,?\\\\s*`;\n\n/**\n * p for param\n * using \"bad naming\" here because it makes the regex much easier to read\n * p is a number that is preceded by an arbitary number of spaces, maybe 0,\n * a comma or not, and then possibly more spaces or not.\n */\nconst p = `${commaWsp}(${reNum})`;\n\n// const reMoveToCommand = `(M) ?(?:${p}${p} ?)+`;\n\n// const reLineCommand = `(L) ?(?:${p}${p} ?)+`;\n\n// const reHorizontalLineCommand = `(H) ?(?:${p} ?)+`;\n\n// const reVerticalLineCommand = `(V) ?(?:${p} ?)+`;\n\n// const reClosePathCommand = String.raw`(Z)\\s*`;\n\n// const reCubicCurveCommand = `(C) ?(?:${p}${p}${p}${p}${p}${p} ?)+`;\n\n// const reCubicCurveShortcutCommand = `(S) ?(?:${p}${p}${p}${p} ?)+`;\n\n// const reQuadraticCurveCommand = `(Q) ?(?:${p}${p}${p}${p} ?)+`;\n\n// const reQuadraticCurveShortcutCommand = `(T) ?(?:${p}${p} ?)+`;\n\nexport const reArcCommandPoints = `${p}${p}${p}${commaWsp}([01])${commaWsp}([01])${p}${p}`;\n// const reArcCommand = `(A) ?(?:${reArcCommandPoints} ?)+`;\n\n// export const rePathCommandGroups =\n//   `(?:(?:${reMoveToCommand})` +\n//   `|(?:${reLineCommand})` +\n//   `|(?:${reHorizontalLineCommand})` +\n//   `|(?:${reVerticalLineCommand})` +\n//   `|(?:${reClosePathCommand})` +\n//   `|(?:${reCubicCurveCommand})` +\n//   `|(?:${reCubicCurveShortcutCommand})` +\n//   `|(?:${reQuadraticCurveCommand})` +\n//   `|(?:${reQuadraticCurveShortcutCommand})` +\n//   `|(?:${reArcCommand}))`;\n\nexport const rePathCommand = '[mzlhvcsqta][^mzlhvcsqta]*';\n","import { cache } from '../../cache';\nimport { config } from '../../config';\nimport { halfPI, PiBy180 } from '../../constants';\nimport type { TMat2D, TRadian, TRectBounds } from '../../typedefs';\nimport { cos } from '../misc/cos';\nimport { multiplyTransformMatrices, transformPoint } from '../misc/matrix';\nimport { sin } from '../misc/sin';\nimport { toFixed } from '../misc/toFixed';\nimport type {\n  TCurveInfo,\n  TComplexPathData,\n  TParsedAbsoluteCubicCurveCommand,\n  TPathSegmentInfo,\n  TPointAngle,\n  TSimpleParsedCommand,\n  TSimplePathData,\n  TPathSegmentCommandInfo,\n  TComplexParsedCommand,\n  TPathSegmentInfoCommon,\n  TEndPathInfo,\n  TParsedArcCommand,\n  TComplexParsedCommandType,\n} from './typedefs';\nimport type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport { reArcCommandPoints, rePathCommand } from './regex';\nimport { reNum } from '../../parser/constants';\n\n/**\n * Commands that may be repeated\n */\nconst repeatedCommands: Record<string, 'l' | 'L'> = {\n  m: 'l',\n  M: 'L',\n};\n\n/**\n * Convert an arc of a rotated ellipse to a Bezier Curve\n * @param {TRadian} theta1 start of the arc\n * @param {TRadian} theta2 end of the arc\n * @param cosTh cosine of the angle of rotation\n * @param sinTh sine of the angle of rotation\n * @param rx x-axis radius (before rotation)\n * @param ry y-axis radius (before rotation)\n * @param cx1 center x of the ellipse\n * @param cy1 center y of the ellipse\n * @param mT\n * @param fromX starting point of arc x\n * @param fromY starting point of arc y\n */\nconst segmentToBezier = (\n  theta1: TRadian,\n  theta2: TRadian,\n  cosTh: number,\n  sinTh: number,\n  rx: number,\n  ry: number,\n  cx1: number,\n  cy1: number,\n  mT: number,\n  fromX: number,\n  fromY: number,\n): TParsedAbsoluteCubicCurveCommand => {\n  const costh1 = cos(theta1),\n    sinth1 = sin(theta1),\n    costh2 = cos(theta2),\n    sinth2 = sin(theta2),\n    toX = cosTh * rx * costh2 - sinTh * ry * sinth2 + cx1,\n    toY = sinTh * rx * costh2 + cosTh * ry * sinth2 + cy1,\n    cp1X = fromX + mT * (-cosTh * rx * sinth1 - sinTh * ry * costh1),\n    cp1Y = fromY + mT * (-sinTh * rx * sinth1 + cosTh * ry * costh1),\n    cp2X = toX + mT * (cosTh * rx * sinth2 + sinTh * ry * costh2),\n    cp2Y = toY + mT * (sinTh * rx * sinth2 - cosTh * ry * costh2);\n\n  return ['C', cp1X, cp1Y, cp2X, cp2Y, toX, toY];\n};\n\n/**\n * Adapted from {@link http://dxr.mozilla.org/mozilla-central/source/dom/svg/SVGPathDataParser.cpp}\n * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n * http://mozilla.org/MPL/2.0/\n * @param toX\n * @param toY\n * @param rx\n * @param ry\n * @param {number} large 0 or 1 flag\n * @param {number} sweep 0 or 1 flag\n * @param rotateX\n */\nconst arcToSegments = (\n  toX: number,\n  toY: number,\n  rx: number,\n  ry: number,\n  large: number,\n  sweep: number,\n  rotateX: TRadian,\n): TParsedAbsoluteCubicCurveCommand[] => {\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n  let fromX = 0,\n    fromY = 0,\n    root = 0;\n  const PI = Math.PI,\n    theta = rotateX * PiBy180,\n    sinTheta = sin(theta),\n    cosTh = cos(theta),\n    px = 0.5 * (-cosTh * toX - sinTheta * toY),\n    py = 0.5 * (-cosTh * toY + sinTheta * toX),\n    rx2 = rx ** 2,\n    ry2 = ry ** 2,\n    py2 = py ** 2,\n    px2 = px ** 2,\n    pl = rx2 * ry2 - rx2 * py2 - ry2 * px2;\n  let _rx = Math.abs(rx);\n  let _ry = Math.abs(ry);\n\n  if (pl < 0) {\n    const s = Math.sqrt(1 - pl / (rx2 * ry2));\n    _rx *= s;\n    _ry *= s;\n  } else {\n    root =\n      (large === sweep ? -1.0 : 1.0) * Math.sqrt(pl / (rx2 * py2 + ry2 * px2));\n  }\n\n  const cx = (root * _rx * py) / _ry,\n    cy = (-root * _ry * px) / _rx,\n    cx1 = cosTh * cx - sinTheta * cy + toX * 0.5,\n    cy1 = sinTheta * cx + cosTh * cy + toY * 0.5;\n  let mTheta = calcVectorAngle(1, 0, (px - cx) / _rx, (py - cy) / _ry);\n  let dtheta = calcVectorAngle(\n    (px - cx) / _rx,\n    (py - cy) / _ry,\n    (-px - cx) / _rx,\n    (-py - cy) / _ry,\n  );\n\n  if (sweep === 0 && dtheta > 0) {\n    dtheta -= 2 * PI;\n  } else if (sweep === 1 && dtheta < 0) {\n    dtheta += 2 * PI;\n  }\n\n  // Convert into cubic bezier segments <= 90deg\n  const segments = Math.ceil(Math.abs((dtheta / PI) * 2)),\n    result = [],\n    mDelta = dtheta / segments,\n    mT =\n      ((8 / 3) * Math.sin(mDelta / 4) * Math.sin(mDelta / 4)) /\n      Math.sin(mDelta / 2);\n  let th3 = mTheta + mDelta;\n\n  for (let i = 0; i < segments; i++) {\n    result[i] = segmentToBezier(\n      mTheta,\n      th3,\n      cosTh,\n      sinTheta,\n      _rx,\n      _ry,\n      cx1,\n      cy1,\n      mT,\n      fromX,\n      fromY,\n    );\n    fromX = result[i][5];\n    fromY = result[i][6];\n    mTheta = th3;\n    th3 += mDelta;\n  }\n  return result;\n};\n\n/**\n * @private\n * Calculate the angle between two vectors\n * @param ux u endpoint x\n * @param uy u endpoint y\n * @param vx v endpoint x\n * @param vy v endpoint y\n */\nconst calcVectorAngle = (\n  ux: number,\n  uy: number,\n  vx: number,\n  vy: number,\n): TRadian => {\n  const ta = Math.atan2(uy, ux),\n    tb = Math.atan2(vy, vx);\n  if (tb >= ta) {\n    return tb - ta;\n  } else {\n    return 2 * Math.PI - (ta - tb);\n  }\n};\n\n// functions for the Cubic beizer\n// taken from: https://github.com/konvajs/konva/blob/7.0.5/src/shapes/Path.ts#L350\nconst CB1 = (t: number) => t ** 3;\nconst CB2 = (t: number) => 3 * t ** 2 * (1 - t);\nconst CB3 = (t: number) => 3 * t * (1 - t) ** 2;\nconst CB4 = (t: number) => (1 - t) ** 3;\n\n/**\n * Calculate bounding box of a cubic Bezier curve\n * Taken from http://jsbin.com/ivomiq/56/edit (no credits available)\n * TODO: can we normalize this with the starting points set at 0 and then translated the bbox?\n * @param {number} begx starting point\n * @param {number} begy\n * @param {number} cp1x first control point\n * @param {number} cp1y\n * @param {number} cp2x second control point\n * @param {number} cp2y\n * @param {number} endx end of bezier\n * @param {number} endy\n * @return {TRectBounds} the rectangular bounds\n */\nexport function getBoundsOfCurve(\n  begx: number,\n  begy: number,\n  cp1x: number,\n  cp1y: number,\n  cp2x: number,\n  cp2y: number,\n  endx: number,\n  endy: number,\n): TRectBounds {\n  let argsString: string;\n  if (config.cachesBoundsOfCurve) {\n    // eslint-disable-next-line\n    argsString = [...arguments].join();\n    if (cache.boundsOfCurveCache[argsString]) {\n      return cache.boundsOfCurveCache[argsString];\n    }\n  }\n\n  const sqrt = Math.sqrt,\n    abs = Math.abs,\n    tvalues = [],\n    bounds: [[x: number, y: number], [x: number, y: number]] = [\n      [0, 0],\n      [0, 0],\n    ];\n\n  let b = 6 * begx - 12 * cp1x + 6 * cp2x;\n  let a = -3 * begx + 9 * cp1x - 9 * cp2x + 3 * endx;\n  let c = 3 * cp1x - 3 * begx;\n\n  for (let i = 0; i < 2; ++i) {\n    if (i > 0) {\n      b = 6 * begy - 12 * cp1y + 6 * cp2y;\n      a = -3 * begy + 9 * cp1y - 9 * cp2y + 3 * endy;\n      c = 3 * cp1y - 3 * begy;\n    }\n\n    if (abs(a) < 1e-12) {\n      if (abs(b) < 1e-12) {\n        continue;\n      }\n      const t = -c / b;\n      if (0 < t && t < 1) {\n        tvalues.push(t);\n      }\n      continue;\n    }\n    const b2ac = b * b - 4 * c * a;\n    if (b2ac < 0) {\n      continue;\n    }\n    const sqrtb2ac = sqrt(b2ac);\n    const t1 = (-b + sqrtb2ac) / (2 * a);\n    if (0 < t1 && t1 < 1) {\n      tvalues.push(t1);\n    }\n    const t2 = (-b - sqrtb2ac) / (2 * a);\n    if (0 < t2 && t2 < 1) {\n      tvalues.push(t2);\n    }\n  }\n\n  let j = tvalues.length;\n  const jlen = j;\n  const iterator = getPointOnCubicBezierIterator(\n    begx,\n    begy,\n    cp1x,\n    cp1y,\n    cp2x,\n    cp2y,\n    endx,\n    endy,\n  );\n  while (j--) {\n    const { x, y } = iterator(tvalues[j]);\n    bounds[0][j] = x;\n    bounds[1][j] = y;\n  }\n\n  bounds[0][jlen] = begx;\n  bounds[1][jlen] = begy;\n  bounds[0][jlen + 1] = endx;\n  bounds[1][jlen + 1] = endy;\n  const result: TRectBounds = [\n    new Point(Math.min(...bounds[0]), Math.min(...bounds[1])),\n    new Point(Math.max(...bounds[0]), Math.max(...bounds[1])),\n  ];\n  if (config.cachesBoundsOfCurve) {\n    cache.boundsOfCurveCache[argsString!] = result;\n  }\n  return result;\n}\n\n/**\n * Converts arc to a bunch of cubic Bezier curves\n * @param {number} fx starting point x\n * @param {number} fy starting point y\n * @param {TParsedArcCommand} coords Arc command\n */\nexport const fromArcToBeziers = (\n  fx: number,\n  fy: number,\n  [_, rx, ry, rot, large, sweep, tx, ty]: TParsedArcCommand,\n): TParsedAbsoluteCubicCurveCommand[] => {\n  const segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n  for (let i = 0, len = segsNorm.length; i < len; i++) {\n    segsNorm[i][1] += fx;\n    segsNorm[i][2] += fy;\n    segsNorm[i][3] += fx;\n    segsNorm[i][4] += fy;\n    segsNorm[i][5] += fx;\n    segsNorm[i][6] += fy;\n  }\n  return segsNorm;\n};\n\n/**\n * This function takes a parsed SVG path and makes it simpler for fabricJS logic.\n * Simplification consist of:\n * - All commands converted to absolute (lowercase to uppercase)\n * - S converted to C\n * - T converted to Q\n * - A converted to C\n * @param {TComplexPathData} path the array of commands of a parsed SVG path for `Path`\n * @return {TSimplePathData} the simplified array of commands of a parsed SVG path for `Path`\n * TODO: figure out how to remove the type assertions in a nice way\n */\nexport const makePathSimpler = (path: TComplexPathData): TSimplePathData => {\n  // x and y represent the last point of the path, AKA the previous command point.\n  // we add them to each relative command to make it an absolute comment.\n  // we also swap the v V h H with L, because are easier to transform.\n  let x = 0,\n    y = 0;\n  // x1 and y1 represent the last point of the subpath. the subpath is started with\n  // m or M command. When a z or Z command is drawn, x and y need to be resetted to\n  // the last x1 and y1.\n  let x1 = 0,\n    y1 = 0;\n  // previous will host the letter of the previous command, to handle S and T.\n  // controlX and controlY will host the previous reflected control point\n  const destinationPath: TSimplePathData = [];\n  let previous,\n    // placeholders\n    controlX = 0,\n    controlY = 0;\n  for (const parsedCommand of path) {\n    const current: TComplexParsedCommand = [...parsedCommand];\n    let converted: TSimpleParsedCommand | undefined;\n    switch (\n      current[0] // first letter\n    ) {\n      case 'l': // lineto, relative\n        current[1] += x;\n        current[2] += y;\n      // falls through\n      case 'L':\n        x = current[1];\n        y = current[2];\n        converted = ['L', x, y];\n        break;\n      case 'h': // horizontal lineto, relative\n        current[1] += x;\n      // falls through\n      case 'H':\n        x = current[1];\n        converted = ['L', x, y];\n        break;\n      case 'v': // vertical lineto, relative\n        current[1] += y;\n      // falls through\n      case 'V':\n        y = current[1];\n        converted = ['L', x, y];\n        break;\n      case 'm': // moveTo, relative\n        current[1] += x;\n        current[2] += y;\n      // falls through\n      case 'M':\n        x = current[1];\n        y = current[2];\n        x1 = current[1];\n        y1 = current[2];\n        converted = ['M', x, y];\n        break;\n      case 'c': // bezierCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n        current[3] += x;\n        current[4] += y;\n        current[5] += x;\n        current[6] += y;\n      // falls through\n      case 'C':\n        controlX = current[3];\n        controlY = current[4];\n        x = current[5];\n        y = current[6];\n        converted = ['C', current[1], current[2], controlX, controlY, x, y];\n        break;\n      case 's': // shorthand cubic bezierCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n        current[3] += x;\n        current[4] += y;\n      // falls through\n      case 'S':\n        // would be sScC but since we are swapping sSc for C, we check just that.\n        if (previous === 'C') {\n          // calculate reflection of previous control points\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        } else {\n          // If there is no previous command or if the previous command was not a C, c, S, or s,\n          // the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        x = current[3];\n        y = current[4];\n        converted = ['C', controlX, controlY, current[1], current[2], x, y];\n        // converted[3] and converted[4] are NOW the second control point.\n        // we keep it for the next reflection.\n        controlX = converted[3];\n        controlY = converted[4];\n        break;\n      case 'q': // quadraticCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n        current[3] += x;\n        current[4] += y;\n      // falls through\n      case 'Q':\n        controlX = current[1];\n        controlY = current[2];\n        x = current[3];\n        y = current[4];\n        converted = ['Q', controlX, controlY, x, y];\n        break;\n      case 't': // shorthand quadraticCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n      // falls through\n      case 'T':\n        if (previous === 'Q') {\n          // calculate reflection of previous control point\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        } else {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        x = current[1];\n        y = current[2];\n        converted = ['Q', controlX, controlY, x, y];\n        break;\n      case 'a':\n        current[6] += x;\n        current[7] += y;\n      // falls through\n      case 'A':\n        fromArcToBeziers(x, y, current).forEach((b) => destinationPath.push(b));\n        x = current[6];\n        y = current[7];\n        break;\n      case 'z':\n      case 'Z':\n        x = x1;\n        y = y1;\n        converted = ['Z'];\n        break;\n      default:\n    }\n    if (converted) {\n      destinationPath.push(converted);\n      previous = converted[0];\n    } else {\n      previous = '';\n    }\n  }\n  return destinationPath;\n};\n\n// todo verify if we can just use the point class here\n/**\n * Calc length from point x1,y1 to x2,y2\n * @param {number} x1 starting point x\n * @param {number} y1 starting point y\n * @param {number} x2 starting point x\n * @param {number} y2 starting point y\n * @return {number} length of segment\n */\nconst calcLineLength = (\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n): number => Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n\n/**\n * Get an iterator that takes a percentage and returns a point\n * @param {number} begx\n * @param {number} begy\n * @param {number} cp1x\n * @param {number} cp1y\n * @param {number} cp2x\n * @param {number} cp2y\n * @param {number} endx\n * @param {number} endy\n */\nconst getPointOnCubicBezierIterator =\n  (\n    begx: number,\n    begy: number,\n    cp1x: number,\n    cp1y: number,\n    cp2x: number,\n    cp2y: number,\n    endx: number,\n    endy: number,\n  ) =>\n  (pct: number) => {\n    const c1 = CB1(pct),\n      c2 = CB2(pct),\n      c3 = CB3(pct),\n      c4 = CB4(pct);\n    return new Point(\n      endx * c1 + cp2x * c2 + cp1x * c3 + begx * c4,\n      endy * c1 + cp2y * c2 + cp1y * c3 + begy * c4,\n    );\n  };\n\nconst QB1 = (t: number) => t ** 2;\nconst QB2 = (t: number) => 2 * t * (1 - t);\nconst QB3 = (t: number) => (1 - t) ** 2;\n\nconst getTangentCubicIterator =\n  (\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number,\n    p4x: number,\n    p4y: number,\n  ) =>\n  (pct: number) => {\n    const qb1 = QB1(pct),\n      qb2 = QB2(pct),\n      qb3 = QB3(pct),\n      tangentX =\n        3 * (qb3 * (p2x - p1x) + qb2 * (p3x - p2x) + qb1 * (p4x - p3x)),\n      tangentY =\n        3 * (qb3 * (p2y - p1y) + qb2 * (p3y - p2y) + qb1 * (p4y - p3y));\n    return Math.atan2(tangentY, tangentX);\n  };\n\nconst getPointOnQuadraticBezierIterator =\n  (\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number,\n  ) =>\n  (pct: number) => {\n    const c1 = QB1(pct),\n      c2 = QB2(pct),\n      c3 = QB3(pct);\n    return new Point(\n      p3x * c1 + p2x * c2 + p1x * c3,\n      p3y * c1 + p2y * c2 + p1y * c3,\n    );\n  };\n\nconst getTangentQuadraticIterator =\n  (\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number,\n  ) =>\n  (pct: number) => {\n    const invT = 1 - pct,\n      tangentX = 2 * (invT * (p2x - p1x) + pct * (p3x - p2x)),\n      tangentY = 2 * (invT * (p2y - p1y) + pct * (p3y - p2y));\n    return Math.atan2(tangentY, tangentX);\n  };\n\n// this will run over a path segment (a cubic or quadratic segment) and approximate it\n// with 100 segments. This will good enough to calculate the length of the curve\nconst pathIterator = (\n  iterator: (pct: number) => Point,\n  x1: number,\n  y1: number,\n) => {\n  let tempP = new Point(x1, y1),\n    tmpLen = 0;\n  for (let perc = 1; perc <= 100; perc += 1) {\n    const p = iterator(perc / 100);\n    tmpLen += calcLineLength(tempP.x, tempP.y, p.x, p.y);\n    tempP = p;\n  }\n  return tmpLen;\n};\n\n/**\n * Given a pathInfo, and a distance in pixels, find the percentage from 0 to 1\n * that correspond to that pixels run over the path.\n * The percentage will be then used to find the correct point on the canvas for the path.\n * @param {Array} segInfo fabricJS collection of information on a parsed path\n * @param {number} distance from starting point, in pixels.\n * @return {TPointAngle} info object with x and y ( the point on canvas ) and angle, the tangent on that point;\n */\nconst findPercentageForDistance = (\n  segInfo: TCurveInfo<'Q' | 'C'>,\n  distance: number,\n): TPointAngle => {\n  let perc = 0,\n    tmpLen = 0,\n    tempP: XY = { x: segInfo.x, y: segInfo.y },\n    p: XY = { ...tempP },\n    nextLen: number,\n    nextStep = 0.01,\n    lastPerc = 0;\n  // nextStep > 0.0001 covers 0.00015625 that 1/64th of 1/100\n  // the path\n  const iterator = segInfo.iterator,\n    angleFinder = segInfo.angleFinder;\n  while (tmpLen < distance && nextStep > 0.0001) {\n    p = iterator(perc);\n    lastPerc = perc;\n    nextLen = calcLineLength(tempP.x, tempP.y, p.x, p.y);\n    // compare tmpLen each cycle with distance, decide next perc to test.\n    if (nextLen + tmpLen > distance) {\n      // we discard this step and we make smaller steps.\n      perc -= nextStep;\n      nextStep /= 2;\n    } else {\n      tempP = p;\n      perc += nextStep;\n      tmpLen += nextLen;\n    }\n  }\n  return { ...p, angle: angleFinder(lastPerc) };\n};\n\n/**\n * Run over a parsed and simplified path and extract some information (length of each command and starting point)\n * @param {TSimplePathData} path parsed path commands\n * @return {TPathSegmentInfo[]} path commands information\n */\nexport const getPathSegmentsInfo = (\n  path: TSimplePathData,\n): TPathSegmentInfo[] => {\n  let totalLength = 0,\n    //x2 and y2 are the coords of segment start\n    //x1 and y1 are the coords of the current point\n    x1 = 0,\n    y1 = 0,\n    x2 = 0,\n    y2 = 0,\n    iterator,\n    tempInfo: TPathSegmentInfo;\n  const info: TPathSegmentInfo[] = [];\n  for (const current of path) {\n    const basicInfo: TPathSegmentInfoCommon<keyof TPathSegmentCommandInfo> = {\n      x: x1,\n      y: y1,\n      command: current[0],\n      length: 0,\n    };\n    switch (\n      current[0] //first letter\n    ) {\n      case 'M':\n        tempInfo = <TPathSegmentInfoCommon<'M'>>basicInfo;\n        tempInfo.x = x2 = x1 = current[1];\n        tempInfo.y = y2 = y1 = current[2];\n        break;\n      case 'L':\n        tempInfo = <TPathSegmentInfoCommon<'L'>>basicInfo;\n        tempInfo.length = calcLineLength(x1, y1, current[1], current[2]);\n        x1 = current[1];\n        y1 = current[2];\n        break;\n      case 'C':\n        iterator = getPointOnCubicBezierIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n        );\n        tempInfo = <TCurveInfo<'C'>>basicInfo;\n        tempInfo.iterator = iterator;\n        tempInfo.angleFinder = getTangentCubicIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n        );\n        tempInfo.length = pathIterator(iterator, x1, y1);\n\n        x1 = current[5];\n        y1 = current[6];\n        break;\n      case 'Q':\n        iterator = getPointOnQuadraticBezierIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n        );\n        tempInfo = <TCurveInfo<'Q'>>basicInfo;\n        tempInfo.iterator = iterator;\n        tempInfo.angleFinder = getTangentQuadraticIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n        );\n        tempInfo.length = pathIterator(iterator, x1, y1);\n        x1 = current[3];\n        y1 = current[4];\n        break;\n      case 'Z':\n        // we add those in order to ease calculations later\n        tempInfo = <TEndPathInfo>basicInfo;\n        tempInfo.destX = x2;\n        tempInfo.destY = y2;\n        tempInfo.length = calcLineLength(x1, y1, x2, y2);\n        x1 = x2;\n        y1 = y2;\n        break;\n    }\n    totalLength += tempInfo.length;\n    info.push(tempInfo);\n  }\n  info.push({ length: totalLength, x: x1, y: y1 });\n  return info;\n};\n\n/**\n * Get the point on the path that is distance along the path\n * @param path\n * @param distance\n * @param infos\n */\nexport const getPointOnPath = (\n  path: TSimplePathData,\n  distance: number,\n  infos: TPathSegmentInfo[] = getPathSegmentsInfo(path),\n): TPointAngle | undefined => {\n  let i = 0;\n  while (distance - infos[i].length > 0 && i < infos.length - 2) {\n    distance -= infos[i].length;\n    i++;\n  }\n  const segInfo = infos[i],\n    segPercent = distance / segInfo.length,\n    segment = path[i];\n\n  switch (segInfo.command) {\n    case 'M':\n      return { x: segInfo.x, y: segInfo.y, angle: 0 };\n    case 'Z':\n      return {\n        ...new Point(segInfo.x, segInfo.y).lerp(\n          new Point(segInfo.destX, segInfo.destY),\n          segPercent,\n        ),\n        angle: Math.atan2(segInfo.destY - segInfo.y, segInfo.destX - segInfo.x),\n      };\n    case 'L':\n      return {\n        ...new Point(segInfo.x, segInfo.y).lerp(\n          new Point(segment[1]!, segment[2]!),\n          segPercent,\n        ),\n        angle: Math.atan2(segment[2]! - segInfo.y, segment[1]! - segInfo.x),\n      };\n    case 'C':\n      return findPercentageForDistance(segInfo, distance);\n    case 'Q':\n      return findPercentageForDistance(segInfo, distance);\n    default:\n    // throw Error('Invalid command');\n  }\n};\n\nconst rePathCmdAll = new RegExp(rePathCommand, 'gi');\nconst regExpArcCommandPoints = new RegExp(reArcCommandPoints, 'g');\nconst reMyNum = new RegExp(reNum, 'gi');\nconst commandLengths = {\n  m: 2,\n  l: 2,\n  h: 1,\n  v: 1,\n  c: 6,\n  s: 4,\n  q: 4,\n  t: 2,\n  a: 7,\n} as const;\n/**\n *\n * @param {string} pathString\n * @return {TComplexPathData} An array of SVG path commands\n * @example <caption>Usage</caption>\n * parsePath('M 3 4 Q 3 5 2 1 4 0 Q 9 12 2 1 4 0') === [\n *   ['M', 3, 4],\n *   ['Q', 3, 5, 2, 1, 4, 0],\n *   ['Q', 9, 12, 2, 1, 4, 0],\n * ];\n */\nexport const parsePath = (pathString: string): TComplexPathData => {\n  const chain: TComplexPathData = [];\n  const all = pathString.match(rePathCmdAll) ?? [];\n  for (const matchStr of all) {\n    // take match string and save the first letter as the command\n    const commandLetter = matchStr[0] as TComplexParsedCommandType;\n    // in case of Z we have very little to do\n    if (commandLetter === 'z' || commandLetter === 'Z') {\n      chain.push([commandLetter]);\n      continue;\n    }\n    const commandLength =\n      commandLengths[\n        commandLetter.toLowerCase() as keyof typeof commandLengths\n      ];\n\n    let paramArr = [];\n    if (commandLetter === 'a' || commandLetter === 'A') {\n      // the arc command ha some peculariaties that requires a special regex other than numbers\n      // it is possible to avoid using a space between the sweep and large arc flags, making them either\n      // 00, 01, 10 or 11, making them identical to a plain number for the regex reMyNum\n      // reset the regexp\n      regExpArcCommandPoints.lastIndex = 0;\n      for (let out = null; (out = regExpArcCommandPoints.exec(matchStr)); ) {\n        paramArr.push(...out.slice(1));\n      }\n    } else {\n      paramArr = matchStr.match(reMyNum) || [];\n    }\n\n    // inspect the length of paramArr, if is longer than commandLength\n    // we are dealing with repeated commands\n    for (let i = 0; i < paramArr.length; i += commandLength) {\n      const newCommand = new Array(commandLength) as TComplexParsedCommand;\n      const transformedCommand = repeatedCommands[commandLetter];\n      newCommand[0] =\n        i > 0 && transformedCommand ? transformedCommand : commandLetter;\n      for (let j = 0; j < commandLength; j++) {\n        newCommand[j + 1] = parseFloat(paramArr[i + j]);\n      }\n      chain.push(newCommand);\n    }\n  }\n  return chain;\n};\n\n/**\n *\n * Converts points to a smooth SVG path\n * @param {XY[]} points Array of points\n * @param {number} [correction] Apply a correction to the path (usually we use `width / 1000`). If value is undefined 0 is used as the correction value.\n * @return {(string|number)[][]} An array of SVG path commands\n */\nexport const getSmoothPathFromPoints = (\n  points: Point[],\n  correction = 0,\n): TSimplePathData => {\n  let p1 = new Point(points[0]),\n    p2 = new Point(points[1]),\n    multSignX = 1,\n    multSignY = 0;\n  const path: TSimplePathData = [],\n    len = points.length,\n    manyPoints = len > 2;\n\n  if (manyPoints) {\n    multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n    multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n  }\n  path.push([\n    'M',\n    p1.x - multSignX * correction,\n    p1.y - multSignY * correction,\n  ]);\n  let i;\n  for (i = 1; i < len; i++) {\n    if (!p1.eq(p2)) {\n      const midPoint = p1.midPointFrom(p2);\n      // p1 is our bezier control point\n      // midpoint is our endpoint\n      // start point is p(i-1) value.\n      path.push(['Q', p1.x, p1.y, midPoint.x, midPoint.y]);\n    }\n    p1 = points[i];\n    if (i + 1 < points.length) {\n      p2 = points[i + 1];\n    }\n  }\n  if (manyPoints) {\n    multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n    multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n  }\n  path.push([\n    'L',\n    p1.x + multSignX * correction,\n    p1.y + multSignY * correction,\n  ]);\n  return path;\n};\n\n/**\n * Transform a path by transforming each segment.\n * it has to be a simplified path or it won't work.\n * WARNING: this depends from pathOffset for correct operation\n * @param {TSimplePathData} path fabricJS parsed and simplified path commands\n * @param {TMat2D} transform matrix that represent the transformation\n * @param {Point} [pathOffset] `Path.pathOffset`\n * @returns {TSimplePathData} the transformed path\n */\nexport const transformPath = (\n  path: TSimplePathData,\n  transform: TMat2D,\n  pathOffset: Point,\n): TSimplePathData => {\n  if (pathOffset) {\n    transform = multiplyTransformMatrices(transform, [\n      1,\n      0,\n      0,\n      1,\n      -pathOffset.x,\n      -pathOffset.y,\n    ]);\n  }\n  return path.map((pathSegment) => {\n    const newSegment: TSimpleParsedCommand = [...pathSegment];\n    for (let i = 1; i < pathSegment.length - 1; i += 2) {\n      // TODO: is there a way to get around casting to any?\n      const { x, y } = transformPoint(\n        {\n          x: pathSegment[i] as number,\n          y: pathSegment[i + 1] as number,\n        },\n        transform,\n      );\n      newSegment[i] = x;\n      newSegment[i + 1] = y;\n    }\n    return newSegment;\n  });\n};\n\n/**\n * Returns an array of path commands to create a regular polygon\n * @param {number} numVertexes\n * @param {number} radius\n * @returns {TSimplePathData} An array of SVG path commands\n */\nexport const getRegularPolygonPath = (\n  numVertexes: number,\n  radius: number,\n): TSimplePathData => {\n  const interiorAngle = (Math.PI * 2) / numVertexes;\n  // rotationAdjustment rotates the path by 1/2 the interior angle so that the polygon always has a flat side on the bottom\n  // This isn't strictly necessary, but it's how we tend to think of and expect polygons to be drawn\n  let rotationAdjustment = -halfPI;\n  if (numVertexes % 2 === 0) {\n    rotationAdjustment += interiorAngle / 2;\n  }\n  const d = new Array(numVertexes + 1);\n  for (let i = 0; i < numVertexes; i++) {\n    const rad = i * interiorAngle + rotationAdjustment;\n    const { x, y } = new Point(cos(rad), sin(rad)).scalarMultiply(radius);\n    d[i] = [i === 0 ? 'M' : 'L', x, y];\n  }\n  d[numVertexes] = ['Z'];\n  return d;\n};\n\n/**\n * Join path commands to go back to svg format\n * @param {TSimplePathData} pathData fabricJS parsed path commands\n * @param {number} fractionDigits number of fraction digits to \"leave\"\n * @return {String} joined path 'M 0 0 L 20 30'\n */\nexport const joinPath = (pathData: TSimplePathData, fractionDigits?: number) =>\n  pathData\n    .map((segment) => {\n      return segment\n        .map((arg, i) => {\n          if (i === 0) return arg;\n          return fractionDigits === undefined\n            ? arg\n            : toFixed(arg, fractionDigits);\n        })\n        .join(' ');\n    })\n    .join(' ');\n","// TODO this file needs to go away, cross browser style support is not fabricjs domain.\n\n/**\n * wrapper for setting element's style\n * @param {HTMLElement} element\n * @param {Object | string} styles\n */\nexport function setStyle(\n  element: HTMLElement,\n  styles: string | Record<string, string>,\n) {\n  const elementStyle = element.style;\n  if (!elementStyle || !styles) {\n    return;\n  } else if (typeof styles === 'string') {\n    elementStyle.cssText += ';' + styles;\n  } else {\n    Object.entries(styles).forEach(([property, value]) =>\n      elementStyle.setProperty(property, value),\n    );\n  }\n}\n","import type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { sendObjectToPlane } from './planeChange';\nimport { Group } from '../../shapes/Group';\n/**\n * Merges 2 clip paths into one visually equal clip path\n *\n * **IMPORTANT**:\\\n * Does **NOT** clone the arguments, clone them proir if necessary.\n *\n * Creates a wrapper (group) that contains one clip path and is clipped by the other so content is kept where both overlap.\n * Use this method if both the clip paths may have nested clip paths of their own, so assigning one to the other's clip path property is not possible.\n *\n * In order to handle the `inverted` property we follow logic described in the following cases:\\\n * **(1)** both clip paths are inverted - the clip paths pass the inverted prop to the wrapper and loose it themselves.\\\n * **(2)** one is inverted and the other isn't - the wrapper shouldn't become inverted and the inverted clip path must clip the non inverted one to produce an identical visual effect.\\\n * **(3)** both clip paths are not inverted - wrapper and clip paths remain unchanged.\n *\n * @memberOf fabric.util\n * @param {fabric.Object} c1\n * @param {fabric.Object} c2\n * @returns {fabric.Object} merged clip path\n */\nexport const mergeClipPaths = (c1: FabricObject, c2: FabricObject) => {\n  let a = c1,\n    b = c2;\n  if (a.inverted && !b.inverted) {\n    //  case (2)\n    a = c2;\n    b = c1;\n  }\n  //  `b` becomes `a`'s clip path so we transform `b` to `a` coordinate plane\n  sendObjectToPlane(b, b.group?.calcTransformMatrix(), a.calcTransformMatrix());\n  //  assign the `inverted` prop to the wrapping group\n  const inverted = a.inverted && b.inverted;\n  if (inverted) {\n    //  case (1)\n    a.inverted = b.inverted = false;\n  }\n  return new Group([a], { clipPath: b, inverted });\n};\n","/**\n * Returns random number between 2 specified ones.\n * @param {Number} min lower limit\n * @param {Number} max upper limit\n * @return {Number} random value (between min and max)\n */\nexport const getRandomInt = (min: number, max: number): number =>\n  Math.floor(Math.random() * (max - min + 1)) + min;\n","import { getFabricWindow } from '../../env';\nimport { noop } from '../../constants';\nimport type { Abortable } from '../../typedefs';\nimport { SignalAbortedError } from './console';\n\ntype requestOptions = Abortable & {\n  onComplete?: (xhr: XMLHttpRequest) => void;\n};\n\n/**\n * Cross-browser abstraction for sending XMLHttpRequest\n * @deprecated this has to go away, we can use a modern browser method to do the same.\n * @param {String} url URL to send XMLHttpRequest to\n * @param {Object} [options] Options object\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @param {Function} options.onComplete Callback to invoke when request is completed\n * @return {XMLHttpRequest} request\n */\n\nexport function request(url: string, options: requestOptions = {}) {\n  const onComplete = options.onComplete || noop,\n    xhr = new (getFabricWindow().XMLHttpRequest)(),\n    signal = options.signal,\n    abort = function () {\n      xhr.abort();\n    },\n    removeListener = function () {\n      signal && signal.removeEventListener('abort', abort);\n      xhr.onerror = xhr.ontimeout = noop;\n    };\n\n  if (signal && signal.aborted) {\n    throw new SignalAbortedError('request');\n  } else if (signal) {\n    signal.addEventListener('abort', abort, { once: true });\n  }\n\n  /** @ignore */\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4) {\n      removeListener();\n      onComplete(xhr);\n      xhr.onreadystatechange = noop;\n    }\n  };\n\n  xhr.onerror = xhr.ontimeout = removeListener;\n\n  xhr.open('get', url, true);\n\n  xhr.send();\n  return xhr;\n}\n","import { CENTER, SCALE_X, SCALE_Y } from '../constants';\nimport type { FabricImage } from '../shapes/Image';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TMat2D } from '../typedefs';\nimport { qrDecompose } from './misc/matrix';\n\ntype FabricObjectWithTransformMatrix = FabricObject & {\n  transformMatrix?: TMat2D;\n};\n\n/**\n * This function is an helper for svg import. it decompose the transformMatrix\n * and assign properties to object.\n * untransformed coordinates\n * @private\n */\nconst _assignTransformMatrixProps = (\n  object: FabricObjectWithTransformMatrix,\n) => {\n  if (object.transformMatrix) {\n    const { scaleX, scaleY, angle, skewX } = qrDecompose(\n      object.transformMatrix,\n    );\n    object.flipX = false;\n    object.flipY = false;\n    object.set(SCALE_X, scaleX);\n    object.set(SCALE_Y, scaleY);\n    object.angle = angle;\n    object.skewX = skewX;\n    object.skewY = 0;\n  }\n};\n\n/**\n * This function is an helper for svg import. it removes the transform matrix\n * and set to object properties that fabricjs can handle\n * @private\n * @param {Object} preserveAspectRatioOptions\n */\nexport const removeTransformMatrixForSvgParsing = (\n  object: FabricObjectWithTransformMatrix,\n  preserveAspectRatioOptions?: any,\n) => {\n  let center = object._findCenterFromElement();\n  if (object.transformMatrix) {\n    _assignTransformMatrixProps(object);\n    center = center.transform(object.transformMatrix);\n  }\n  delete object.transformMatrix;\n  if (preserveAspectRatioOptions) {\n    object.scaleX *= preserveAspectRatioOptions.scaleX;\n    object.scaleY *= preserveAspectRatioOptions.scaleY;\n    (object as FabricImage).cropX = preserveAspectRatioOptions.cropX;\n    (object as FabricImage).cropY = preserveAspectRatioOptions.cropY;\n    center.x += preserveAspectRatioOptions.offsetLeft;\n    center.y += preserveAspectRatioOptions.offsetTop;\n    object.width = preserveAspectRatioOptions.width;\n    object.height = preserveAspectRatioOptions.height;\n  }\n  object.setPositionByOrigin(center, CENTER, CENTER);\n};\n","import type { Point } from '../../Point';\nimport type { TRadian } from '../../typedefs';\n/**\n * Rotates `point` around `origin` with `radians`\n * @deprecated use the Point.rotate\n * @param {Point} origin The origin of the rotation\n * @param {Point} origin The origin of the rotation\n * @param {TRadian} radians The radians of the angle for the rotation\n * @return {Point} The new rotated point\n */\nexport const rotatePoint = (\n  point: Point,\n  origin: Point,\n  radians: TRadian,\n): Point => point.rotate(radians, origin);\n","import { getEnv, getFabricDocument } from '../../env';\nimport type { TSize } from '../../typedefs';\nimport { createCanvasElement, setStyle } from '../../util';\nimport type { CSSDimensions } from './util';\nimport { makeElementUnselectable, setCSSDimensions } from './util';\nimport type { CanvasItem } from './StaticCanvasDOMManager';\nimport { StaticCanvasDOMManager } from './StaticCanvasDOMManager';\nimport { setCanvasDimensions } from './util';\nimport { NONE } from '../../constants';\n\nexport class CanvasDOMManager extends StaticCanvasDOMManager {\n  upper: CanvasItem;\n  container: HTMLDivElement;\n\n  constructor(\n    arg0?: string | HTMLCanvasElement,\n    {\n      allowTouchScrolling = false,\n      containerClass = '',\n    }: {\n      allowTouchScrolling?: boolean;\n      /**\n       * @deprecated here only for backward compatibility\n       */\n      containerClass?: string;\n    } = {},\n  ) {\n    super(arg0);\n    const { el: lowerCanvasEl } = this.lower;\n    const upperCanvasEl = this.createUpperCanvas();\n    this.upper = { el: upperCanvasEl, ctx: upperCanvasEl.getContext('2d')! };\n    this.applyCanvasStyle(lowerCanvasEl, {\n      allowTouchScrolling,\n    });\n    this.applyCanvasStyle(upperCanvasEl, {\n      allowTouchScrolling,\n      styles: {\n        position: 'absolute',\n        left: '0',\n        top: '0',\n      },\n    });\n    const container = this.createContainerElement();\n    container.classList.add(containerClass);\n    if (lowerCanvasEl.parentNode) {\n      lowerCanvasEl.parentNode.replaceChild(container, lowerCanvasEl);\n    }\n    container.append(lowerCanvasEl, upperCanvasEl);\n    this.container = container;\n  }\n\n  protected createUpperCanvas() {\n    const { el: lowerCanvasEl } = this.lower;\n    const el = createCanvasElement();\n    // we assign the same classname of the lowerCanvas\n    el.className = lowerCanvasEl.className;\n    // but then we remove the lower-canvas specific className\n    el.classList.remove('lower-canvas');\n    // we add the specific upper-canvas class\n    el.classList.add('upper-canvas');\n    el.setAttribute('data-fabric', 'top');\n    el.style.cssText = lowerCanvasEl.style.cssText;\n    el.setAttribute('draggable', 'true');\n    return el;\n  }\n\n  protected createContainerElement() {\n    const container = getFabricDocument().createElement('div');\n    container.setAttribute('data-fabric', 'wrapper');\n    setStyle(container, {\n      position: 'relative',\n    });\n    makeElementUnselectable(container);\n    return container;\n  }\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} element canvas element to apply styles on\n   */\n  protected applyCanvasStyle(\n    element: HTMLCanvasElement,\n    options: {\n      allowTouchScrolling?: boolean;\n      styles?: Record<string, string>;\n    },\n  ) {\n    const { styles, allowTouchScrolling } = options;\n    setStyle(element, {\n      ...styles,\n      'touch-action': allowTouchScrolling ? 'manipulation' : NONE,\n    });\n    makeElementUnselectable(element);\n  }\n\n  setDimensions(size: TSize, retinaScaling: number) {\n    super.setDimensions(size, retinaScaling);\n    const { el, ctx } = this.upper;\n    setCanvasDimensions(el, ctx, size, retinaScaling);\n  }\n\n  setCSSDimensions(size: Partial<CSSDimensions>): void {\n    super.setCSSDimensions(size);\n    setCSSDimensions(this.upper.el, size);\n    setCSSDimensions(this.container, size);\n  }\n\n  cleanupDOM(size: TSize) {\n    const container = this.container,\n      { el: lowerCanvasEl } = this.lower,\n      { el: upperCanvasEl } = this.upper;\n    super.cleanupDOM(size);\n    container.removeChild(upperCanvasEl);\n    container.removeChild(lowerCanvasEl);\n    if (container.parentNode) {\n      container.parentNode.replaceChild(lowerCanvasEl, container);\n    }\n  }\n\n  dispose() {\n    super.dispose();\n    getEnv().dispose(this.upper.el);\n    // @ts-expect-error disposing\n    delete this.upper;\n    // @ts-expect-error disposing\n    delete this.container;\n  }\n}\n","import { dragHandler } from '../controls/drag';\nimport { getActionFromCorner } from '../controls/util';\nimport { Point } from '../Point';\nimport { FabricObject } from '../shapes/Object/FabricObject';\nimport type {\n  CanvasEvents,\n  ModifierKey,\n  TOptionalModifierKey,\n  TPointerEvent,\n  Transform,\n} from '../EventTypeDefs';\nimport {\n  addTransformToObject,\n  saveObjectTransform,\n} from '../util/misc/objectTransforms';\nimport type { TCanvasSizeOptions } from './StaticCanvas';\nimport { StaticCanvas } from './StaticCanvas';\nimport { isCollection } from '../Collection';\nimport { isTransparent } from '../util/misc/isTransparent';\nimport type {\n  TMat2D,\n  TOriginX,\n  TOriginY,\n  TSize,\n  TSVGReviver,\n} from '../typedefs';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport { getPointer, isTouchEvent } from '../util/dom_event';\nimport type { IText } from '../shapes/IText/IText';\nimport type { BaseBrush } from '../brushes/BaseBrush';\nimport { pick } from '../util/misc/pick';\nimport { sendPointToPlane } from '../util/misc/planeChange';\nimport { cos, createCanvasElement, sin } from '../util';\nimport { CanvasDOMManager } from './DOMManagers/CanvasDOMManager';\nimport {\n  BOTTOM,\n  CENTER,\n  LEFT,\n  MODIFIED,\n  RESIZING,\n  RIGHT,\n  ROTATE,\n  SCALE,\n  SCALE_X,\n  SCALE_Y,\n  SKEW_X,\n  SKEW_Y,\n  TOP,\n} from '../constants';\nimport type { CanvasOptions } from './CanvasOptions';\nimport { canvasDefaults } from './CanvasOptions';\nimport { Intersection } from '../Intersection';\nimport { isActiveSelection } from '../util/typeAssertions';\n\n/**\n * Canvas class\n * @class Canvas\n * @extends StaticCanvas\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n *\n * @fires object:modified at the end of a transform\n * @fires object:rotating while an object is being rotated from the control\n * @fires object:scaling while an object is being scaled by controls\n * @fires object:moving while an object is being dragged\n * @fires object:skewing while an object is being skewed from the controls\n *\n * @fires before:transform before a transform is is started\n * @fires before:selection:cleared\n * @fires selection:cleared\n * @fires selection:updated\n * @fires selection:created\n *\n * @fires path:created after a drawing operation ends and the path is added\n * @fires mouse:down\n * @fires mouse:move\n * @fires mouse:up\n * @fires mouse:down:before  on mouse down, before the inner fabric logic runs\n * @fires mouse:move:before on mouse move, before the inner fabric logic runs\n * @fires mouse:up:before on mouse up, before the inner fabric logic runs\n * @fires mouse:over\n * @fires mouse:out\n * @fires mouse:dblclick whenever a native dbl click event fires on the canvas.\n *\n * @fires dragover\n * @fires dragenter\n * @fires dragleave\n * @fires drag:enter object drag enter\n * @fires drag:leave object drag leave\n * @fires drop:before before drop event. Prepare for the drop event (same native event).\n * @fires drop\n * @fires drop:after after drop event. Run logic on canvas after event has been accepted/declined (same native event).\n * @example\n * let a: fabric.Object, b: fabric.Object;\n * let flag = false;\n * canvas.add(a, b);\n * a.on('drop:before', opt => {\n *  //  we want a to accept the drop even though it's below b in the stack\n *  flag = this.canDrop(opt.e);\n * });\n * b.canDrop = function(e) {\n *  !flag && this.draggableTextDelegate.canDrop(e);\n * }\n * b.on('dragover', opt => b.set('fill', opt.dropTarget === b ? 'pink' : 'black'));\n * a.on('drop', opt => {\n *  opt.e.defaultPrevented  //  drop occurred\n *  opt.didDrop             //  drop occurred on canvas\n *  opt.target              //  drop target\n *  opt.target !== a && a.set('text', 'I lost');\n * });\n * canvas.on('drop:after', opt => {\n *  //  inform user who won\n *  if(!opt.e.defaultPrevented) {\n *    // no winners\n *  }\n *  else if(!opt.didDrop) {\n *    //  my objects didn't win, some other lucky object\n *  }\n *  else {\n *    //  we have a winner it's opt.target!!\n *  }\n * })\n *\n * @fires after:render at the end of the render process, receives the context in the callback\n * @fires before:render at start the render process, receives the context in the callback\n *\n * @fires contextmenu:before\n * @fires contextmenu\n * @example\n * let handler;\n * targets.forEach(target => {\n *   target.on('contextmenu:before', opt => {\n *     //  decide which target should handle the event before canvas hijacks it\n *     if (someCaseHappens && opt.targets.includes(target)) {\n *       handler = target;\n *     }\n *   });\n *   target.on('contextmenu', opt => {\n *     //  do something fantastic\n *   });\n * });\n * canvas.on('contextmenu', opt => {\n *   if (!handler) {\n *     //  no one takes responsibility, it's always left to me\n *     //  let's show them how it's done!\n *   }\n * });\n *\n */\nexport class SelectableCanvas<EventSpec extends CanvasEvents = CanvasEvents>\n  extends StaticCanvas<EventSpec>\n  implements Omit<CanvasOptions, 'enablePointerEvents'>\n{\n  declare _objects: FabricObject[];\n\n  // transform config\n  declare uniformScaling: boolean;\n  declare uniScaleKey: TOptionalModifierKey;\n  declare centeredScaling: boolean;\n  declare centeredRotation: boolean;\n  declare centeredKey: TOptionalModifierKey;\n  declare altActionKey: TOptionalModifierKey;\n\n  // selection config\n  declare selection: boolean;\n  declare selectionKey: TOptionalModifierKey | ModifierKey[];\n  declare altSelectionKey: TOptionalModifierKey;\n  declare selectionColor: string;\n  declare selectionDashArray: number[];\n  declare selectionBorderColor: string;\n  declare selectionLineWidth: number;\n  declare selectionFullyContained: boolean;\n\n  // cursors\n  declare hoverCursor: CSSStyleDeclaration['cursor'];\n  declare moveCursor: CSSStyleDeclaration['cursor'];\n  declare defaultCursor: CSSStyleDeclaration['cursor'];\n  declare freeDrawingCursor: CSSStyleDeclaration['cursor'];\n  declare notAllowedCursor: CSSStyleDeclaration['cursor'];\n\n  declare containerClass: string;\n\n  // target find config\n  declare perPixelTargetFind: boolean;\n  declare targetFindTolerance: number;\n  declare skipTargetFind: boolean;\n\n  /**\n   * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n   * After mousedown, mousemove creates a shape,\n   * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n   * @type Boolean\n   * @default\n   */\n  declare isDrawingMode: boolean;\n\n  declare preserveObjectStacking: boolean;\n\n  // event config\n  declare stopContextMenu: boolean;\n  declare fireRightClick: boolean;\n  declare fireMiddleClick: boolean;\n\n  /**\n   * Keep track of the subTargets for Mouse Events, ordered bottom up from innermost nested subTarget\n   * @type FabricObject[]\n   */\n  targets: FabricObject[] = [];\n\n  /**\n   * Keep track of the hovered target\n   * @type FabricObject | null\n   * @private\n   */\n  declare _hoveredTarget?: FabricObject;\n\n  /**\n   * hold the list of nested targets hovered\n   * @type FabricObject[]\n   * @private\n   */\n  _hoveredTargets: FabricObject[] = [];\n\n  /**\n   * hold the list of objects to render\n   * @type FabricObject[]\n   * @private\n   */\n  _objectsToRender?: FabricObject[];\n\n  /**\n   * hold a reference to a data structure that contains information\n   * on the current on going transform\n   * @type\n   * @private\n   */\n  _currentTransform: Transform | null = null;\n\n  /**\n   * hold a reference to a data structure used to track the selection\n   * box on canvas drag\n   * on the current on going transform\n   * x, y, deltaX and deltaY are in scene plane\n   * @type\n   * @private\n   */\n  protected _groupSelector: {\n    x: number;\n    y: number;\n    deltaX: number;\n    deltaY: number;\n  } | null = null;\n\n  /**\n   * internal flag used to understand if the context top requires a cleanup\n   * in case this is true, the contextTop will be cleared at the next render\n   * @type boolean\n   * @private\n   */\n  contextTopDirty = false;\n\n  /**\n   * During a mouse event we may need the pointer multiple times in multiple functions.\n   * _absolutePointer holds a reference to the pointer in fabricCanvas/design coordinates that is valid for the event\n   * lifespan. Every fabricJS mouse event create and delete the cache every time\n   * We do this because there are some HTML DOM inspection functions to get the actual pointer coordinates\n   * @type {Point}\n   */\n  protected declare _absolutePointer?: Point;\n\n  /**\n   * During a mouse event we may need the pointer multiple times in multiple functions.\n   * _pointer holds a reference to the pointer in html coordinates that is valid for the event\n   * lifespan. Every fabricJS mouse event create and delete the cache every time\n   * We do this because there are some HTML DOM inspection functions to get the actual pointer coordinates\n   * @type {Point}\n   */\n  protected declare _pointer?: Point;\n\n  /**\n   * During a mouse event we may need the target multiple times in multiple functions.\n   * _target holds a reference to the target that is valid for the event\n   * lifespan. Every fabricJS mouse event create and delete the cache every time\n   * @type {FabricObject}\n   */\n  protected declare _target?: FabricObject;\n\n  static ownDefaults = canvasDefaults;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...SelectableCanvas.ownDefaults };\n  }\n\n  declare elements: CanvasDOMManager;\n  get upperCanvasEl() {\n    return this.elements.upper?.el;\n  }\n  get contextTop() {\n    return this.elements.upper?.ctx;\n  }\n  get wrapperEl() {\n    return this.elements.container;\n  }\n  private declare pixelFindCanvasEl: HTMLCanvasElement;\n  private declare pixelFindContext: CanvasRenderingContext2D;\n\n  protected declare _isCurrentlyDrawing: boolean;\n  declare freeDrawingBrush?: BaseBrush;\n  declare _activeObject?: FabricObject;\n\n  protected initElements(el?: string | HTMLCanvasElement) {\n    this.elements = new CanvasDOMManager(el, {\n      allowTouchScrolling: this.allowTouchScrolling,\n      containerClass: this.containerClass,\n    });\n    this._createCacheCanvas();\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} obj Object that was added\n   */\n  _onObjectAdded(obj: FabricObject) {\n    this._objectsToRender = undefined;\n    super._onObjectAdded(obj);\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} obj Object that was removed\n   */\n  _onObjectRemoved(obj: FabricObject) {\n    this._objectsToRender = undefined;\n    // removing active object should fire \"selection:cleared\" events\n    if (obj === this._activeObject) {\n      this.fire('before:selection:cleared', { deselected: [obj] });\n      this._discardActiveObject();\n      this.fire('selection:cleared', { deselected: [obj] });\n      obj.fire('deselected', {\n        target: obj,\n      });\n    }\n    if (obj === this._hoveredTarget) {\n      this._hoveredTarget = undefined;\n      this._hoveredTargets = [];\n    }\n    super._onObjectRemoved(obj);\n  }\n\n  _onStackOrderChanged() {\n    this._objectsToRender = undefined;\n    super._onStackOrderChanged();\n  }\n\n  /**\n   * Divides objects in two groups, one to render immediately\n   * and one to render as activeGroup.\n   * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n   */\n  _chooseObjectsToRender(): FabricObject[] {\n    const activeObject = this._activeObject;\n    return !this.preserveObjectStacking && activeObject\n      ? this._objects\n          .filter((object) => !object.group && object !== activeObject)\n          .concat(activeObject)\n      : this._objects;\n  }\n\n  /**\n   * Renders both the top canvas and the secondary container canvas.\n   */\n  renderAll() {\n    this.cancelRequestedRender();\n    if (this.destroyed) {\n      return;\n    }\n    if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n      this.clearContext(this.contextTop);\n      this.contextTopDirty = false;\n    }\n    if (this.hasLostContext) {\n      this.renderTopLayer(this.contextTop);\n      this.hasLostContext = false;\n    }\n    !this._objectsToRender &&\n      (this._objectsToRender = this._chooseObjectsToRender());\n    this.renderCanvas(this.getContext(), this._objectsToRender);\n  }\n\n  /**\n   * text selection is rendered by the active text instance during the rendering cycle\n   */\n  renderTopLayer(ctx: CanvasRenderingContext2D): void {\n    ctx.save();\n    if (this.isDrawingMode && this._isCurrentlyDrawing) {\n      this.freeDrawingBrush && this.freeDrawingBrush._render();\n      this.contextTopDirty = true;\n    }\n    // we render the top context - last object\n    if (this.selection && this._groupSelector) {\n      this._drawSelection(ctx);\n      this.contextTopDirty = true;\n    }\n    ctx.restore();\n  }\n\n  /**\n   * Method to render only the top canvas.\n   * Also used to render the group selection box.\n   * Does not render text selection.\n   */\n  renderTop() {\n    const ctx = this.contextTop;\n    this.clearContext(ctx);\n    this.renderTopLayer(ctx);\n    // todo: how do i know if the after:render is for the top or normal contex?\n    this.fire('after:render', { ctx });\n  }\n\n  /**\n   * Set the canvas tolerance value for pixel taret find.\n   * Use only integer numbers.\n   * @private\n   */\n  setTargetFindTolerance(value: number) {\n    value = Math.round(value);\n    this.targetFindTolerance = value;\n    const retina = this.getRetinaScaling();\n    const size = Math.ceil((value * 2 + 1) * retina);\n    this.pixelFindCanvasEl.width = this.pixelFindCanvasEl.height = size;\n    this.pixelFindContext.scale(retina, retina);\n  }\n\n  /**\n   * Returns true if object is transparent at a certain location\n   * Clarification: this is `is target transparent at location X or are controls there`\n   * @TODO this seems dumb that we treat controls with transparency. we can find controls\n   * programmatically without painting them, the cache canvas optimization is always valid\n   * @param {FabricObject} target Object to check\n   * @param {Number} x Left coordinate in viewport space\n   * @param {Number} y Top coordinate in viewport space\n   * @return {Boolean}\n   */\n  isTargetTransparent(target: FabricObject, x: number, y: number): boolean {\n    const tolerance = this.targetFindTolerance;\n    const ctx = this.pixelFindContext;\n    this.clearContext(ctx);\n    ctx.save();\n    ctx.translate(-x + tolerance, -y + tolerance);\n    ctx.transform(...this.viewportTransform);\n    const selectionBgc = target.selectionBackgroundColor;\n    target.selectionBackgroundColor = '';\n    target.render(ctx);\n    target.selectionBackgroundColor = selectionBgc;\n    ctx.restore();\n    // our canvas is square, and made around tolerance.\n    // so tolerance in this case also represent the center of the canvas.\n    const enhancedTolerance = Math.round(tolerance * this.getRetinaScaling());\n    return isTransparent(\n      ctx,\n      enhancedTolerance,\n      enhancedTolerance,\n      enhancedTolerance,\n    );\n  }\n\n  /**\n   * takes an event and determines if selection key has been pressed\n   * @private\n   * @param {TPointerEvent} e Event object\n   */\n  _isSelectionKeyPressed(e: TPointerEvent): boolean {\n    const sKey = this.selectionKey;\n    if (!sKey) {\n      return false;\n    }\n    if (Array.isArray(sKey)) {\n      return !!sKey.find((key) => !!key && e[key] === true);\n    } else {\n      return e[sKey];\n    }\n  }\n\n  /**\n   * @private\n   * @param {TPointerEvent} e Event object\n   * @param {FabricObject} target\n   */\n  _shouldClearSelection(\n    e: TPointerEvent,\n    target?: FabricObject,\n  ): target is undefined {\n    const activeObjects = this.getActiveObjects(),\n      activeObject = this._activeObject;\n\n    return !!(\n      !target ||\n      (target &&\n        activeObject &&\n        activeObjects.length > 1 &&\n        activeObjects.indexOf(target) === -1 &&\n        activeObject !== target &&\n        !this._isSelectionKeyPressed(e)) ||\n      (target && !target.evented) ||\n      (target && !target.selectable && activeObject && activeObject !== target)\n    );\n  }\n\n  /**\n   * This method will take in consideration a modifier key pressed and the control we are\n   * about to drag, and try to guess the anchor point ( origin ) of the transormation.\n   * This should be really in the realm of controls, and we should remove specific code for legacy\n   * embedded actions.\n   * @TODO this probably deserve discussion/rediscovery and change/refactor\n   * @private\n   * @deprecated\n   * @param {FabricObject} target\n   * @param {string} action\n   * @param {boolean} altKey\n   * @returns {boolean} true if the transformation should be centered\n   */\n  private _shouldCenterTransform(\n    target: FabricObject,\n    action: string,\n    modifierKeyPressed: boolean,\n  ) {\n    if (!target) {\n      return;\n    }\n\n    let centerTransform;\n\n    if (\n      action === SCALE ||\n      action === SCALE_X ||\n      action === SCALE_Y ||\n      action === RESIZING\n    ) {\n      centerTransform = this.centeredScaling || target.centeredScaling;\n    } else if (action === ROTATE) {\n      centerTransform = this.centeredRotation || target.centeredRotation;\n    }\n\n    return centerTransform ? !modifierKeyPressed : modifierKeyPressed;\n  }\n\n  /**\n   * Given the control clicked, determine the origin of the transform.\n   * This is bad because controls can totally have custom names\n   * should disappear before release 4.0\n   * @private\n   * @deprecated\n   */\n  _getOriginFromCorner(\n    target: FabricObject,\n    controlName: string,\n  ): { x: TOriginX; y: TOriginY } {\n    const origin = {\n      x: target.originX,\n      y: target.originY,\n    };\n\n    if (!controlName) {\n      return origin;\n    }\n\n    // is a left control ?\n    if (['ml', 'tl', 'bl'].includes(controlName)) {\n      origin.x = RIGHT;\n      // is a right control ?\n    } else if (['mr', 'tr', 'br'].includes(controlName)) {\n      origin.x = LEFT;\n    }\n    // is a top control ?\n    if (['tl', 'mt', 'tr'].includes(controlName)) {\n      origin.y = BOTTOM;\n      // is a bottom control ?\n    } else if (['bl', 'mb', 'br'].includes(controlName)) {\n      origin.y = TOP;\n    }\n    return origin;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @param {FabricObject} target\n   * @param {boolean} [alreadySelected] pass true to setup the active control\n   */\n  _setupCurrentTransform(\n    e: TPointerEvent,\n    target: FabricObject,\n    alreadySelected: boolean,\n  ): void {\n    const pointer = target.group\n      ? // transform pointer to target's containing coordinate plane\n        sendPointToPlane(\n          this.getScenePoint(e),\n          undefined,\n          target.group.calcTransformMatrix(),\n        )\n      : this.getScenePoint(e);\n    const { key: corner = '', control } = target.getActiveControl() || {},\n      actionHandler =\n        alreadySelected && control\n          ? control.getActionHandler(e, target, control)?.bind(control)\n          : dragHandler,\n      action = getActionFromCorner(alreadySelected, corner, e, target),\n      altKey = e[this.centeredKey as ModifierKey],\n      origin = this._shouldCenterTransform(target, action, altKey)\n        ? ({ x: CENTER, y: CENTER } as const)\n        : this._getOriginFromCorner(target, corner),\n      /**\n       * relative to target's containing coordinate plane\n       * both agree on every point\n       **/\n      transform: Transform = {\n        target: target,\n        action,\n        actionHandler,\n        actionPerformed: false,\n        corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        theta: degreesToRadians(target.angle),\n        width: target.width,\n        height: target.height,\n        shiftKey: e.shiftKey,\n        altKey,\n        original: {\n          ...saveObjectTransform(target),\n          originX: origin.x,\n          originY: origin.y,\n        },\n      };\n\n    this._currentTransform = transform;\n\n    this.fire('before:transform', {\n      e,\n      transform,\n    });\n  }\n\n  /**\n   * Set the cursor type of the canvas element\n   * @param {String} value Cursor type of the canvas element.\n   * @see http://www.w3.org/TR/css3-ui/#cursor\n   */\n  setCursor(value: CSSStyleDeclaration['cursor']): void {\n    this.upperCanvasEl.style.cursor = value;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx to draw the selection on\n   */\n  _drawSelection(ctx: CanvasRenderingContext2D): void {\n    const { x, y, deltaX, deltaY } = this._groupSelector!,\n      start = new Point(x, y).transform(this.viewportTransform),\n      extent = new Point(x + deltaX, y + deltaY).transform(\n        this.viewportTransform,\n      ),\n      strokeOffset = this.selectionLineWidth / 2;\n    let minX = Math.min(start.x, extent.x),\n      minY = Math.min(start.y, extent.y),\n      maxX = Math.max(start.x, extent.x),\n      maxY = Math.max(start.y, extent.y);\n\n    if (this.selectionColor) {\n      ctx.fillStyle = this.selectionColor;\n      ctx.fillRect(minX, minY, maxX - minX, maxY - minY);\n    }\n\n    if (!this.selectionLineWidth || !this.selectionBorderColor) {\n      return;\n    }\n    ctx.lineWidth = this.selectionLineWidth;\n    ctx.strokeStyle = this.selectionBorderColor;\n\n    minX += strokeOffset;\n    minY += strokeOffset;\n    maxX -= strokeOffset;\n    maxY -= strokeOffset;\n    // selection border\n    // @TODO: is _setLineDash still necessary on modern canvas?\n    FabricObject.prototype._setLineDash.call(\n      this,\n      ctx,\n      this.selectionDashArray,\n    );\n    ctx.strokeRect(minX, minY, maxX - minX, maxY - minY);\n  }\n\n  /**\n   * Method that determines what object we are clicking on\n   * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\n   * or the outside part of the corner.\n   * @param {Event} e mouse event\n   * @return {FabricObject | null} the target found\n   */\n  findTarget(e: TPointerEvent): FabricObject | undefined {\n    if (this.skipTargetFind) {\n      return undefined;\n    }\n\n    const pointer = this.getViewportPoint(e),\n      activeObject = this._activeObject,\n      aObjects = this.getActiveObjects();\n\n    this.targets = [];\n\n    if (activeObject && aObjects.length >= 1) {\n      if (activeObject.findControl(pointer, isTouchEvent(e))) {\n        // if we hit the corner of the active object, let's return that.\n        return activeObject;\n      } else if (\n        aObjects.length > 1 &&\n        // check pointer is over active selection and possibly perform `subTargetCheck`\n        this.searchPossibleTargets([activeObject], pointer)\n      ) {\n        // active selection does not select sub targets like normal groups\n        return activeObject;\n      } else if (\n        activeObject === this.searchPossibleTargets([activeObject], pointer)\n      ) {\n        // active object is not an active selection\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        } else {\n          const subTargets = this.targets;\n          this.targets = [];\n          const target = this.searchPossibleTargets(this._objects, pointer);\n          if (\n            e[this.altSelectionKey as ModifierKey] &&\n            target &&\n            target !== activeObject\n          ) {\n            // alt selection: select active object even though it is not the top most target\n            // restore targets\n            this.targets = subTargets;\n            return activeObject;\n          }\n          return target;\n        }\n      }\n    }\n\n    return this.searchPossibleTargets(this._objects, pointer);\n  }\n\n  /**\n   * Checks if the point is inside the object selection area including padding\n   * @param {FabricObject} obj Object to test against\n   * @param {Object} [pointer] point in scene coordinates\n   * @return {Boolean} true if point is contained within an area of given object\n   * @private\n   */\n  private _pointIsInObjectSelectionArea(obj: FabricObject, point: Point) {\n    // getCoords will already take care of group de-nesting\n    let coords = obj.getCoords();\n    const viewportZoom = this.getZoom();\n    const padding = obj.padding / viewportZoom;\n    if (padding) {\n      const [tl, tr, br, bl] = coords;\n      // what is the angle of the object?\n      // we could use getTotalAngle, but is way easier to look at it\n      // from how coords are oriented, since if something went wrong\n      // at least we are consistent.\n      const angleRadians = Math.atan2(tr.y - tl.y, tr.x - tl.x),\n        cosP = cos(angleRadians) * padding,\n        sinP = sin(angleRadians) * padding,\n        cosPSinP = cosP + sinP,\n        cosPMinusSinP = cosP - sinP;\n\n      coords = [\n        new Point(tl.x - cosPMinusSinP, tl.y - cosPSinP),\n        new Point(tr.x + cosPSinP, tr.y - cosPMinusSinP),\n        new Point(br.x + cosPMinusSinP, br.y + cosPSinP),\n        new Point(bl.x - cosPSinP, bl.y + cosPMinusSinP),\n      ];\n      // in case of padding we calculate the new coords on the fly.\n      // otherwise we have to maintain 2 sets of coordinates for everything.\n      // we can reiterate on storing them.\n      // if this is slow, for now the semplification is large and doesn't impact\n      // rendering.\n      // the idea behind this is that outside target check we don't need ot know\n      // where those coords are\n    }\n    return Intersection.isPointInPolygon(point, coords);\n  }\n\n  /**\n   * Checks point is inside the object selection condition. Either area with padding\n   * or over pixels if perPixelTargetFind is enabled\n   * @param {FabricObject} obj Object to test against\n   * @param {Object} [pointer] point from viewport.\n   * @return {Boolean} true if point is contained within an area of given object\n   * @private\n   */\n  _checkTarget(obj: FabricObject, pointer: Point): boolean {\n    if (\n      obj &&\n      obj.visible &&\n      obj.evented &&\n      this._pointIsInObjectSelectionArea(\n        obj,\n        sendPointToPlane(pointer, undefined, this.viewportTransform),\n      )\n    ) {\n      if (\n        (this.perPixelTargetFind || obj.perPixelTargetFind) &&\n        !(obj as unknown as IText).isEditing\n      ) {\n        if (!this.isTargetTransparent(obj, pointer.x, pointer.y)) {\n          return true;\n        }\n      } else {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Internal Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n   * @param {Array} [objects] objects array to look into\n   * @param {Object} [pointer] x,y object of point coordinates we want to check.\n   * @return {FabricObject} **top most object from given `objects`** that contains pointer\n   * @private\n   */\n  _searchPossibleTargets(\n    objects: FabricObject[],\n    pointer: Point,\n  ): FabricObject | undefined {\n    // Cache all targets where their bounding box contains point.\n    let i = objects.length;\n    // Do not check for currently grouped objects, since we check the parent group itself.\n    // until we call this function specifically to search inside the activeGroup\n    while (i--) {\n      const target = objects[i];\n      if (this._checkTarget(target, pointer)) {\n        if (isCollection(target) && target.subTargetCheck) {\n          const subTarget = this._searchPossibleTargets(\n            target._objects as FabricObject[],\n            pointer,\n          );\n          subTarget && this.targets.push(subTarget);\n        }\n        return target;\n      }\n    }\n  }\n\n  /**\n   * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n   * @see {@link _searchPossibleTargets}\n   * @param {FabricObject[]} [objects] objects array to look into\n   * @param {Point} [pointer] coordinates from viewport to check.\n   * @return {FabricObject} **top most object on screen** that contains pointer\n   */\n  searchPossibleTargets(\n    objects: FabricObject[],\n    pointer: Point,\n  ): FabricObject | undefined {\n    const target = this._searchPossibleTargets(objects, pointer);\n\n    // if we found something in this.targets, and the group is interactive, return the innermost subTarget\n    // that is still interactive\n    // TODO: reverify why interactive. the target should be returned always, but selected only\n    // if interactive.\n    if (\n      target &&\n      isCollection(target) &&\n      target.interactive &&\n      this.targets[0]\n    ) {\n      /** targets[0] is the innermost nested target, but it could be inside non interactive groups and so not a selection target */\n      const targets = this.targets;\n      for (let i = targets.length - 1; i > 0; i--) {\n        const t = targets[i];\n        if (!(isCollection(t) && t.interactive)) {\n          // one of the subtargets was not interactive. that is the last subtarget we can return.\n          // we can't dig more deep;\n          return t;\n        }\n      }\n      return targets[0];\n    }\n\n    return target;\n  }\n\n  /**\n   * @returns point existing in the same plane as the {@link HTMLCanvasElement},\n   * `(0, 0)` being the top left corner of the {@link HTMLCanvasElement}.\n   * This means that changes to the {@link viewportTransform} do not change the values of the point\n   * and it remains unchanged from the viewer's perspective.\n   *\n   * @example\n   * const scenePoint = sendPointToPlane(\n   *  this.getViewportPoint(e),\n   *  undefined,\n   *  canvas.viewportTransform\n   * );\n   *\n   */\n  getViewportPoint(e: TPointerEvent) {\n    if (this._pointer) {\n      return this._pointer;\n    }\n    return this.getPointer(e, true);\n  }\n\n  /**\n   * @returns point existing in the scene (the same plane as the plane {@link FabricObject#getCenterPoint} exists in).\n   * This means that changes to the {@link viewportTransform} do not change the values of the point,\n   * however, from the viewer's perspective, the point is changed.\n   *\n   * @example\n   * const viewportPoint = sendPointToPlane(\n   *  this.getScenePoint(e),\n   *  canvas.viewportTransform\n   * );\n   *\n   */\n  getScenePoint(e: TPointerEvent) {\n    if (this._absolutePointer) {\n      return this._absolutePointer;\n    }\n    return this.getPointer(e);\n  }\n\n  /**\n   * Returns pointer relative to canvas.\n   *\n   * @deprecated This method is deprecated since v6 to protect you from misuse.\n   * Use {@link getViewportPoint} or {@link getScenePoint} instead.\n   *\n   * @param {Event} e\n   * @param {Boolean} [fromViewport] whether to return the point from the viewport or in the scene\n   * @return {Point}\n   */\n  getPointer(e: TPointerEvent, fromViewport = false): Point {\n    const upperCanvasEl = this.upperCanvasEl,\n      bounds = upperCanvasEl.getBoundingClientRect();\n    let pointer = getPointer(e),\n      boundsWidth = bounds.width || 0,\n      boundsHeight = bounds.height || 0;\n\n    if (!boundsWidth || !boundsHeight) {\n      if (TOP in bounds && BOTTOM in bounds) {\n        boundsHeight = Math.abs(bounds.top - bounds.bottom);\n      }\n      if (RIGHT in bounds && LEFT in bounds) {\n        boundsWidth = Math.abs(bounds.right - bounds.left);\n      }\n    }\n\n    this.calcOffset();\n    pointer.x = pointer.x - this._offset.left;\n    pointer.y = pointer.y - this._offset.top;\n    if (!fromViewport) {\n      pointer = sendPointToPlane(pointer, undefined, this.viewportTransform);\n    }\n\n    const retinaScaling = this.getRetinaScaling();\n    if (retinaScaling !== 1) {\n      pointer.x /= retinaScaling;\n      pointer.y /= retinaScaling;\n    }\n\n    // If bounds are not available (i.e. not visible), do not apply scale.\n    const cssScale =\n      boundsWidth === 0 || boundsHeight === 0\n        ? new Point(1, 1)\n        : new Point(\n            upperCanvasEl.width / boundsWidth,\n            upperCanvasEl.height / boundsHeight,\n          );\n\n    return pointer.multiply(cssScale);\n  }\n\n  /**\n   * Internal use only\n   * @protected\n   */\n  protected _setDimensionsImpl(\n    dimensions: TSize,\n    options?: TCanvasSizeOptions,\n  ) {\n    // @ts-expect-error this method exists in the subclass - should be moved or declared as abstract\n    this._resetTransformEventData();\n    super._setDimensionsImpl(dimensions, options);\n    if (this._isCurrentlyDrawing) {\n      this.freeDrawingBrush &&\n        this.freeDrawingBrush._setBrushStyles(this.contextTop);\n    }\n  }\n\n  protected _createCacheCanvas() {\n    this.pixelFindCanvasEl = createCanvasElement();\n    this.pixelFindContext = this.pixelFindCanvasEl.getContext('2d', {\n      willReadFrequently: true,\n    })!;\n    this.setTargetFindTolerance(this.targetFindTolerance);\n  }\n\n  /**\n   * Returns context of top canvas where interactions are drawn\n   * @returns {CanvasRenderingContext2D}\n   */\n  getTopContext(): CanvasRenderingContext2D {\n    return this.elements.upper.ctx;\n  }\n\n  /**\n   * Returns context of canvas where object selection is drawn\n   * @alias\n   * @return {CanvasRenderingContext2D}\n   */\n  getSelectionContext(): CanvasRenderingContext2D {\n    return this.elements.upper.ctx;\n  }\n\n  /**\n   * Returns &lt;canvas> element on which object selection is drawn\n   * @return {HTMLCanvasElement}\n   */\n  getSelectionElement(): HTMLCanvasElement {\n    return this.elements.upper.el;\n  }\n\n  /**\n   * Returns currently active object\n   * @return {FabricObject | null} active object\n   */\n  getActiveObject(): FabricObject | undefined {\n    return this._activeObject;\n  }\n\n  /**\n   * Returns an array with the current selected objects\n   * @return {FabricObject[]} active objects array\n   */\n  getActiveObjects(): FabricObject[] {\n    const active = this._activeObject;\n    return isActiveSelection(active)\n      ? active.getObjects()\n      : active\n        ? [active]\n        : [];\n  }\n\n  /**\n   * @private\n   * Compares the old activeObject with the current one and fires correct events\n   * @param {FabricObject[]} oldObjects old activeObject\n   * @param {TPointerEvent} e mouse event triggering the selection events\n   */\n  _fireSelectionEvents(oldObjects: FabricObject[], e?: TPointerEvent) {\n    let somethingChanged = false,\n      invalidate = false;\n    const objects = this.getActiveObjects(),\n      added: FabricObject[] = [],\n      removed: FabricObject[] = [];\n\n    oldObjects.forEach((target) => {\n      if (!objects.includes(target)) {\n        somethingChanged = true;\n        target.fire('deselected', {\n          e,\n          target,\n        });\n        removed.push(target);\n      }\n    });\n\n    objects.forEach((target) => {\n      if (!oldObjects.includes(target)) {\n        somethingChanged = true;\n        target.fire('selected', {\n          e,\n          target,\n        });\n        added.push(target);\n      }\n    });\n\n    if (oldObjects.length > 0 && objects.length > 0) {\n      invalidate = true;\n      somethingChanged &&\n        this.fire('selection:updated', {\n          e,\n          selected: added,\n          deselected: removed,\n        });\n    } else if (objects.length > 0) {\n      invalidate = true;\n      this.fire('selection:created', {\n        e,\n        selected: added,\n      });\n    } else if (oldObjects.length > 0) {\n      invalidate = true;\n      this.fire('selection:cleared', {\n        e,\n        deselected: removed,\n      });\n    }\n    invalidate && (this._objectsToRender = undefined);\n  }\n\n  /**\n   * Sets given object as the only active object on canvas\n   * @param {FabricObject} object Object to set as an active one\n   * @param {TPointerEvent} [e] Event (passed along when firing \"object:selected\")\n   * @return {Boolean} true if the object has been selected\n   */\n  setActiveObject(object: FabricObject, e?: TPointerEvent) {\n    // we can't inline this, since _setActiveObject will change what getActiveObjects returns\n    const currentActives = this.getActiveObjects();\n    const selected = this._setActiveObject(object, e);\n    this._fireSelectionEvents(currentActives, e);\n    return selected;\n  }\n\n  /**\n   * This is supposed to be equivalent to setActiveObject but without firing\n   * any event. There is commitment to have this stay this way.\n   * This is the functional part of setActiveObject.\n   * @param {Object} object to set as active\n   * @param {Event} [e] Event (passed along when firing \"object:selected\")\n   * @return {Boolean} true if the object has been selected\n   */\n  _setActiveObject(object: FabricObject, e?: TPointerEvent) {\n    const prevActiveObject = this._activeObject;\n    if (prevActiveObject === object) {\n      return false;\n    }\n    // after calling this._discardActiveObject, this,_activeObject could be undefined\n    if (!this._discardActiveObject(e, object) && this._activeObject) {\n      // refused to deselect\n      return false;\n    }\n    if (object.onSelect({ e })) {\n      return false;\n    }\n\n    this._activeObject = object;\n\n    if (isActiveSelection(object) && prevActiveObject !== object) {\n      object.set('canvas', this);\n    }\n    object.setCoords();\n\n    return true;\n  }\n\n  /**\n   * This is supposed to be equivalent to discardActiveObject but without firing\n   * any selection events ( can still fire object transformation events ). There is commitment to have this stay this way.\n   * This is the functional part of discardActiveObject.\n   * @param {Event} [e] Event (passed along when firing \"object:deselected\")\n   * @param {Object} object the next object to set as active, reason why we are discarding this\n   * @return {Boolean} true if the active object has been discarded\n   */\n  _discardActiveObject(\n    e?: TPointerEvent,\n    object?: FabricObject,\n  ): this is { _activeObject: undefined } {\n    const obj = this._activeObject;\n    if (obj) {\n      // onDeselect return TRUE to cancel selection;\n      if (obj.onDeselect({ e, object })) {\n        return false;\n      }\n      if (this._currentTransform && this._currentTransform.target === obj) {\n        this.endCurrentTransform(e);\n      }\n      if (isActiveSelection(obj) && obj === this._hoveredTarget) {\n        this._hoveredTarget = undefined;\n      }\n      this._activeObject = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Discards currently active object and fire events. If the function is called by fabric\n   * as a consequence of a mouse event, the event is passed as a parameter and\n   * sent to the fire function for the custom events. When used as a method the\n   * e param does not have any application.\n   * @param {event} e\n   * @return {Boolean} true if the active object has been discarded\n   */\n  discardActiveObject(e?: TPointerEvent): this is { _activeObject: undefined } {\n    const currentActives = this.getActiveObjects(),\n      activeObject = this.getActiveObject();\n    if (currentActives.length) {\n      this.fire('before:selection:cleared', {\n        e,\n        deselected: [activeObject!],\n      });\n    }\n    const discarded = this._discardActiveObject(e);\n    this._fireSelectionEvents(currentActives, e);\n    return discarded;\n  }\n\n  /**\n   * End the current transform.\n   * You don't usually need to call this method unless you are interrupting a user initiated transform\n   * because of some other event ( a press of key combination, or something that block the user UX )\n   * @param {Event} [e] send the mouse event that generate the finalize down, so it can be used in the event\n   */\n  endCurrentTransform(e?: TPointerEvent) {\n    const transform = this._currentTransform;\n    this._finalizeCurrentTransform(e);\n    if (transform && transform.target) {\n      // this could probably go inside _finalizeCurrentTransform\n      transform.target.isMoving = false;\n    }\n    this._currentTransform = null;\n  }\n\n  /**\n   * @private\n   * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n   */\n  _finalizeCurrentTransform(e?: TPointerEvent) {\n    const transform = this._currentTransform!,\n      target = transform.target,\n      options = {\n        e,\n        target,\n        transform,\n        action: transform.action,\n      };\n\n    if (target._scaling) {\n      target._scaling = false;\n    }\n\n    target.setCoords();\n\n    if (transform.actionPerformed) {\n      this.fire('object:modified', options);\n      target.fire(MODIFIED, options);\n    }\n  }\n\n  /**\n   * Sets viewport transformation of this canvas instance\n   * @param {Array} vpt a Canvas 2D API transform matrix\n   */\n  setViewportTransform(vpt: TMat2D) {\n    super.setViewportTransform(vpt);\n    const activeObject = this._activeObject;\n    if (activeObject) {\n      activeObject.setCoords();\n    }\n  }\n\n  /**\n   * @override clears active selection ref and interactive canvas elements and contexts\n   */\n  destroy() {\n    // dispose of active selection\n    const activeObject = this._activeObject;\n    if (isActiveSelection(activeObject)) {\n      activeObject.removeAll();\n      activeObject.dispose();\n    }\n\n    delete this._activeObject;\n\n    super.destroy();\n\n    // free resources\n\n    // pixel find canvas\n    // @ts-expect-error disposing\n    this.pixelFindContext = null;\n    // @ts-expect-error disposing\n    this.pixelFindCanvasEl = undefined;\n  }\n\n  /**\n   * Clears all contexts (background, main, top) of an instance\n   */\n  clear() {\n    // discard active object and fire events\n    this.discardActiveObject();\n    // make sure we clear the active object in case it refused to be discarded\n    this._activeObject = undefined;\n    this.clearContext(this.contextTop);\n    super.clear();\n  }\n\n  /**\n   * Draws objects' controls (borders/controls)\n   * @param {CanvasRenderingContext2D} ctx Context to render controls on\n   */\n  drawControls(ctx: CanvasRenderingContext2D) {\n    const activeObject = this._activeObject;\n\n    if (activeObject) {\n      activeObject._renderControls(ctx);\n    }\n  }\n\n  /**\n   * @private\n   */\n  protected _toObject(\n    instance: FabricObject,\n    methodName: 'toObject' | 'toDatalessObject',\n    propertiesToInclude: string[],\n  ): Record<string, any> {\n    // If the object is part of the current selection group, it should\n    // be transformed appropriately\n    // i.e. it should be serialised as it would appear if the selection group\n    // were to be destroyed.\n    const originalProperties = this._realizeGroupTransformOnObject(instance),\n      object = super._toObject(instance, methodName, propertiesToInclude);\n    //Undo the damage we did by changing all of its properties\n    instance.set(originalProperties);\n    return object;\n  }\n\n  /**\n   * Realizes an object's group transformation on it\n   * @private\n   * @param {FabricObject} [instance] the object to transform (gets mutated)\n   * @returns the original values of instance which were changed\n   */\n  private _realizeGroupTransformOnObject(\n    instance: FabricObject,\n  ): Partial<typeof instance> {\n    const { group } = instance;\n    if (group && isActiveSelection(group) && this._activeObject === group) {\n      const layoutProps = [\n        'angle',\n        'flipX',\n        'flipY',\n        LEFT,\n        SCALE_X,\n        SCALE_Y,\n        SKEW_X,\n        SKEW_Y,\n        TOP,\n      ] as (keyof typeof instance)[];\n      const originalValues = pick<typeof instance>(instance, layoutProps);\n      addTransformToObject(instance, group.calcOwnMatrix());\n      return originalValues;\n    } else {\n      return {};\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setSVGObject(\n    markup: string[],\n    instance: FabricObject,\n    reviver?: TSVGReviver,\n  ) {\n    // If the object is in a selection group, simulate what would happen to that\n    // object when the group is deselected\n    const originalProperties = this._realizeGroupTransformOnObject(instance);\n    super._setSVGObject(markup, instance, reviver);\n    instance.set(originalProperties);\n  }\n}\n","import type { ModifierKey, TOptionalModifierKey } from '../EventTypeDefs';\nimport type { TOptions } from '../typedefs';\nimport type { StaticCanvasOptions } from './StaticCanvasOptions';\n\nexport interface CanvasTransformOptions {\n  /**\n   * When true, objects can be transformed by one side (unproportionately)\n   * when dragged on the corners that normally would not do that.\n   * @type Boolean\n   * @default\n   * @since fabric 4.0 // changed name and default value\n   */\n  uniformScaling: boolean;\n\n  /**\n   * Indicates which key switches uniform scaling.\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled.\n   * totally wrong named. this sounds like `uniform scaling`\n   * if Canvas.uniformScaling is true, pressing this will set it to false\n   * and viceversa.\n   * @since 1.6.2\n   * @type ModifierKey\n   * @default\n   */\n  uniScaleKey: TOptionalModifierKey;\n\n  /**\n   * When true, objects use center point as the origin of scale transformation.\n   * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n   * @since 1.3.4\n   * @type Boolean\n   * @default\n   */\n  centeredScaling: boolean;\n\n  /**\n   * When true, objects use center point as the origin of rotate transformation.\n   * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n   * @since 1.3.4\n   * @type Boolean\n   * @default\n   */\n  centeredRotation: boolean;\n\n  /**\n   * Indicates which key enable centered Transform\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled feature disabled.\n   * @since 1.6.2\n   * @type ModifierKey\n   * @default\n   */\n  centeredKey: TOptionalModifierKey;\n\n  /**\n   * Indicates which key enable alternate action on corner\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled feature disabled.\n   * @since 1.6.2\n   * @type ModifierKey\n   * @default\n   */\n  altActionKey: TOptionalModifierKey;\n}\n\nexport interface CanvasSelectionOptions {\n  /**\n   * Indicates whether group selection should be enabled\n   * @type Boolean\n   * @default\n   */\n  selection: boolean;\n\n  /**\n   * Indicates which key or keys enable multiple click selection\n   * Pass value as a string or array of strings\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or empty or containing any other string that is not a modifier key\n   * feature is disabled.\n   * @since 1.6.2\n   * @type ModifierKey|ModifierKey[]\n   * @default\n   */\n  selectionKey: TOptionalModifierKey | ModifierKey[];\n\n  /**\n   * Indicates which key enable alternative selection\n   * in case of target overlapping with active object\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * For a series of reason that come from the general expectations on how\n   * things should work, this feature works only for preserveObjectStacking true.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled.\n   * @since 1.6.5\n   * @type null|ModifierKey\n   * @default\n   */\n  altSelectionKey: TOptionalModifierKey;\n\n  /**\n   * Color of selection\n   * @type String\n   * @default\n   */\n  selectionColor: string;\n\n  /**\n   * Default dash array pattern\n   * If not empty the selection border is dashed\n   * @type Array\n   */\n  selectionDashArray: number[];\n\n  /**\n   * Color of the border of selection (usually slightly darker than color of selection itself)\n   * @type String\n   * @default\n   */\n  selectionBorderColor: string;\n\n  /**\n   * Width of a line used in object/group selection\n   * @type Number\n   * @default\n   */\n  selectionLineWidth: number;\n\n  /**\n   * Select only shapes that are fully contained in the dragged selection rectangle.\n   * @type Boolean\n   * @default\n   */\n  selectionFullyContained: boolean;\n}\n\nexport interface CanvasCursorOptions {\n  /**\n   * Default cursor value used when hovering over an object on canvas\n   * @type CSSStyleDeclaration['cursor']\n   * @default move\n   */\n  hoverCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Default cursor value used when moving an object on canvas\n   * @type CSSStyleDeclaration['cursor']\n   * @default move\n   */\n  moveCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Default cursor value used for the entire canvas\n   * @type String\n   * @default default\n   */\n  defaultCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Cursor value used during free drawing\n   * @type String\n   * @default crosshair\n   */\n  freeDrawingCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Cursor value used for disabled elements ( corners with disabled action )\n   * @type String\n   * @since 2.0.0\n   * @default not-allowed\n   */\n  notAllowedCursor: CSSStyleDeclaration['cursor'];\n}\n\nexport interface TargetFindOptions {\n  /**\n   * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n   * @type Boolean\n   * @default\n   */\n  perPixelTargetFind: boolean;\n\n  /**\n   * Number of pixels around target pixel to tolerate (consider active) during object detection\n   * @type Number\n   * @default\n   */\n  targetFindTolerance: number;\n\n  /**\n   * When true, target detection is skipped. Target detection will return always undefined.\n   * click selection won't work anymore, events will fire with no targets.\n   * if something is selected before setting it to true, it will be deselected at the first click.\n   * area selection will still work. check the `selection` property too.\n   * if you deactivate both, you should look into staticCanvas.\n   * @type Boolean\n   * @default\n   */\n  skipTargetFind: boolean;\n}\n\nexport interface CanvasEventsOptions {\n  /**\n   * Indicates if the right click on canvas can output the context menu or not\n   * @type Boolean\n   * @since 1.6.5\n   * @default\n   */\n  stopContextMenu: boolean;\n\n  /**\n   * Indicates if the canvas can fire right click events\n   * @type Boolean\n   * @since 1.6.5\n   * @default\n   */\n  fireRightClick: boolean;\n\n  /**\n   * Indicates if the canvas can fire middle click events\n   * @type Boolean\n   * @since 1.7.8\n   * @default\n   */\n  fireMiddleClick: boolean;\n\n  /**\n   * When the option is enabled, PointerEvent is used instead of TPointerEvent.\n   * @type Boolean\n   * @default\n   */\n  enablePointerEvents: boolean;\n}\n\nexport interface CanvasOptions\n  extends StaticCanvasOptions,\n    CanvasTransformOptions,\n    CanvasSelectionOptions,\n    CanvasCursorOptions,\n    TargetFindOptions,\n    CanvasEventsOptions {\n  /**\n   * Default element class that's given to wrapper (div) element of canvas\n   * @type String\n   * @default\n   * @deprecated customize {@link CanvasDOMManager} instead or access {@link elements} directly\n   */\n  containerClass: string;\n\n  /**\n   * Indicates whether objects should remain in current stack position when selected.\n   * When false objects are brought to top and rendered as part of the selection group\n   * @type Boolean\n   * @default\n   */\n  preserveObjectStacking: boolean;\n}\n\nexport type TCanvasOptions = TOptions<CanvasOptions>;\n\nexport const canvasDefaults: TOptions<CanvasOptions> = {\n  uniformScaling: true,\n  uniScaleKey: 'shiftKey',\n  centeredScaling: false,\n  centeredRotation: false,\n  centeredKey: 'altKey',\n  altActionKey: 'shiftKey',\n\n  selection: true,\n  selectionKey: 'shiftKey',\n  selectionColor: 'rgba(100, 100, 255, 0.3)',\n  selectionDashArray: [],\n  selectionBorderColor: 'rgba(255, 255, 255, 0.3)',\n  selectionLineWidth: 1,\n  selectionFullyContained: false,\n\n  hoverCursor: 'move',\n  moveCursor: 'move',\n  defaultCursor: 'default',\n  freeDrawingCursor: 'crosshair',\n  notAllowedCursor: 'not-allowed',\n\n  perPixelTargetFind: false,\n  targetFindTolerance: 0,\n  skipTargetFind: false,\n\n  stopContextMenu: false,\n  fireRightClick: false,\n  fireMiddleClick: false,\n  enablePointerEvents: false,\n\n  containerClass: 'canvas-container',\n\n  preserveObjectStacking: false,\n};\n","import type { TPointerEvent } from '../EventTypeDefs';\nimport type { ITextBehavior } from '../shapes/IText/ITextBehavior';\nimport { removeFromArray } from '../util/internals/removeFromArray';\nimport type { Canvas } from './Canvas';\n\n/**\n * In charge of synchronizing all interactive text instances of a canvas\n */\nexport class TextEditingManager {\n  private targets: ITextBehavior[] = [];\n  private declare target?: ITextBehavior;\n  private __disposer: VoidFunction;\n\n  constructor(canvas: Canvas) {\n    const cb = () => {\n      const { hiddenTextarea } =\n        (canvas.getActiveObject() as ITextBehavior) || {};\n      hiddenTextarea && hiddenTextarea.focus();\n    };\n    const el = canvas.upperCanvasEl;\n    el.addEventListener('click', cb);\n    this.__disposer = () => el.removeEventListener('click', cb);\n  }\n\n  exitTextEditing() {\n    this.target = undefined;\n    this.targets.forEach((target) => {\n      if (target.isEditing) {\n        target.exitEditing();\n      }\n    });\n  }\n\n  add(target: ITextBehavior) {\n    this.targets.push(target);\n  }\n\n  remove(target: ITextBehavior) {\n    this.unregister(target);\n    removeFromArray(this.targets, target);\n  }\n\n  register(target: ITextBehavior) {\n    this.target = target;\n  }\n\n  unregister(target: ITextBehavior) {\n    if (target === this.target) {\n      this.target = undefined;\n    }\n  }\n\n  onMouseMove(e: TPointerEvent) {\n    this.target?.isEditing && this.target.updateSelectionOnMouseMove(e);\n  }\n\n  clear() {\n    this.targets = [];\n    this.target = undefined;\n  }\n\n  dispose() {\n    this.clear();\n    this.__disposer();\n    // @ts-expect-error disposing\n    delete this.__disposer;\n  }\n}\n","import { classRegistry } from '../ClassRegistry';\nimport { NONE } from '../constants';\nimport type {\n  CanvasEvents,\n  DragEventData,\n  ObjectEvents,\n  TPointerEvent,\n  TPointerEventNames,\n  Transform,\n} from '../EventTypeDefs';\nimport { Point } from '../Point';\nimport type { ActiveSelection } from '../shapes/ActiveSelection';\nimport type { Group } from '../shapes/Group';\nimport type { IText } from '../shapes/IText/IText';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport { isTouchEvent, stopEvent } from '../util/dom_event';\nimport { getDocumentFromElement, getWindowFromElement } from '../util/dom_misc';\nimport { sendPointToPlane } from '../util/misc/planeChange';\nimport { isActiveSelection } from '../util/typeAssertions';\nimport type { CanvasOptions, TCanvasOptions } from './CanvasOptions';\nimport { SelectableCanvas } from './SelectableCanvas';\nimport { TextEditingManager } from './TextEditingManager';\n\nconst addEventOptions = { passive: false } as EventListenerOptions;\n\nconst getEventPoints = (canvas: Canvas, e: TPointerEvent) => {\n  const viewportPoint = canvas.getViewportPoint(e);\n  const scenePoint = canvas.getScenePoint(e);\n  return {\n    viewportPoint,\n    scenePoint,\n    pointer: viewportPoint,\n    absolutePointer: scenePoint,\n  };\n};\n\n// just to be clear, the utils are now deprecated and those are here exactly as minifier helpers\n// because el.addEventListener can't me be minified while a const yes and we use it 47 times in this file.\n// few bytes but why give it away.\nconst addListener = (\n  el: HTMLElement | Document,\n  ...args: Parameters<HTMLElement['addEventListener']>\n) => el.addEventListener(...args);\nconst removeListener = (\n  el: HTMLElement | Document,\n  ...args: Parameters<HTMLElement['removeEventListener']>\n) => el.removeEventListener(...args);\n\nconst syntheticEventConfig = {\n  mouse: {\n    in: 'over',\n    out: 'out',\n    targetIn: 'mouseover',\n    targetOut: 'mouseout',\n    canvasIn: 'mouse:over',\n    canvasOut: 'mouse:out',\n  },\n  drag: {\n    in: 'enter',\n    out: 'leave',\n    targetIn: 'dragenter',\n    targetOut: 'dragleave',\n    canvasIn: 'drag:enter',\n    canvasOut: 'drag:leave',\n  },\n} as const;\n\ntype TSyntheticEventContext = {\n  mouse: { e: TPointerEvent };\n  drag: DragEventData;\n};\n\nexport class Canvas extends SelectableCanvas implements CanvasOptions {\n  /**\n   * Contains the id of the touch event that owns the fabric transform\n   * @type Number\n   * @private\n   */\n  declare mainTouchId?: number;\n\n  declare enablePointerEvents: boolean;\n\n  /**\n   * Holds a reference to a setTimeout timer for event synchronization\n   * @type number\n   * @private\n   */\n  private declare _willAddMouseDown: number;\n\n  /**\n   * Holds a reference to an object on the canvas that is receiving the drag over event.\n   * @type FabricObject\n   * @private\n   */\n  private declare _draggedoverTarget?: FabricObject;\n\n  /**\n   * Holds a reference to an object on the canvas from where the drag operation started\n   * @type FabricObject\n   * @private\n   */\n  private declare _dragSource?: FabricObject;\n\n  /**\n   * Holds a reference to an object on the canvas that is the current drop target\n   * May differ from {@link _draggedoverTarget}\n   * @todo inspect whether {@link _draggedoverTarget} and {@link _dropTarget} should be merged somehow\n   * @type FabricObject\n   * @private\n   */\n  private declare _dropTarget: FabricObject<ObjectEvents> | undefined;\n\n  private _isClick: boolean;\n\n  textEditingManager = new TextEditingManager(this);\n\n  constructor(el?: string | HTMLCanvasElement, options: TCanvasOptions = {}) {\n    super(el, options);\n    // bind event handlers\n    (\n      [\n        '_onMouseDown',\n        '_onTouchStart',\n        '_onMouseMove',\n        '_onMouseUp',\n        '_onTouchEnd',\n        '_onResize',\n        // '_onGesture',\n        // '_onDrag',\n        // '_onShake',\n        // '_onLongPress',\n        // '_onOrientationChange',\n        '_onMouseWheel',\n        '_onMouseOut',\n        '_onMouseEnter',\n        '_onContextMenu',\n        '_onDoubleClick',\n        '_onDragStart',\n        '_onDragEnd',\n        '_onDragProgress',\n        '_onDragOver',\n        '_onDragEnter',\n        '_onDragLeave',\n        '_onDrop',\n      ] as (keyof this)[]\n    ).forEach((eventHandler) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n      this[eventHandler] = (this[eventHandler] as Function).bind(this);\n    });\n    // register event handlers\n    this.addOrRemove(addListener, 'add');\n  }\n\n  /**\n   * return an event prefix pointer or mouse.\n   * @private\n   */\n  private _getEventPrefix() {\n    return this.enablePointerEvents ? 'pointer' : 'mouse';\n  }\n\n  addOrRemove(functor: any, _eventjsFunctor: 'add' | 'remove') {\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    functor(getWindowFromElement(canvasElement), 'resize', this._onResize);\n    functor(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n    functor(\n      canvasElement,\n      `${eventTypePrefix}move`,\n      this._onMouseMove,\n      addEventOptions,\n    );\n    functor(canvasElement, `${eventTypePrefix}out`, this._onMouseOut);\n    functor(canvasElement, `${eventTypePrefix}enter`, this._onMouseEnter);\n    functor(canvasElement, 'wheel', this._onMouseWheel);\n    functor(canvasElement, 'contextmenu', this._onContextMenu);\n    functor(canvasElement, 'dblclick', this._onDoubleClick);\n    functor(canvasElement, 'dragstart', this._onDragStart);\n    functor(canvasElement, 'dragend', this._onDragEnd);\n    functor(canvasElement, 'dragover', this._onDragOver);\n    functor(canvasElement, 'dragenter', this._onDragEnter);\n    functor(canvasElement, 'dragleave', this._onDragLeave);\n    functor(canvasElement, 'drop', this._onDrop);\n    if (!this.enablePointerEvents) {\n      functor(canvasElement, 'touchstart', this._onTouchStart, addEventOptions);\n    }\n    // if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\n    //   eventjs[eventjsFunctor](canvasElement, 'gesture', this._onGesture);\n    //   eventjs[eventjsFunctor](canvasElement, 'drag', this._onDrag);\n    //   eventjs[eventjsFunctor](\n    //     canvasElement,\n    //     'orientation',\n    //     this._onOrientationChange\n    //   );\n    //   eventjs[eventjsFunctor](canvasElement, 'shake', this._onShake);\n    //   eventjs[eventjsFunctor](canvasElement, 'longpress', this._onLongPress);\n    // }\n  }\n\n  /**\n   * Removes all event listeners, used when disposing the instance\n   */\n  removeListeners() {\n    this.addOrRemove(removeListener, 'remove');\n    // if you dispose on a mouseDown, before mouse up, you need to clean document to...\n    const eventTypePrefix = this._getEventPrefix();\n    const doc = getDocumentFromElement(this.upperCanvasEl);\n    removeListener(\n      doc,\n      `${eventTypePrefix}up`,\n      this._onMouseUp as EventListener,\n    );\n    removeListener(\n      doc,\n      'touchend',\n      this._onTouchEnd as EventListener,\n      addEventOptions,\n    );\n    removeListener(\n      doc,\n      `${eventTypePrefix}move`,\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n    removeListener(\n      doc,\n      'touchmove',\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n    clearTimeout(this._willAddMouseDown);\n  }\n\n  /**\n   * @private\n   * @param {Event} [e] Event object fired on wheel event\n   */\n  private _onMouseWheel(e: MouseEvent) {\n    this.__onMouseWheel(e);\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  private _onMouseOut(e: TPointerEvent) {\n    const target = this._hoveredTarget;\n    const shared = {\n      e,\n      ...getEventPoints(this, e),\n    };\n    this.fire('mouse:out', { ...shared, target });\n    this._hoveredTarget = undefined;\n    target && target.fire('mouseout', { ...shared });\n    this._hoveredTargets.forEach((nestedTarget) => {\n      this.fire('mouse:out', { ...shared, target: nestedTarget });\n      nestedTarget && nestedTarget.fire('mouseout', { ...shared });\n    });\n    this._hoveredTargets = [];\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mouseenter\n   */\n  private _onMouseEnter(e: TPointerEvent) {\n    // This find target and consequent 'mouse:over' is used to\n    // clear old instances on hovered target.\n    // calling findTarget has the side effect of killing target.__corner.\n    // as a short term fix we are not firing this if we are currently transforming.\n    // as a long term fix we need to separate the action of finding a target with the\n    // side effects we added to it.\n    if (!this._currentTransform && !this.findTarget(e)) {\n      this.fire('mouse:over', {\n        e,\n        ...getEventPoints(this, e),\n      });\n      this._hoveredTarget = undefined;\n      this._hoveredTargets = [];\n    }\n  }\n\n  /**\n   * supports native like text dragging\n   * @private\n   * @param {DragEvent} e\n   */\n  private _onDragStart(e: DragEvent) {\n    this._isClick = false;\n    const activeObject = this.getActiveObject();\n    if (activeObject && activeObject.onDragStart(e)) {\n      this._dragSource = activeObject;\n      const options = { e, target: activeObject };\n      this.fire('dragstart', options);\n      activeObject.fire('dragstart', options);\n      addListener(\n        this.upperCanvasEl,\n        'drag',\n        this._onDragProgress as EventListener,\n      );\n      return;\n    }\n    stopEvent(e);\n  }\n\n  /**\n   * First we clear top context where the effects are being rendered.\n   * Then we render the effects.\n   * Doing so will render the correct effect for all cases including an overlap between `source` and `target`.\n   * @private\n   */\n  private _renderDragEffects(\n    e: DragEvent,\n    source?: FabricObject,\n    target?: FabricObject,\n  ) {\n    let dirty = false;\n    // clear top context\n    const dropTarget = this._dropTarget;\n    if (dropTarget && dropTarget !== source && dropTarget !== target) {\n      dropTarget.clearContextTop();\n      dirty = true;\n    }\n    source?.clearContextTop();\n    target !== source && target?.clearContextTop();\n    // render effects\n    const ctx = this.contextTop;\n    ctx.save();\n    ctx.transform(...this.viewportTransform);\n    if (source) {\n      ctx.save();\n      source.transform(ctx);\n      source.renderDragSourceEffect(e);\n      ctx.restore();\n      dirty = true;\n    }\n    if (target) {\n      ctx.save();\n      target.transform(ctx);\n      target.renderDropTargetEffect(e);\n      ctx.restore();\n      dirty = true;\n    }\n    ctx.restore();\n    dirty && (this.contextTopDirty = true);\n  }\n\n  /**\n   * supports native like text dragging\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#finishing_a_drag\n   * @private\n   * @param {DragEvent} e\n   */\n  private _onDragEnd(e: DragEvent) {\n    const didDrop = !!e.dataTransfer && e.dataTransfer.dropEffect !== NONE,\n      dropTarget = didDrop ? this._activeObject : undefined,\n      options = {\n        e,\n        target: this._dragSource as FabricObject,\n        subTargets: this.targets,\n        dragSource: this._dragSource as FabricObject,\n        didDrop,\n        dropTarget: dropTarget as FabricObject,\n      };\n    removeListener(\n      this.upperCanvasEl,\n      'drag',\n      this._onDragProgress as EventListener,\n    );\n    this.fire('dragend', options);\n    this._dragSource && this._dragSource.fire('dragend', options);\n    delete this._dragSource;\n    // we need to call mouse up synthetically because the browser won't\n    this._onMouseUp(e);\n  }\n\n  /**\n   * fire `drag` event on canvas and drag source\n   * @private\n   * @param {DragEvent} e\n   */\n  private _onDragProgress(e: DragEvent) {\n    const options = {\n      e,\n      target: this._dragSource as FabricObject | undefined,\n      dragSource: this._dragSource as FabricObject | undefined,\n      dropTarget: this._draggedoverTarget as FabricObject,\n    };\n    this.fire('drag', options);\n    this._dragSource && this._dragSource.fire('drag', options);\n  }\n\n  /**\n   * As opposed to {@link findTarget} we want the top most object to be returned w/o the active object cutting in line.\n   * Override at will\n   */\n  protected findDragTargets(e: DragEvent) {\n    this.targets = [];\n    const target = this._searchPossibleTargets(\n      this._objects,\n      this.getViewportPoint(e),\n    );\n    return {\n      target,\n      targets: [...this.targets],\n    };\n  }\n\n  /**\n   * prevent default to allow drop event to be fired\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#specifying_drop_targets\n   * @private\n   * @param {DragEvent} [e] Event object fired on Event.js shake\n   */\n  private _onDragOver(e: DragEvent) {\n    const eventType = 'dragover';\n    const { target, targets } = this.findDragTargets(e);\n    const dragSource = this._dragSource as FabricObject;\n    const options = {\n      e,\n      target,\n      subTargets: targets,\n      dragSource,\n      canDrop: false,\n      dropTarget: undefined,\n    };\n    let dropTarget;\n    //  fire on canvas\n    this.fire(eventType, options);\n    //  make sure we fire dragenter events before dragover\n    //  if dragleave is needed, object will not fire dragover so we don't need to trouble ourselves with it\n    this._fireEnterLeaveEvents(target, options);\n    if (target) {\n      if (target.canDrop(e)) {\n        dropTarget = target;\n      }\n      target.fire(eventType, options);\n    }\n    //  propagate the event to subtargets\n    for (let i = 0; i < targets.length; i++) {\n      const subTarget = targets[i];\n      // accept event only if previous targets didn't (the accepting target calls `preventDefault` to inform that the event is taken)\n      // TODO: verify if those should loop in inverse order then?\n      // what is the order of subtargets?\n      if (subTarget.canDrop(e)) {\n        dropTarget = subTarget;\n      }\n      subTarget.fire(eventType, options);\n    }\n    //  render drag effects now that relations between source and target is clear\n    this._renderDragEffects(e, dragSource, dropTarget);\n    this._dropTarget = dropTarget;\n  }\n\n  /**\n   * fire `dragleave` on `dragover` targets\n   * @private\n   * @param {Event} [e] Event object fired on Event.js shake\n   */\n  private _onDragEnter(e: DragEvent) {\n    const { target, targets } = this.findDragTargets(e);\n    const options = {\n      e,\n      target,\n      subTargets: targets,\n      dragSource: this._dragSource,\n    };\n    this.fire('dragenter', options);\n    //  fire dragenter on targets\n    this._fireEnterLeaveEvents(target, options);\n  }\n\n  /**\n   * fire `dragleave` on `dragover` targets\n   * @private\n   * @param {Event} [e] Event object fired on Event.js shake\n   */\n  private _onDragLeave(e: DragEvent) {\n    const options = {\n      e,\n      target: this._draggedoverTarget,\n      subTargets: this.targets,\n      dragSource: this._dragSource,\n    };\n    this.fire('dragleave', options);\n\n    //  fire dragleave on targets\n    this._fireEnterLeaveEvents(undefined, options);\n    this._renderDragEffects(e, this._dragSource);\n    this._dropTarget = undefined;\n    //  clear targets\n    this.targets = [];\n    this._hoveredTargets = [];\n  }\n\n  /**\n   * `drop:before` is a an event that allows you to schedule logic\n   * before the `drop` event. Prefer `drop` event always, but if you need\n   * to run some drop-disabling logic on an event, since there is no way\n   * to handle event handlers ordering, use `drop:before`\n   * @private\n   * @param {Event} e\n   */\n  private _onDrop(e: DragEvent) {\n    const { target, targets } = this.findDragTargets(e);\n    const options = this._basicEventHandler('drop:before', {\n      e,\n      target,\n      subTargets: targets,\n      dragSource: this._dragSource,\n      ...getEventPoints(this, e),\n    });\n    //  will be set by the drop target\n    options.didDrop = false;\n    //  will be set by the drop target, used in case options.target refuses the drop\n    options.dropTarget = undefined;\n    //  fire `drop`\n    this._basicEventHandler('drop', options);\n    //  inform canvas of the drop\n    //  we do this because canvas was unaware of what happened at the time the `drop` event was fired on it\n    //  use for side effects\n    this.fire('drop:after', options);\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  private _onContextMenu(e: TPointerEvent): false {\n    const target = this.findTarget(e),\n      subTargets = this.targets || [];\n    const options = this._basicEventHandler('contextmenu:before', {\n      e,\n      target,\n      subTargets,\n    });\n    // TODO: this line is silly because the dev can subscribe to the event and prevent it themselves\n    this.stopContextMenu && stopEvent(e);\n    this._basicEventHandler('contextmenu', options);\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  private _onDoubleClick(e: TPointerEvent) {\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'dblclick');\n    this._resetTransformEventData();\n  }\n\n  /**\n   * Return a the id of an event.\n   * returns either the pointerId or the identifier or 0 for the mouse event\n   * @private\n   * @param {Event} evt Event object\n   */\n  getPointerId(evt: TouchEvent | PointerEvent): number {\n    const changedTouches = (evt as TouchEvent).changedTouches;\n\n    if (changedTouches) {\n      return changedTouches[0] && changedTouches[0].identifier;\n    }\n\n    if (this.enablePointerEvents) {\n      return (evt as PointerEvent).pointerId;\n    }\n\n    return -1;\n  }\n\n  /**\n   * Determines if an event has the id of the event that is considered main\n   * @private\n   * @param {evt} event Event object\n   */\n  _isMainEvent(evt: TPointerEvent): boolean {\n    if ((evt as PointerEvent).isPrimary === true) {\n      return true;\n    }\n    if ((evt as PointerEvent).isPrimary === false) {\n      return false;\n    }\n    if (evt.type === 'touchend' && (evt as TouchEvent).touches.length === 0) {\n      return true;\n    }\n    if ((evt as TouchEvent).changedTouches) {\n      return (\n        (evt as TouchEvent).changedTouches[0].identifier === this.mainTouchId\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onTouchStart(e: TouchEvent) {\n    // we will prevent scrolling if allowTouchScrolling is not enabled and\n    let shouldPreventScrolling = !this.allowTouchScrolling;\n    const currentActiveObject = this._activeObject;\n    if (this.mainTouchId === undefined) {\n      this.mainTouchId = this.getPointerId(e);\n    }\n    this.__onMouseDown(e);\n    // after executing fabric logic for mouse down let's see\n    // if we didn't change target or if we are drawing\n    // we want to prevent scrolling anyway\n    if (\n      this.isDrawingMode ||\n      (currentActiveObject && this._target === currentActiveObject)\n    ) {\n      shouldPreventScrolling = true;\n    }\n    // prevent default, will block scrolling from start\n    shouldPreventScrolling && e.preventDefault();\n    this._resetTransformEventData();\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    const doc = getDocumentFromElement(canvasElement);\n    addListener(\n      doc,\n      'touchend',\n      this._onTouchEnd as EventListener,\n      addEventOptions,\n    );\n    // if we scroll don't register the touch move event\n    shouldPreventScrolling &&\n      addListener(\n        doc,\n        'touchmove',\n        this._onMouseMove as EventListener,\n        addEventOptions,\n      );\n    // Unbind mousedown to prevent double triggers from touch devices\n    removeListener(\n      canvasElement,\n      `${eventTypePrefix}down`,\n      this._onMouseDown as EventListener,\n    );\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onMouseDown(e: TPointerEvent) {\n    this.__onMouseDown(e);\n    this._resetTransformEventData();\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    removeListener(\n      canvasElement,\n      `${eventTypePrefix}move`,\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n    const doc = getDocumentFromElement(canvasElement);\n    addListener(doc, `${eventTypePrefix}up`, this._onMouseUp as EventListener);\n    addListener(\n      doc,\n      `${eventTypePrefix}move`,\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onTouchEnd(e: TouchEvent) {\n    if (e.touches.length > 0) {\n      // if there are still touches stop here\n      return;\n    }\n    this.__onMouseUp(e);\n    this._resetTransformEventData();\n    delete this.mainTouchId;\n    const eventTypePrefix = this._getEventPrefix();\n    const doc = getDocumentFromElement(this.upperCanvasEl);\n    removeListener(\n      doc,\n      'touchend',\n      this._onTouchEnd as EventListener,\n      addEventOptions,\n    );\n    removeListener(\n      doc,\n      'touchmove',\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n    if (this._willAddMouseDown) {\n      clearTimeout(this._willAddMouseDown);\n    }\n    this._willAddMouseDown = setTimeout(() => {\n      // Wait 400ms before rebinding mousedown to prevent double triggers\n      // from touch devices\n      addListener(\n        this.upperCanvasEl,\n        `${eventTypePrefix}down`,\n        this._onMouseDown as EventListener,\n      );\n      this._willAddMouseDown = 0;\n    }, 400) as unknown as number;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mouseup\n   */\n  _onMouseUp(e: TPointerEvent) {\n    this.__onMouseUp(e);\n    this._resetTransformEventData();\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    if (this._isMainEvent(e)) {\n      const doc = getDocumentFromElement(this.upperCanvasEl);\n      removeListener(\n        doc,\n        `${eventTypePrefix}up`,\n        this._onMouseUp as EventListener,\n      );\n      removeListener(\n        doc,\n        `${eventTypePrefix}move`,\n        this._onMouseMove as EventListener,\n        addEventOptions,\n      );\n      addListener(\n        canvasElement,\n        `${eventTypePrefix}move`,\n        this._onMouseMove as EventListener,\n        addEventOptions,\n      );\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousemove\n   */\n  _onMouseMove(e: TPointerEvent) {\n    const activeObject = this.getActiveObject();\n    !this.allowTouchScrolling &&\n      (!activeObject ||\n        // a drag event sequence is started by the active object flagging itself on mousedown / mousedown:before\n        // we must not prevent the event's default behavior in order for the window to start dragging\n        !activeObject.shouldStartDragging(e)) &&\n      e.preventDefault &&\n      e.preventDefault();\n    this.__onMouseMove(e);\n  }\n\n  /**\n   * @private\n   */\n  _onResize() {\n    this.calcOffset();\n    this._resetTransformEventData();\n  }\n\n  /**\n   * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n   * @private\n   * @param {Object} target\n   */\n  _shouldRender(target: FabricObject | undefined) {\n    const activeObject = this.getActiveObject();\n    // if just one of them is available or if they are both but are different objects\n    // this covers: switch of target, from target to no target, selection of target\n    // multiSelection with key and mouse\n    return (\n      !!activeObject !== !!target ||\n      (activeObject && target && activeObject !== target)\n    );\n  }\n\n  /**\n   * Method that defines the actions when mouse is released on canvas.\n   * The method resets the currentTransform parameters, store the image corner\n   * position in the image object and render the canvas on top.\n   * @private\n   * @param {Event} e Event object fired on mouseup\n   */\n  __onMouseUp(e: TPointerEvent) {\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'up:before');\n\n    const transform = this._currentTransform;\n    const isClick = this._isClick;\n    const target = this._target;\n\n    // if right/middle click just fire events and return\n    // target undefined will make the _handleEvent search the target\n    const { button } = e as MouseEvent;\n    if (button) {\n      ((this.fireMiddleClick && button === 1) ||\n        (this.fireRightClick && button === 2)) &&\n        this._handleEvent(e, 'up');\n      this._resetTransformEventData();\n      return;\n    }\n\n    if (this.isDrawingMode && this._isCurrentlyDrawing) {\n      this._onMouseUpInDrawingMode(e);\n      return;\n    }\n\n    if (!this._isMainEvent(e)) {\n      return;\n    }\n    let shouldRender = false;\n    if (transform) {\n      this._finalizeCurrentTransform(e);\n      shouldRender = transform.actionPerformed;\n    }\n    if (!isClick) {\n      const targetWasActive = target === this._activeObject;\n      this.handleSelection(e);\n      if (!shouldRender) {\n        shouldRender =\n          this._shouldRender(target) ||\n          (!targetWasActive && target === this._activeObject);\n      }\n    }\n    let pointer, corner;\n    if (target) {\n      const found = target.findControl(\n        this.getViewportPoint(e),\n        isTouchEvent(e),\n      );\n      const { key, control } = found || {};\n      corner = key;\n      if (\n        target.selectable &&\n        target !== this._activeObject &&\n        target.activeOn === 'up'\n      ) {\n        this.setActiveObject(target, e);\n        shouldRender = true;\n      } else if (control) {\n        const mouseUpHandler = control.getMouseUpHandler(e, target, control);\n        if (mouseUpHandler) {\n          pointer = this.getScenePoint(e);\n          mouseUpHandler.call(control, e, transform!, pointer.x, pointer.y);\n        }\n      }\n      target.isMoving = false;\n    }\n    // if we are ending up a transform on a different control or a new object\n    // fire the original mouse up from the corner that started the transform\n    if (\n      transform &&\n      (transform.target !== target || transform.corner !== corner)\n    ) {\n      const originalControl =\n          transform.target && transform.target.controls[transform.corner],\n        originalMouseUpHandler =\n          originalControl &&\n          originalControl.getMouseUpHandler(\n            e,\n            transform.target,\n            originalControl,\n          );\n      pointer = pointer || this.getScenePoint(e);\n      originalMouseUpHandler &&\n        originalMouseUpHandler.call(\n          originalControl,\n          e,\n          transform,\n          pointer.x,\n          pointer.y,\n        );\n    }\n    this._setCursorFromEvent(e, target);\n    this._handleEvent(e, 'up');\n    this._groupSelector = null;\n    this._currentTransform = null;\n    // reset the target information about which corner is selected\n    target && (target.__corner = undefined);\n    if (shouldRender) {\n      this.requestRenderAll();\n    } else if (!isClick && !(this._activeObject as IText)?.isEditing) {\n      this.renderTop();\n    }\n  }\n\n  _basicEventHandler<T extends keyof (CanvasEvents | ObjectEvents)>(\n    eventType: T,\n    options: (CanvasEvents & ObjectEvents)[T],\n  ) {\n    const { target, subTargets = [] } = options as {\n      target?: FabricObject;\n      subTargets: FabricObject[];\n    };\n    this.fire(eventType, options);\n    target && target.fire(eventType, options);\n    for (let i = 0; i < subTargets.length; i++) {\n      subTargets[i] !== target && subTargets[i].fire(eventType, options);\n    }\n    return options;\n  }\n\n  /**\n   * @private\n   * Handle event firing for target and subtargets\n   * @param {TPointerEvent} e event from mouse\n   * @param {TPointerEventNames} eventType\n   */\n  _handleEvent<T extends TPointerEventNames>(e: TPointerEvent, eventType: T) {\n    const target = this._target,\n      targets = this.targets || [],\n      options: CanvasEvents[`mouse:${T}`] = {\n        e,\n        target,\n        subTargets: targets,\n        ...getEventPoints(this, e),\n        transform: this._currentTransform,\n        ...(eventType === 'up:before' || eventType === 'up'\n          ? {\n              isClick: this._isClick,\n              currentTarget: this.findTarget(e),\n              // set by the preceding `findTarget` call\n              currentSubTargets: this.targets,\n            }\n          : {}),\n      } as CanvasEvents[`mouse:${T}`];\n    this.fire(`mouse:${eventType}`, options);\n    // this may be a little be more complicated of what we want to handle\n    target && target.fire(`mouse${eventType}`, options);\n    for (let i = 0; i < targets.length; i++) {\n      targets[i] !== target && targets[i].fire(`mouse${eventType}`, options);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onMouseDownInDrawingMode(e: TPointerEvent) {\n    this._isCurrentlyDrawing = true;\n    if (this.getActiveObject()) {\n      this.discardActiveObject(e);\n      this.requestRenderAll();\n    }\n    // TODO: this is a scene point so it should be renamed\n    const pointer = this.getScenePoint(e);\n    this.freeDrawingBrush &&\n      this.freeDrawingBrush.onMouseDown(pointer, { e, pointer });\n    this._handleEvent(e, 'down');\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousemove\n   */\n  _onMouseMoveInDrawingMode(e: TPointerEvent) {\n    if (this._isCurrentlyDrawing) {\n      const pointer = this.getScenePoint(e);\n      this.freeDrawingBrush &&\n        this.freeDrawingBrush.onMouseMove(pointer, {\n          e,\n          // this is an absolute pointer, the naming is wrong\n          pointer,\n        });\n    }\n    this.setCursor(this.freeDrawingCursor);\n    this._handleEvent(e, 'move');\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mouseup\n   */\n  _onMouseUpInDrawingMode(e: TPointerEvent) {\n    const pointer = this.getScenePoint(e);\n    if (this.freeDrawingBrush) {\n      this._isCurrentlyDrawing = !!this.freeDrawingBrush.onMouseUp({\n        e: e,\n        // this is an absolute pointer, the naming is wrong\n        pointer,\n      });\n    } else {\n      this._isCurrentlyDrawing = false;\n    }\n    this._handleEvent(e, 'up');\n  }\n\n  /**\n   * Method that defines the actions when mouse is clicked on canvas.\n   * The method inits the currentTransform parameters and renders all the\n   * canvas so the current image can be placed on the top canvas and the rest\n   * in on the container one.\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  __onMouseDown(e: TPointerEvent) {\n    this._isClick = true;\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'down:before');\n\n    let target: FabricObject | undefined = this._target;\n\n    // if right/middle click just fire events\n    const { button } = e as MouseEvent;\n    if (button) {\n      ((this.fireMiddleClick && button === 1) ||\n        (this.fireRightClick && button === 2)) &&\n        this._handleEvent(e, 'down');\n      this._resetTransformEventData();\n      return;\n    }\n\n    if (this.isDrawingMode) {\n      this._onMouseDownInDrawingMode(e);\n      return;\n    }\n\n    if (!this._isMainEvent(e)) {\n      return;\n    }\n\n    // ignore if some object is being transformed at this moment\n    if (this._currentTransform) {\n      return;\n    }\n\n    let shouldRender = this._shouldRender(target);\n    let grouped = false;\n    if (this.handleMultiSelection(e, target)) {\n      // active object might have changed while grouping\n      target = this._activeObject;\n      grouped = true;\n      shouldRender = true;\n    } else if (this._shouldClearSelection(e, target)) {\n      this.discardActiveObject(e);\n    }\n    // we start a group selector rectangle if\n    // selection is enabled\n    // and there is no target, or the following 3 conditions are satisfied:\n    // target is not selectable ( otherwise we selected it )\n    // target is not editing\n    // target is not already selected ( otherwise we drag )\n    if (\n      this.selection &&\n      (!target ||\n        (!target.selectable &&\n          !(target as IText).isEditing &&\n          target !== this._activeObject))\n    ) {\n      const p = this.getScenePoint(e);\n      this._groupSelector = {\n        x: p.x,\n        y: p.y,\n        deltaY: 0,\n        deltaX: 0,\n      };\n    }\n\n    if (target) {\n      const alreadySelected = target === this._activeObject;\n      if (target.selectable && target.activeOn === 'down') {\n        this.setActiveObject(target, e);\n      }\n      const handle = target.findControl(\n        this.getViewportPoint(e),\n        isTouchEvent(e),\n      );\n      if (target === this._activeObject && (handle || !grouped)) {\n        this._setupCurrentTransform(e, target, alreadySelected);\n        const control = handle ? handle.control : undefined,\n          pointer = this.getScenePoint(e),\n          mouseDownHandler =\n            control && control.getMouseDownHandler(e, target, control);\n        mouseDownHandler &&\n          mouseDownHandler.call(\n            control,\n            e,\n            this._currentTransform!,\n            pointer.x,\n            pointer.y,\n          );\n      }\n    }\n    //  we clear `_objectsToRender` in case of a change in order to repopulate it at rendering\n    //  run before firing the `down` event to give the dev a chance to populate it themselves\n    shouldRender && (this._objectsToRender = undefined);\n    this._handleEvent(e, 'down');\n    // we must renderAll so that we update the visuals\n    shouldRender && this.requestRenderAll();\n  }\n\n  /**\n   * reset cache form common information needed during event processing\n   * @private\n   */\n  _resetTransformEventData() {\n    this._target = this._pointer = this._absolutePointer = undefined;\n  }\n\n  /**\n   * Cache common information needed during event processing\n   * @private\n   * @param {Event} e Event object fired on event\n   */\n  _cacheTransformEventData(e: TPointerEvent) {\n    // reset in order to avoid stale caching\n    this._resetTransformEventData();\n    this._pointer = this.getViewportPoint(e);\n    this._absolutePointer = sendPointToPlane(\n      this._pointer,\n      undefined,\n      this.viewportTransform,\n    );\n    this._target = this._currentTransform\n      ? this._currentTransform.target\n      : this.findTarget(e);\n  }\n\n  /**\n   * Method that defines the actions when mouse is hovering the canvas.\n   * The currentTransform parameter will define whether the user is rotating/scaling/translating\n   * an image or neither of them (only hovering). A group selection is also possible and would cancel\n   * all any other type of action.\n   * In case of an image transformation only the top canvas will be rendered.\n   * @private\n   * @param {Event} e Event object fired on mousemove\n   */\n  __onMouseMove(e: TPointerEvent) {\n    this._isClick = false;\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'move:before');\n\n    if (this.isDrawingMode) {\n      this._onMouseMoveInDrawingMode(e);\n      return;\n    }\n\n    if (!this._isMainEvent(e)) {\n      return;\n    }\n\n    const groupSelector = this._groupSelector;\n\n    // We initially clicked in an empty area, so we draw a box for multiple selection\n    if (groupSelector) {\n      const pointer = this.getScenePoint(e);\n\n      groupSelector.deltaX = pointer.x - groupSelector.x;\n      groupSelector.deltaY = pointer.y - groupSelector.y;\n\n      this.renderTop();\n    } else if (!this._currentTransform) {\n      const target = this.findTarget(e);\n      this._setCursorFromEvent(e, target);\n      this._fireOverOutEvents(e, target);\n    } else {\n      this._transformObject(e);\n    }\n    this.textEditingManager.onMouseMove(e);\n    this._handleEvent(e, 'move');\n    this._resetTransformEventData();\n  }\n\n  /**\n   * Manage the mouseout, mouseover events for the fabric object on the canvas\n   * @param {Fabric.Object} target the target where the target from the mousemove event\n   * @param {Event} e Event object fired on mousemove\n   * @private\n   */\n  _fireOverOutEvents(e: TPointerEvent, target?: FabricObject) {\n    const _hoveredTarget = this._hoveredTarget,\n      _hoveredTargets = this._hoveredTargets,\n      targets = this.targets,\n      length = Math.max(_hoveredTargets.length, targets.length);\n\n    this.fireSyntheticInOutEvents('mouse', {\n      e,\n      target,\n      oldTarget: _hoveredTarget,\n      fireCanvas: true,\n    });\n    for (let i = 0; i < length; i++) {\n      this.fireSyntheticInOutEvents('mouse', {\n        e,\n        target: targets[i],\n        oldTarget: _hoveredTargets[i],\n      });\n    }\n    this._hoveredTarget = target;\n    this._hoveredTargets = this.targets.concat();\n  }\n\n  /**\n   * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\n   * @param {Fabric.Object} target the target where the target from the onDrag event\n   * @param {Object} data Event object fired on dragover\n   * @private\n   */\n  _fireEnterLeaveEvents(target: FabricObject | undefined, data: DragEventData) {\n    const draggedoverTarget = this._draggedoverTarget,\n      _hoveredTargets = this._hoveredTargets,\n      targets = this.targets,\n      length = Math.max(_hoveredTargets.length, targets.length);\n\n    this.fireSyntheticInOutEvents('drag', {\n      ...data,\n      target,\n      oldTarget: draggedoverTarget,\n      fireCanvas: true,\n    });\n    for (let i = 0; i < length; i++) {\n      this.fireSyntheticInOutEvents('drag', {\n        ...data,\n        target: targets[i],\n        oldTarget: _hoveredTargets[i],\n      });\n    }\n    this._draggedoverTarget = target;\n  }\n\n  /**\n   * Manage the synthetic in/out events for the fabric objects on the canvas\n   * @param {Fabric.Object} target the target where the target from the supported events\n   * @param {Object} data Event object fired\n   * @param {Object} config configuration for the function to work\n   * @param {String} config.targetName property on the canvas where the old target is stored\n   * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\n   * @param {String} config.evtOut name of the event to fire for out\n   * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\n   * @param {String} config.evtIn name of the event to fire for in\n   * @private\n   */\n  fireSyntheticInOutEvents<T extends keyof TSyntheticEventContext>(\n    type: T,\n    {\n      target,\n      oldTarget,\n      fireCanvas,\n      e,\n      ...data\n    }: TSyntheticEventContext[T] & {\n      target?: FabricObject;\n      oldTarget?: FabricObject;\n      fireCanvas?: boolean;\n    },\n  ) {\n    const { targetIn, targetOut, canvasIn, canvasOut } =\n      syntheticEventConfig[type];\n    const targetChanged = oldTarget !== target;\n\n    if (oldTarget && targetChanged) {\n      const outOpt: CanvasEvents[typeof canvasOut] = {\n        ...data,\n        e,\n        target: oldTarget,\n        nextTarget: target,\n        ...getEventPoints(this, e),\n      };\n      fireCanvas && this.fire(canvasOut, outOpt);\n      oldTarget.fire(targetOut, outOpt);\n    }\n    if (target && targetChanged) {\n      const inOpt: CanvasEvents[typeof canvasIn] = {\n        ...data,\n        e,\n        target,\n        previousTarget: oldTarget,\n        ...getEventPoints(this, e),\n      };\n      fireCanvas && this.fire(canvasIn, inOpt);\n      target.fire(targetIn, inOpt);\n    }\n  }\n\n  /**\n   * Method that defines actions when an Event Mouse Wheel\n   * @param {Event} e Event object fired on mouseup\n   */\n  __onMouseWheel(e: TPointerEvent) {\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'wheel');\n    this._resetTransformEventData();\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event fired on mousemove\n   */\n  _transformObject(e: TPointerEvent) {\n    const scenePoint = this.getScenePoint(e),\n      transform = this._currentTransform!,\n      target = transform.target,\n      //  transform pointer to target's containing coordinate plane\n      //  both pointer and object should agree on every point\n      localPointer = target.group\n        ? sendPointToPlane(\n            scenePoint,\n            undefined,\n            target.group.calcTransformMatrix(),\n          )\n        : scenePoint;\n    transform.shiftKey = e.shiftKey;\n    transform.altKey = !!this.centeredKey && e[this.centeredKey];\n\n    this._performTransformAction(e, transform, localPointer);\n    transform.actionPerformed && this.requestRenderAll();\n  }\n\n  /**\n   * @private\n   */\n  _performTransformAction(\n    e: TPointerEvent,\n    transform: Transform,\n    pointer: Point,\n  ) {\n    const { action, actionHandler, target } = transform;\n\n    const actionPerformed =\n      !!actionHandler && actionHandler(e, transform, pointer.x, pointer.y);\n    actionPerformed && target.setCoords();\n\n    // this object could be created from the function in the control handlers\n    if (action === 'drag' && actionPerformed) {\n      transform.target.isMoving = true;\n      this.setCursor(transform.target.moveCursor || this.moveCursor);\n    }\n    transform.actionPerformed = transform.actionPerformed || actionPerformed;\n  }\n\n  /**\n   * Sets the cursor depending on where the canvas is being hovered.\n   * Note: very buggy in Opera\n   * @param {Event} e Event object\n   * @param {Object} target Object that the mouse is hovering, if so.\n   */\n  _setCursorFromEvent(e: TPointerEvent, target?: FabricObject) {\n    if (!target) {\n      this.setCursor(this.defaultCursor);\n      return;\n    }\n    let hoverCursor = target.hoverCursor || this.hoverCursor;\n    const activeSelection = isActiveSelection(this._activeObject)\n        ? this._activeObject\n        : null,\n      // only show proper corner when group selection is not active\n      corner =\n        (!activeSelection || target.group !== activeSelection) &&\n        // here we call findTargetCorner always with undefined for the touch parameter.\n        // we assume that if you are using a cursor you do not need to interact with\n        // the bigger touch area.\n        target.findControl(this.getViewportPoint(e));\n\n    if (!corner) {\n      if ((target as Group).subTargetCheck) {\n        // hoverCursor should come from top-most subTarget,\n        // so we walk the array backwards\n        this.targets\n          .concat()\n          .reverse()\n          .map((_target) => {\n            hoverCursor = _target.hoverCursor || hoverCursor;\n          });\n      }\n      this.setCursor(hoverCursor);\n    } else {\n      const control = corner.control;\n      this.setCursor(control.cursorStyleHandler(e, control, target));\n    }\n  }\n\n  /**\n   * ## Handles multiple selection\n   * - toggles `target` selection (selects/deselects `target` if it isn't/is selected respectively)\n   * - sets the active object in case it is not set or in case there is a single active object left under active selection.\n   * ---\n   * - If the active object is the active selection we add/remove `target` from it\n   * - If not, add the active object and `target` to the active selection and make it the active object.\n   * @private\n   * @param {TPointerEvent} e Event object\n   * @param {FabricObject} target target of event to select/deselect\n   * @returns true if grouping occurred\n   */\n  protected handleMultiSelection(e: TPointerEvent, target?: FabricObject) {\n    const activeObject = this._activeObject;\n    const isAS = isActiveSelection(activeObject);\n    if (\n      // check if an active object exists on canvas and if the user is pressing the `selectionKey` while canvas supports multi selection.\n      !!activeObject &&\n      this._isSelectionKeyPressed(e) &&\n      this.selection &&\n      // on top of that the user also has to hit a target that is selectable.\n      !!target &&\n      target.selectable &&\n      // group target and active object only if they are different objects\n      // else we try to find a subtarget of `ActiveSelection`\n      (activeObject !== target || isAS) &&\n      //  make sure `activeObject` and `target` aren't ancestors of each other in case `activeObject` is not `ActiveSelection`\n      // if it is then we want to remove `target` from it\n      (isAS ||\n        (!target.isDescendantOf(activeObject) &&\n          !activeObject.isDescendantOf(target))) &&\n      //  target accepts selection\n      !target.onSelect({ e }) &&\n      // make sure we are not on top of a control\n      !activeObject.getActiveControl()\n    ) {\n      if (isAS) {\n        const prevActiveObjects = activeObject.getObjects();\n        if (target === activeObject) {\n          const pointer = this.getViewportPoint(e);\n          target =\n            // first search active objects for a target to remove\n            this.searchPossibleTargets(prevActiveObjects, pointer) ||\n            //  if not found, search under active selection for a target to add\n            // `prevActiveObjects` will be searched but we already know they will not be found\n            this.searchPossibleTargets(this._objects, pointer);\n          // if nothing is found bail out\n          if (!target || !target.selectable) {\n            return false;\n          }\n        }\n        if (target.group === activeObject) {\n          // `target` is part of active selection => remove it\n          activeObject.remove(target);\n          this._hoveredTarget = target;\n          this._hoveredTargets = [...this.targets];\n          // if after removing an object we are left with one only...\n          if (activeObject.size() === 1) {\n            // activate last remaining object\n            // deselecting the active selection will remove the remaining object from it\n            this._setActiveObject(activeObject.item(0), e);\n          }\n        } else {\n          // `target` isn't part of active selection => add it\n          activeObject.multiSelectAdd(target);\n          this._hoveredTarget = activeObject;\n          this._hoveredTargets = [...this.targets];\n        }\n        this._fireSelectionEvents(prevActiveObjects, e);\n      } else {\n        (activeObject as IText).isEditing &&\n          (activeObject as IText).exitEditing();\n        // add the active object and the target to the active selection and set it as the active object\n        const klass =\n          classRegistry.getClass<typeof ActiveSelection>('ActiveSelection');\n        const newActiveSelection = new klass([], {\n          /**\n           * it is crucial to pass the canvas ref before calling {@link ActiveSelection#multiSelectAdd}\n           * since it uses {@link FabricObject#isInFrontOf} which relies on the canvas ref\n           */\n          canvas: this,\n        });\n        newActiveSelection.multiSelectAdd(activeObject, target);\n        this._hoveredTarget = newActiveSelection;\n        // ISSUE 4115: should we consider subTargets here?\n        // this._hoveredTargets = [];\n        // this._hoveredTargets = this.targets.concat();\n        this._setActiveObject(newActiveSelection, e);\n        this._fireSelectionEvents([activeObject], e);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * ## Handles selection\n   * - selects objects that are contained in (and possibly intersecting) the selection bounding box\n   * - sets the active object\n   * ---\n   * runs on mouse up after a mouse move\n   */\n  protected handleSelection(e: TPointerEvent) {\n    if (!this.selection || !this._groupSelector) {\n      return false;\n    }\n    const { x, y, deltaX, deltaY } = this._groupSelector,\n      point1 = new Point(x, y),\n      point2 = point1.add(new Point(deltaX, deltaY)),\n      tl = point1.min(point2),\n      br = point1.max(point2),\n      size = br.subtract(tl);\n\n    const collectedObjects = this.collectObjects(\n      {\n        left: tl.x,\n        top: tl.y,\n        width: size.x,\n        height: size.y,\n      },\n      { includeIntersecting: !this.selectionFullyContained },\n    ) as FabricObject[];\n\n    const objects =\n      // though this method runs only after mouse move the pointer could do a mouse up on the same position as mouse down\n      // should it be handled as is?\n      point1.eq(point2)\n        ? collectedObjects[0]\n          ? [collectedObjects[0]]\n          : []\n        : collectedObjects.length > 1\n          ? collectedObjects\n              .filter((object) => !object.onSelect({ e }))\n              .reverse()\n          : // `setActiveObject` will call `onSelect(collectedObjects[0])` in this case\n            collectedObjects;\n\n    // set active object\n    if (objects.length === 1) {\n      // set as active object\n      this.setActiveObject(objects[0], e);\n    } else if (objects.length > 1) {\n      // add to active selection and make it the active object\n      const klass =\n        classRegistry.getClass<typeof ActiveSelection>('ActiveSelection');\n      this.setActiveObject(new klass(objects, { canvas: this }), e);\n    }\n\n    // cleanup\n    this._groupSelector = null;\n    return true;\n  }\n\n  /**\n   * @override clear {@link textEditingManager}\n   */\n  clear() {\n    this.textEditingManager.clear();\n    super.clear();\n  }\n\n  /**\n   * @override clear {@link textEditingManager}\n   */\n  destroy() {\n    this.removeListeners();\n    this.textEditingManager.dispose();\n    super.destroy();\n  }\n}\n","export const linearDefaultCoords = {\n  x1: 0,\n  y1: 0,\n  x2: 0,\n  y2: 0,\n};\n\nexport const radialDefaultCoords = {\n  ...linearDefaultCoords,\n  r1: 0,\n  r2: 0,\n};\n","/**\n *\n * @param value value to check if NaN\n * @param [valueIfNaN]\n * @returns `fallback` is `value is NaN\n */\nexport const ifNaN = (value: number, valueIfNaN?: number) => {\n  return isNaN(value) && typeof valueIfNaN === 'number' ? valueIfNaN : value;\n};\n","import { ifNaN } from '../util/internals/ifNaN';\nimport { capValue } from '../util/misc/capValue';\n\nconst RE_PERCENT = /^(\\d+\\.\\d+)%|(\\d+)%$/;\n\nexport function isPercent(value: string | null) {\n  return value && RE_PERCENT.test(value);\n}\n\n/**\n *\n * @param value\n * @param valueIfNaN\n * @returns ∈ [0, 1]\n */\nexport function parsePercent(\n  value: string | number | null | undefined,\n  valueIfNaN?: number,\n) {\n  const parsed =\n    typeof value === 'number'\n      ? value\n      : typeof value === 'string'\n        ? parseFloat(value) / (isPercent(value) ? 100 : 1)\n        : NaN;\n  return capValue(0, ifNaN(parsed, valueIfNaN), 1);\n}\n","import { Color } from '../../color/Color';\nimport { parsePercent } from '../../parser/percent';\nimport { ifNaN } from '../../util/internals/ifNaN';\nimport type { ColorStop } from '../typedefs';\n\nconst RE_KEY_VALUE_PAIRS = /\\s*;\\s*/;\nconst RE_KEY_VALUE = /\\s*:\\s*/;\n\nfunction parseColorStop(el: SVGStopElement, multiplier: number) {\n  let colorValue, opacity;\n  const style = el.getAttribute('style');\n  if (style) {\n    const keyValuePairs = style.split(RE_KEY_VALUE_PAIRS);\n\n    if (keyValuePairs[keyValuePairs.length - 1] === '') {\n      keyValuePairs.pop();\n    }\n\n    for (let i = keyValuePairs.length; i--; ) {\n      const [key, value] = keyValuePairs[i]\n        .split(RE_KEY_VALUE)\n        .map((s) => s.trim());\n      if (key === 'stop-color') {\n        colorValue = value;\n      } else if (key === 'stop-opacity') {\n        opacity = value;\n      }\n    }\n  }\n\n  const color = new Color(\n    colorValue || el.getAttribute('stop-color') || 'rgb(0,0,0)',\n  );\n\n  return {\n    offset: parsePercent(el.getAttribute('offset'), 0),\n    color: color.toRgb(),\n    opacity:\n      ifNaN(parseFloat(opacity || el.getAttribute('stop-opacity') || ''), 1) *\n      color.getAlpha() *\n      multiplier,\n  };\n}\n\nexport function parseColorStops(\n  el: SVGGradientElement,\n  opacityAttr: string | null,\n) {\n  const colorStops: ColorStop[] = [],\n    colorStopEls = el.getElementsByTagName('stop'),\n    multiplier = parsePercent(opacityAttr, 1);\n  for (let i = colorStopEls.length; i--; ) {\n    colorStops.push(parseColorStop(colorStopEls[i], multiplier));\n  }\n  return colorStops;\n}\n","import type { GradientType, GradientUnits } from '../typedefs';\n\nexport function parseType(el: SVGGradientElement): GradientType {\n  return el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT'\n    ? 'linear'\n    : 'radial';\n}\n\nexport function parseGradientUnits(el: SVGGradientElement): GradientUnits {\n  return el.getAttribute('gradientUnits') === 'userSpaceOnUse'\n    ? 'pixels'\n    : 'percentage';\n}\n","import { isPercent } from '../../parser/percent';\nimport type { TSize } from '../../typedefs';\nimport type { GradientCoords, GradientType, GradientUnits } from '../typedefs';\nimport { parseGradientUnits, parseType } from './misc';\n\nfunction convertPercentUnitsToValues<\n  T extends GradientType,\n  K extends keyof GradientCoords<T>,\n>(\n  valuesToConvert: Record<K, string | number>,\n  { width, height, gradientUnits }: TSize & { gradientUnits: GradientUnits },\n) {\n  let finalValue;\n  return (Object.keys(valuesToConvert) as K[]).reduce(\n    (acc, prop) => {\n      const propValue = valuesToConvert[prop];\n      if (propValue === 'Infinity') {\n        finalValue = 1;\n      } else if (propValue === '-Infinity') {\n        finalValue = 0;\n      } else {\n        finalValue =\n          typeof propValue === 'string' ? parseFloat(propValue) : propValue;\n        if (typeof propValue === 'string' && isPercent(propValue)) {\n          finalValue *= 0.01;\n          if (gradientUnits === 'pixels') {\n            // then we need to fix those percentages here in svg parsing\n            if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n              finalValue *= width;\n            }\n            if (prop === 'y1' || prop === 'y2') {\n              finalValue *= height;\n            }\n          }\n        }\n      }\n      acc[prop] = finalValue;\n      return acc;\n    },\n    {} as Record<K, number>,\n  );\n}\n\nfunction getValue(el: SVGGradientElement, key: string) {\n  return el.getAttribute(key);\n}\n\nexport function parseLinearCoords(el: SVGGradientElement) {\n  return {\n    x1: getValue(el, 'x1') || 0,\n    y1: getValue(el, 'y1') || 0,\n    x2: getValue(el, 'x2') || '100%',\n    y2: getValue(el, 'y2') || 0,\n  };\n}\n\nexport function parseRadialCoords(el: SVGGradientElement) {\n  return {\n    x1: getValue(el, 'fx') || getValue(el, 'cx') || '50%',\n    y1: getValue(el, 'fy') || getValue(el, 'cy') || '50%',\n    r1: 0,\n    x2: getValue(el, 'cx') || '50%',\n    y2: getValue(el, 'cy') || '50%',\n    r2: getValue(el, 'r') || '50%',\n  };\n}\n\nexport function parseCoords(el: SVGGradientElement, size: TSize) {\n  return convertPercentUnitsToValues(\n    parseType(el) === 'linear' ? parseLinearCoords(el) : parseRadialCoords(el),\n    {\n      ...size,\n      gradientUnits: parseGradientUnits(el),\n    },\n  );\n}\n","import { Color } from '../color/Color';\nimport { iMatrix } from '../constants';\nimport { parseTransformAttribute } from '../parser/parseTransformAttribute';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TMat2D } from '../typedefs';\nimport { uid } from '../util/internals/uid';\nimport { pick } from '../util/misc/pick';\nimport { matrixToSVG } from '../util/misc/svgParsing';\nimport { linearDefaultCoords, radialDefaultCoords } from './constants';\nimport { parseColorStops } from './parser/parseColorStops';\nimport { parseCoords } from './parser/parseCoords';\nimport { parseType, parseGradientUnits } from './parser/misc';\nimport type {\n  ColorStop,\n  GradientCoords,\n  GradientOptions,\n  GradientType,\n  GradientUnits,\n  SVGOptions,\n} from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { isPath } from '../util/typeAssertions';\n\n/**\n * Gradient class\n * @class Gradient\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n */\nexport class Gradient<\n  S,\n  T extends GradientType = S extends GradientType ? S : 'linear',\n> {\n  /**\n   * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n   * @type Number\n   * @default 0\n   */\n  declare offsetX: number;\n\n  /**\n   * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n   * @type Number\n   * @default 0\n   */\n  declare offsetY: number;\n\n  /**\n   * A transform matrix to apply to the gradient before painting.\n   * Imported from svg gradients, is not applied with the current transform in the center.\n   * Before this transform is applied, the origin point is at the top left corner of the object\n   * plus the addition of offsetY and offsetX.\n   * @type Number[]\n   * @default null\n   */\n  declare gradientTransform?: TMat2D;\n\n  /**\n   * coordinates units for coords.\n   * If `pixels`, the number of coords are in the same unit of width / height.\n   * If set as `percentage` the coords are still a number, but 1 means 100% of width\n   * for the X and 100% of the height for the y. It can be bigger than 1 and negative.\n   * allowed values pixels or percentage.\n   * @type GradientUnits\n   * @default 'pixels'\n   */\n  declare gradientUnits: GradientUnits;\n\n  /**\n   * Gradient type linear or radial\n   * @type GradientType\n   * @default 'linear'\n   */\n  declare type: T;\n\n  /**\n   * Defines how the gradient is located in space and spread\n   * @type GradientCoords\n   */\n  declare coords: GradientCoords<T>;\n\n  /**\n   * Defines how many colors a gradient has and how they are located on the axis\n   * defined by coords\n   * @type GradientCoords\n   */\n  declare colorStops: ColorStop[];\n\n  /**\n   * If true, this object will not be exported during the serialization of a canvas\n   * @type boolean\n   */\n  declare excludeFromExport?: boolean;\n\n  /**\n   * ID used for SVG export functionalities\n   * @type number | string\n   */\n  declare readonly id: string | number;\n\n  static type = 'Gradient';\n\n  constructor(options: GradientOptions<T>) {\n    const {\n      type = 'linear' as T,\n      gradientUnits = 'pixels',\n      coords = {},\n      colorStops = [],\n      offsetX = 0,\n      offsetY = 0,\n      gradientTransform,\n      id,\n    } = options || {};\n    Object.assign(this, {\n      type,\n      gradientUnits,\n      coords: {\n        ...(type === 'radial' ? radialDefaultCoords : linearDefaultCoords),\n        ...coords,\n      },\n      colorStops,\n      offsetX,\n      offsetY,\n      gradientTransform,\n      id: id ? `${id}_${uid()}` : uid(),\n    });\n  }\n\n  /**\n   * Adds another colorStop\n   * @param {Record<string, string>} colorStop Object with offset and color\n   * @return {Gradient} thisArg\n   */\n  addColorStop(colorStops: Record<string, string>) {\n    for (const position in colorStops) {\n      const color = new Color(colorStops[position]);\n      this.colorStops.push({\n        offset: parseFloat(position),\n        color: color.toRgb(),\n        opacity: color.getAlpha(),\n      });\n    }\n    return this;\n  }\n\n  /**\n   * Returns object representation of a gradient\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {object}\n   */\n  toObject(propertiesToInclude?: (keyof this | string)[]) {\n    return {\n      ...pick(this, propertiesToInclude as (keyof this)[]),\n      type: this.type,\n      coords: { ...this.coords },\n      colorStops: this.colorStops.map((colorStop) => ({ ...colorStop })),\n      offsetX: this.offsetX,\n      offsetY: this.offsetY,\n      gradientUnits: this.gradientUnits,\n      gradientTransform: this.gradientTransform\n        ? [...this.gradientTransform]\n        : undefined,\n    };\n  }\n\n  /* _TO_SVG_START_ */\n  /**\n   * Returns SVG representation of an gradient\n   * @param {FabricObject} object Object to create a gradient for\n   * @return {String} SVG representation of an gradient (linear/radial)\n   */\n  toSVG(\n    object: FabricObject,\n    {\n      additionalTransform: preTransform,\n    }: { additionalTransform?: string } = {},\n  ) {\n    const markup = [],\n      transform = (\n        this.gradientTransform\n          ? this.gradientTransform.concat()\n          : iMatrix.concat()\n      ) as TMat2D,\n      gradientUnits =\n        this.gradientUnits === 'pixels'\n          ? 'userSpaceOnUse'\n          : 'objectBoundingBox';\n    // colorStops must be sorted ascending, and guarded against deep mutations\n    const colorStops = this.colorStops\n      .map((colorStop) => ({ ...colorStop }))\n      .sort((a, b) => {\n        return a.offset - b.offset;\n      });\n\n    let offsetX = -this.offsetX,\n      offsetY = -this.offsetY;\n    if (gradientUnits === 'objectBoundingBox') {\n      offsetX /= object.width;\n      offsetY /= object.height;\n    } else {\n      offsetX += object.width / 2;\n      offsetY += object.height / 2;\n    }\n    // todo what about polygon/polyline?\n    if (isPath(object) && this.gradientUnits !== 'percentage') {\n      offsetX -= object.pathOffset.x;\n      offsetY -= object.pathOffset.y;\n    }\n    transform[4] -= offsetX;\n    transform[5] -= offsetY;\n\n    const commonAttributes = [\n      `id=\"SVGID_${this.id}\"`,\n      `gradientUnits=\"${gradientUnits}\"`,\n      `gradientTransform=\"${\n        preTransform ? preTransform + ' ' : ''\n      }${matrixToSVG(transform)}\"`,\n      '',\n    ].join(' ');\n\n    if (this.type === 'linear') {\n      const { x1, y1, x2, y2 } = this.coords;\n      markup.push(\n        '<linearGradient ',\n        commonAttributes,\n        ' x1=\"',\n        x1,\n        '\" y1=\"',\n        y1,\n        '\" x2=\"',\n        x2,\n        '\" y2=\"',\n        y2,\n        '\">\\n',\n      );\n    } else if (this.type === 'radial') {\n      const { x1, y1, x2, y2, r1, r2 } = this\n        .coords as GradientCoords<'radial'>;\n      const needsSwap = r1 > r2;\n      // svg radial gradient has just 1 radius. the biggest.\n      markup.push(\n        '<radialGradient ',\n        commonAttributes,\n        ' cx=\"',\n        needsSwap ? x1 : x2,\n        '\" cy=\"',\n        needsSwap ? y1 : y2,\n        '\" r=\"',\n        needsSwap ? r1 : r2,\n        '\" fx=\"',\n        needsSwap ? x2 : x1,\n        '\" fy=\"',\n        needsSwap ? y2 : y1,\n        '\">\\n',\n      );\n      if (needsSwap) {\n        // svg goes from internal to external radius. if radius are inverted, swap color stops.\n        colorStops.reverse(); //  mutates array\n        colorStops.forEach((colorStop) => {\n          colorStop.offset = 1 - colorStop.offset;\n        });\n      }\n      const minRadius = Math.min(r1, r2);\n      if (minRadius > 0) {\n        // i have to shift all colorStops and add new one in 0.\n        const maxRadius = Math.max(r1, r2),\n          percentageShift = minRadius / maxRadius;\n        colorStops.forEach((colorStop) => {\n          colorStop.offset += percentageShift * (1 - colorStop.offset);\n        });\n      }\n    }\n\n    colorStops.forEach(({ color, offset, opacity }) => {\n      markup.push(\n        '<stop ',\n        'offset=\"',\n        offset * 100 + '%',\n        '\" style=\"stop-color:',\n        color,\n        typeof opacity !== 'undefined' ? ';stop-opacity: ' + opacity : ';',\n        '\"/>\\n',\n      );\n    });\n\n    markup.push(\n      this.type === 'linear' ? '</linearGradient>' : '</radialGradient>',\n      '\\n',\n    );\n\n    return markup.join('');\n  }\n  /* _TO_SVG_END_ */\n\n  /**\n   * Returns an instance of CanvasGradient\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @return {CanvasGradient}\n   */\n  toLive(ctx: CanvasRenderingContext2D): CanvasGradient {\n    const { x1, y1, x2, y2, r1, r2 } = this.coords as GradientCoords<'radial'>;\n    const gradient =\n      this.type === 'linear'\n        ? ctx.createLinearGradient(x1, y1, x2, y2)\n        : ctx.createRadialGradient(x1, y1, r1, x2, y2, r2);\n\n    this.colorStops.forEach(({ color, opacity, offset }) => {\n      gradient.addColorStop(\n        offset,\n        typeof opacity !== 'undefined'\n          ? new Color(color).setAlpha(opacity).toRgba()\n          : color,\n      );\n    });\n\n    return gradient;\n  }\n\n  static async fromObject(\n    options: GradientOptions<'linear'>,\n  ): Promise<Gradient<'radial'>>;\n  static async fromObject(\n    options: GradientOptions<'radial'>,\n  ): Promise<Gradient<'radial'>>;\n  static async fromObject(\n    options: GradientOptions<'linear'> | GradientOptions<'radial'>,\n  ) {\n    const { colorStops, gradientTransform } = options;\n    return new this({\n      ...options,\n      colorStops: colorStops\n        ? colorStops.map((colorStop) => ({ ...colorStop }))\n        : undefined,\n      gradientTransform: gradientTransform ? [...gradientTransform] : undefined,\n    });\n  }\n\n  /* _FROM_SVG_START_ */\n  /**\n   * Returns {@link Gradient} instance from an SVG element\n   * @static\n   * @memberOf Gradient\n   * @param {SVGGradientElement} el SVG gradient element\n   * @param {FabricObject} instance\n   * @param {String} opacity A fill-opacity or stroke-opacity attribute to multiply to each stop's opacity.\n   * @param {SVGOptions} svgOptions an object containing the size of the SVG in order to parse correctly gradients\n   * that uses gradientUnits as 'userSpaceOnUse' and percentages.\n   * @return {Gradient} Gradient instance\n   * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n   * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n   *\n   *  @example\n   *\n   *  <linearGradient id=\"linearGrad1\">\n   *    <stop offset=\"0%\" stop-color=\"white\"/>\n   *    <stop offset=\"100%\" stop-color=\"black\"/>\n   *  </linearGradient>\n   *\n   *  OR\n   *\n   *  <linearGradient id=\"linearGrad2\">\n   *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n   *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n   *  </linearGradient>\n   *\n   *  OR\n   *\n   *  <radialGradient id=\"radialGrad1\">\n   *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n   *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n   *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n   *  </radialGradient>\n   *\n   *  OR\n   *\n   *  <radialGradient id=\"radialGrad2\">\n   *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n   *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n   *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n   *  </radialGradient>\n   *\n   */\n  static fromElement(\n    el: SVGGradientElement,\n    instance: FabricObject,\n    svgOptions: SVGOptions,\n  ): Gradient<GradientType> {\n    const gradientUnits = parseGradientUnits(el);\n    const center = instance._findCenterFromElement();\n    return new this({\n      id: el.getAttribute('id') || undefined,\n      type: parseType(el),\n      coords: parseCoords(el, {\n        width: svgOptions.viewBoxWidth || svgOptions.width,\n        height: svgOptions.viewBoxHeight || svgOptions.height,\n      }),\n      colorStops: parseColorStops(el, svgOptions.opacity),\n      gradientUnits,\n      gradientTransform: parseTransformAttribute(\n        el.getAttribute('gradientTransform') || '',\n      ),\n      ...(gradientUnits === 'pixels'\n        ? {\n            offsetX: instance.width / 2 - center.x,\n            offsetY: instance.height / 2 - center.y,\n          }\n        : {\n            offsetX: 0,\n            offsetY: 0,\n          }),\n    });\n  }\n  /* _FROM_SVG_END_ */\n}\n\nclassRegistry.setClass(Gradient, 'gradient');\nclassRegistry.setClass(Gradient, 'linear');\nclassRegistry.setClass(Gradient, 'radial');\n","import { config } from '../config';\nimport type { Abortable, TCrossOrigin, TMat2D, TSize } from '../typedefs';\nimport { ifNaN } from '../util/internals/ifNaN';\nimport { uid } from '../util/internals/uid';\nimport { loadImage } from '../util/misc/objectEnlive';\nimport { pick } from '../util/misc/pick';\nimport { toFixed } from '../util/misc/toFixed';\nimport { classRegistry } from '../ClassRegistry';\nimport type {\n  PatternRepeat,\n  PatternOptions,\n  SerializedPatternOptions,\n} from './types';\nimport { log } from '../util/internals/console';\n\n/**\n * @see {@link http://fabricjs.com/patterns demo}\n * @see {@link http://fabricjs.com/dynamic-patterns demo}\n */\nexport class Pattern {\n  static type = 'Pattern';\n\n  /**\n   * Legacy identifier of the class. Prefer using this.constructor.type 'Pattern'\n   * or utils like isPattern, or instance of to indentify a pattern in your code.\n   * Will be removed in future versiones\n   * @TODO add sustainable warning message\n   * @type string\n   * @deprecated\n   */\n  get type() {\n    return 'pattern';\n  }\n\n  set type(value) {\n    log('warn', 'Setting type has no effect', value);\n  }\n\n  /**\n   * @type PatternRepeat\n   * @defaults\n   */\n  repeat: PatternRepeat = 'repeat';\n\n  /**\n   * Pattern horizontal offset from object's left/top corner\n   * @type Number\n   * @default\n   */\n  offsetX = 0;\n\n  /**\n   * Pattern vertical offset from object's left/top corner\n   * @type Number\n   * @default\n   */\n  offsetY = 0;\n\n  /**\n   * @type TCrossOrigin\n   * @default\n   */\n  crossOrigin: TCrossOrigin = '';\n\n  /**\n   * transform matrix to change the pattern, imported from svgs.\n   * @todo verify if using the identity matrix as default makes the rest of the code more easy\n   * @type Array\n   * @default\n   */\n  declare patternTransform?: TMat2D;\n\n  /**\n   * The actual pixel source of the pattern\n   */\n  declare source: CanvasImageSource;\n\n  /**\n   * If true, this object will not be exported during the serialization of a canvas\n   * @type boolean\n   */\n  declare excludeFromExport?: boolean;\n\n  /**\n   * ID used for SVG export functionalities\n   * @type number\n   */\n  declare readonly id: number;\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   * @param {option.source} [source] the pattern source, eventually empty or a drawable\n   */\n  constructor(options: PatternOptions) {\n    this.id = uid();\n    Object.assign(this, options);\n  }\n\n  /**\n   * @returns true if {@link source} is an <img> element\n   */\n  isImageSource(): this is { source: HTMLImageElement } {\n    return (\n      !!this.source && typeof (this.source as HTMLImageElement).src === 'string'\n    );\n  }\n\n  /**\n   * @returns true if {@link source} is a <canvas> element\n   */\n  isCanvasSource(): this is { source: HTMLCanvasElement } {\n    return !!this.source && !!(this.source as HTMLCanvasElement).toDataURL;\n  }\n\n  sourceToString(): string {\n    return this.isImageSource()\n      ? this.source.src\n      : this.isCanvasSource()\n        ? this.source.toDataURL()\n        : '';\n  }\n\n  /**\n   * Returns an instance of CanvasPattern\n   * @param {CanvasRenderingContext2D} ctx Context to create pattern\n   * @return {CanvasPattern}\n   */\n  toLive(ctx: CanvasRenderingContext2D): CanvasPattern | null {\n    if (\n      // if the image failed to load, return, and allow rest to continue loading\n      !this.source ||\n      // if an image\n      (this.isImageSource() &&\n        (!this.source.complete ||\n          this.source.naturalWidth === 0 ||\n          this.source.naturalHeight === 0))\n    ) {\n      return null;\n    }\n\n    return ctx.createPattern(this.source, this.repeat)!;\n  }\n\n  /**\n   * Returns object representation of a pattern\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {object} Object representation of a pattern instance\n   */\n  toObject(propertiesToInclude: string[] = []): Record<string, any> {\n    const { repeat, crossOrigin } = this;\n    return {\n      ...pick(this, propertiesToInclude as (keyof this)[]),\n      type: 'pattern',\n      source: this.sourceToString(),\n      repeat,\n      crossOrigin,\n      offsetX: toFixed(this.offsetX, config.NUM_FRACTION_DIGITS),\n      offsetY: toFixed(this.offsetY, config.NUM_FRACTION_DIGITS),\n      patternTransform: this.patternTransform\n        ? [...this.patternTransform]\n        : null,\n    };\n  }\n\n  /* _TO_SVG_START_ */\n  /**\n   * Returns SVG representation of a pattern\n   */\n  toSVG({ width, height }: TSize): string {\n    const { source: patternSource, repeat, id } = this,\n      patternOffsetX = ifNaN(this.offsetX / width, 0),\n      patternOffsetY = ifNaN(this.offsetY / height, 0),\n      patternWidth =\n        repeat === 'repeat-y' || repeat === 'no-repeat'\n          ? 1 + Math.abs(patternOffsetX || 0)\n          : ifNaN(\n              ((patternSource as HTMLImageElement).width as number) / width,\n              0,\n            ),\n      patternHeight =\n        repeat === 'repeat-x' || repeat === 'no-repeat'\n          ? 1 + Math.abs(patternOffsetY || 0)\n          : ifNaN(\n              ((patternSource as HTMLImageElement).height as number) / height,\n              0,\n            );\n\n    return [\n      `<pattern id=\"SVGID_${id}\" x=\"${patternOffsetX}\" y=\"${patternOffsetY}\" width=\"${patternWidth}\" height=\"${patternHeight}\">`,\n      `<image x=\"0\" y=\"0\" width=\"${\n        (patternSource as HTMLImageElement).width\n      }\" height=\"${\n        (patternSource as HTMLImageElement).height\n      }\" xlink:href=\"${this.sourceToString()}\"></image>`,\n      `</pattern>`,\n      '',\n    ].join('\\n');\n  }\n  /* _TO_SVG_END_ */\n\n  static async fromObject(\n    {\n      type,\n      source,\n      patternTransform,\n      ...otherOptions\n    }: SerializedPatternOptions,\n    options?: Abortable,\n  ): Promise<Pattern> {\n    const img = await loadImage(source, {\n      ...options,\n      crossOrigin: otherOptions.crossOrigin,\n    });\n    return new this({\n      ...otherOptions,\n      patternTransform:\n        patternTransform && (patternTransform.slice(0) as TMat2D),\n      source: img,\n    });\n  }\n}\n\nclassRegistry.setClass(Pattern);\n// kept for compatibility reason\nclassRegistry.setClass(Pattern, 'pattern');\n","import { Color } from '../color/Color';\nimport type { Point } from '../Point';\nimport type { Shadow } from '../Shadow';\nimport type { Canvas } from '../canvas/Canvas';\nimport type { TBrushEventData } from './typedefs';\n\n/**\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nexport abstract class BaseBrush {\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color = 'rgb(0, 0, 0)';\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width = 1;\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type Shadow\n   * @default\n   */\n  shadow: Shadow | null = null;\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: CanvasLineCap = 'round';\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: CanvasLineJoin = 'round';\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit = 10;\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: number[] | null = null;\n\n  /**\n   * When `true`, the free drawing is limited to the whiteboard size. Default to false.\n   * @type Boolean\n   * @default false\n   */\n\n  limitedToCanvasSize = false;\n\n  /**\n   * @todo add type\n   */\n  declare canvas: Canvas;\n\n  constructor(canvas: Canvas) {\n    this.canvas = canvas;\n  }\n\n  abstract _render(): void;\n  abstract onMouseDown(pointer: Point, ev: TBrushEventData): void;\n  abstract onMouseMove(pointer: Point, ev: TBrushEventData): void;\n  /**\n   * @returns true if brush should continue blocking interaction\n   */\n  abstract onMouseUp(ev: TBrushEventData): boolean | void;\n\n  /**\n   * Sets brush styles\n   * @private\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  _setBrushStyles(ctx: CanvasRenderingContext2D) {\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n    ctx.setLineDash(this.strokeDashArray || []);\n  }\n\n  /**\n   * Sets the transformation on given context\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   * @private\n   */\n  protected _saveAndTransform(ctx: CanvasRenderingContext2D) {\n    const v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  }\n\n  protected needsFullRender() {\n    const color = new Color(this.color);\n    return color.getAlpha() < 1 || !!this.shadow;\n  }\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  protected _setShadow() {\n    if (!this.shadow || !this.canvas) {\n      return;\n    }\n\n    const canvas = this.canvas,\n      shadow = this.shadow,\n      ctx = canvas.contextTop,\n      zoom = canvas.getZoom() * canvas.getRetinaScaling();\n\n    ctx.shadowColor = shadow.color;\n    ctx.shadowBlur = shadow.blur * zoom;\n    ctx.shadowOffsetX = shadow.offsetX * zoom;\n    ctx.shadowOffsetY = shadow.offsetY * zoom;\n  }\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  protected _resetShadow() {\n    const ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n\n  /**\n   * Check is pointer is outside canvas boundaries\n   * @param {Object} pointer\n   * @private\n   */\n  protected _isOutSideCanvas(pointer: Point) {\n    return (\n      pointer.x < 0 ||\n      pointer.x > this.canvas.getWidth() ||\n      pointer.y < 0 ||\n      pointer.y > this.canvas.getHeight()\n    );\n  }\n}\n","import { config } from '../config';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { XY } from '../Point';\nimport { Point } from '../Point';\nimport { makeBoundingBoxFromPoints } from '../util/misc/boundingBoxFromPoints';\nimport { toFixed } from '../util/misc/toFixed';\nimport {\n  getBoundsOfCurve,\n  joinPath,\n  makePathSimpler,\n  parsePath,\n} from '../util/path';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type {\n  TComplexPathData,\n  TPathSegmentInfo,\n  TSimplePathData,\n} from '../util/path/typedefs';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport type {\n  TBBox,\n  TClassProperties,\n  TSVGReviver,\n  TOptions,\n} from '../typedefs';\nimport { CENTER, LEFT, TOP } from '../constants';\nimport type { CSSRules } from '../parser/typedefs';\n\ninterface UniquePathProps {\n  sourcePath?: string;\n  path?: TSimplePathData;\n}\n\nexport interface SerializedPathProps\n  extends SerializedObjectProps,\n    UniquePathProps {}\n\nexport interface PathProps extends FabricObjectProps, UniquePathProps {}\n\nexport interface IPathBBox extends TBBox {\n  left: number;\n  top: number;\n  pathOffset: Point;\n}\n\nexport class Path<\n  Props extends TOptions<PathProps> = Partial<PathProps>,\n  SProps extends SerializedPathProps = SerializedPathProps,\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends FabricObject<Props, SProps, EventSpec> {\n  /**\n   * Array of path points\n   * @type Array\n   * @default\n   */\n  declare path: TSimplePathData;\n\n  declare pathOffset: Point;\n\n  declare sourcePath?: string;\n\n  declare segmentsInfo?: TPathSegmentInfo[];\n\n  static type = 'Path';\n\n  static cacheProperties = [...cacheProperties, 'path', 'fillRule'];\n\n  /**\n   * Constructor\n   * @param {TComplexPathData} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n   * @param {Partial<PathProps>} [options] Options object\n   * @return {Path} thisArg\n   */\n  constructor(\n    path: TComplexPathData | string,\n    // todo: evaluate this spread here\n    { path: _, left, top, ...options }: Partial<Props> = {},\n  ) {\n    super();\n    Object.assign(this, Path.ownDefaults);\n    this.setOptions(options);\n    this._setPath(path || [], true);\n    typeof left === 'number' && this.set(LEFT, left);\n    typeof top === 'number' && this.set(TOP, top);\n  }\n\n  /**\n   * @private\n   * @param {TComplexPathData | string} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n   * @param {boolean} [adjustPosition] pass true to reposition the object according to the bounding box\n   * @returns {Point} top left position of the bounding box, useful for complementary positioning\n   */\n  _setPath(path: TComplexPathData | string, adjustPosition?: boolean) {\n    this.path = makePathSimpler(Array.isArray(path) ? path : parsePath(path));\n    this.setBoundingBox(adjustPosition);\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates, by look at the polyline/polygon points.\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement(): Point {\n    const bbox = this._calcBoundsFromPath();\n    return new Point(bbox.left + bbox.width / 2, bbox.top + bbox.height / 2);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render path on\n   */\n  _renderPathCommands(ctx: CanvasRenderingContext2D) {\n    const l = -this.pathOffset.x,\n      t = -this.pathOffset.y;\n\n    ctx.beginPath();\n\n    for (const command of this.path) {\n      switch (\n        command[0] // first letter\n      ) {\n        case 'L': // lineto, absolute\n          ctx.lineTo(command[1] + l, command[2] + t);\n          break;\n\n        case 'M': // moveTo, absolute\n          ctx.moveTo(command[1] + l, command[2] + t);\n          break;\n\n        case 'C': // bezierCurveTo, absolute\n          ctx.bezierCurveTo(\n            command[1] + l,\n            command[2] + t,\n            command[3] + l,\n            command[4] + t,\n            command[5] + l,\n            command[6] + t,\n          );\n          break;\n\n        case 'Q': // quadraticCurveTo, absolute\n          ctx.quadraticCurveTo(\n            command[1] + l,\n            command[2] + t,\n            command[3] + l,\n            command[4] + t,\n          );\n          break;\n\n        case 'Z':\n          ctx.closePath();\n          break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render path on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    this._renderPathCommands(ctx);\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns string representation of an instance\n   * @return {string} string representation of an instance\n   */\n  toString() {\n    return `#<Path (${this.complexity()}): { \"top\": ${this.top}, \"left\": ${\n      this.left\n    } }>`;\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject(propertiesToInclude),\n      path: this.path.map((pathCmd) => pathCmd.slice()),\n    };\n  }\n\n  /**\n   * Returns dataless object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toDatalessObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    const o = this.toObject<T, K>(propertiesToInclude);\n    if (this.sourcePath) {\n      delete o.path;\n      o.sourcePath = this.sourcePath;\n    }\n    return o;\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const path = joinPath(this.path, config.NUM_FRACTION_DIGITS);\n    return [\n      '<path ',\n      'COMMON_PARTS',\n      `d=\"${path}\" stroke-linecap=\"round\" />\\n`,\n    ];\n  }\n\n  /**\n   * @private\n   * @return the path command's translate transform attribute\n   */\n  _getOffsetTransform() {\n    const digits = config.NUM_FRACTION_DIGITS;\n    return ` translate(${toFixed(-this.pathOffset.x, digits)}, ${toFixed(\n      -this.pathOffset.y,\n      digits,\n    )})`;\n  }\n\n  /**\n   * Returns svg clipPath representation of an instance\n   * @param {Function} [reviver] Method for further parsing of svg representation.\n   * @return {string} svg representation of an instance\n   */\n  toClipPathSVG(reviver?: TSVGReviver): string {\n    const additionalTransform = this._getOffsetTransform();\n    return (\n      '\\t' +\n      this._createBaseClipPathSVGMarkup(this._toSVG(), {\n        reviver,\n        additionalTransform: additionalTransform,\n      })\n    );\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @param {Function} [reviver] Method for further parsing of svg representation.\n   * @return {string} svg representation of an instance\n   */\n  toSVG(reviver?: TSVGReviver): string {\n    const additionalTransform = this._getOffsetTransform();\n    return this._createBaseSVGMarkup(this._toSVG(), {\n      reviver,\n      additionalTransform: additionalTransform,\n    });\n  }\n\n  /**\n   * Returns number representation of an instance complexity\n   * @return {number} complexity of this instance\n   */\n  complexity() {\n    return this.path.length;\n  }\n\n  setDimensions() {\n    this.setBoundingBox();\n  }\n\n  setBoundingBox(adjustPosition?: boolean) {\n    const { width, height, pathOffset } = this._calcDimensions();\n    this.set({ width, height, pathOffset });\n    // using pathOffset because it match the use case.\n    // if pathOffset change here we need to use left + width/2 , top + height/2\n    adjustPosition && this.setPositionByOrigin(pathOffset, CENTER, CENTER);\n  }\n\n  _calcBoundsFromPath(): TBBox {\n    const bounds: XY[] = [];\n    let subpathStartX = 0,\n      subpathStartY = 0,\n      x = 0, // current x\n      y = 0; // current y\n\n    for (const command of this.path) {\n      // current instruction\n      switch (\n        command[0] // first letter\n      ) {\n        case 'L': // lineto, absolute\n          x = command[1];\n          y = command[2];\n          bounds.push({ x: subpathStartX, y: subpathStartY }, { x, y });\n          break;\n\n        case 'M': // moveTo, absolute\n          x = command[1];\n          y = command[2];\n          subpathStartX = x;\n          subpathStartY = y;\n          break;\n\n        case 'C': // bezierCurveTo, absolute\n          bounds.push(\n            ...getBoundsOfCurve(\n              x,\n              y,\n              command[1],\n              command[2],\n              command[3],\n              command[4],\n              command[5],\n              command[6],\n            ),\n          );\n          x = command[5];\n          y = command[6];\n          break;\n\n        case 'Q': // quadraticCurveTo, absolute\n          bounds.push(\n            ...getBoundsOfCurve(\n              x,\n              y,\n              command[1],\n              command[2],\n              command[1],\n              command[2],\n              command[3],\n              command[4],\n            ),\n          );\n          x = command[3];\n          y = command[4];\n          break;\n\n        case 'Z':\n          x = subpathStartX;\n          y = subpathStartY;\n          break;\n      }\n    }\n    return makeBoundingBoxFromPoints(bounds);\n  }\n\n  /**\n   * @private\n   */\n  _calcDimensions(): IPathBBox {\n    const bbox = this._calcBoundsFromPath();\n\n    return {\n      ...bbox,\n      pathOffset: new Point(\n        bbox.left + bbox.width / 2,\n        bbox.top + bbox.height / 2,\n      ),\n    };\n  }\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `Path.fromElement`)\n   * @static\n   * @memberOf Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  static ATTRIBUTE_NAMES = [...SHARED_ATTRIBUTES, 'd'];\n\n  /**\n   * Creates an instance of Path from an object\n   * @static\n   * @memberOf Path\n   * @param {Object} object\n   * @returns {Promise<Path>}\n   */\n  static fromObject<T extends TOptions<SerializedPathProps>>(object: T) {\n    return this._fromObject<Path>(object, {\n      extraParam: 'path',\n    });\n  }\n\n  /**\n   * Creates an instance of Path from an SVG <path> element\n   * @static\n   * @memberOf Path\n   * @param {HTMLElement} element to parse\n   * @param {Partial<PathProps>} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Partial<PathProps>,\n    cssRules?: CSSRules,\n  ) {\n    const { d, ...parsedAttributes } = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules,\n    );\n    return new this(d, {\n      ...parsedAttributes,\n      ...options,\n      // we pass undefined to instruct the constructor to position the object using the bbox\n      left: undefined,\n      top: undefined,\n    });\n  }\n}\n\nclassRegistry.setClass(Path);\nclassRegistry.setSVGClass(Path);\n\n/* _FROM_SVG_START_ */\n","import type { ModifierKey, TEvent } from '../EventTypeDefs';\nimport type { Point } from '../Point';\nimport { Shadow } from '../Shadow';\nimport { Path } from '../shapes/Path';\nimport { getSmoothPathFromPoints, joinPath } from '../util/path';\nimport type { Canvas } from '../canvas/Canvas';\nimport { BaseBrush } from './BaseBrush';\nimport type { TSimplePathData } from '../util/path/typedefs';\n\n/**\n * @private\n * @param {TSimplePathData} pathData SVG path commands\n * @returns {boolean}\n */\nfunction isEmptySVGPath(pathData: TSimplePathData): boolean {\n  return joinPath(pathData) === 'M 0 0 Q 0 0 0 0 L 0 0';\n}\n\nexport class PencilBrush extends BaseBrush {\n  /**\n   * Discard points that are less than `decimate` pixel distant from each other\n   * @type Number\n   * @default 0.4\n   */\n  decimate = 0.4;\n\n  /**\n   * Draws a straight line between last recorded point to current pointer\n   * Used for `shift` functionality\n   *\n   * @type boolean\n   * @default false\n   */\n  drawStraightLine = false;\n\n  /**\n   * The event modifier key that makes the brush draw a straight line.\n   * If `null` or 'none' or any other string that is not a modifier key the feature is disabled.\n   * @type {ModifierKey | undefined | null}\n   */\n  straightLineKey: ModifierKey | undefined | null = 'shiftKey';\n\n  private declare _points: Point[];\n  private declare _hasStraightLine: boolean;\n  private declare oldEnd?: Point;\n\n  constructor(canvas: Canvas) {\n    super(canvas);\n    this._points = [];\n    this._hasStraightLine = false;\n  }\n\n  needsFullRender() {\n    return super.needsFullRender() || this._hasStraightLine;\n  }\n\n  static drawSegment(ctx: CanvasRenderingContext2D, p1: Point, p2: Point) {\n    const midPoint = p1.midPointFrom(p2);\n    ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n    return midPoint;\n  }\n\n  /**\n   * Invoked on mouse down\n   * @param {Point} pointer\n   */\n  onMouseDown(pointer: Point, { e }: TEvent) {\n    if (!this.canvas._isMainEvent(e)) {\n      return;\n    }\n    this.drawStraightLine = !!this.straightLineKey && e[this.straightLineKey];\n    this._prepareForDrawing(pointer);\n    // capture coordinates immediately\n    // this allows to draw dots (when movement never occurs)\n    this._addPoint(pointer);\n    this._render();\n  }\n\n  /**\n   * Invoked on mouse move\n   * @param {Point} pointer\n   */\n  onMouseMove(pointer: Point, { e }: TEvent) {\n    if (!this.canvas._isMainEvent(e)) {\n      return;\n    }\n    this.drawStraightLine = !!this.straightLineKey && e[this.straightLineKey];\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\n      return;\n    }\n    if (this._addPoint(pointer) && this._points.length > 1) {\n      if (this.needsFullRender()) {\n        // redraw curve\n        // clear top canvas\n        this.canvas.clearContext(this.canvas.contextTop);\n        this._render();\n      } else {\n        const points = this._points,\n          length = points.length,\n          ctx = this.canvas.contextTop;\n        // draw the curve update\n        this._saveAndTransform(ctx);\n        if (this.oldEnd) {\n          ctx.beginPath();\n          ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n        }\n        this.oldEnd = PencilBrush.drawSegment(\n          ctx,\n          points[length - 2],\n          points[length - 1],\n        );\n        ctx.stroke();\n        ctx.restore();\n      }\n    }\n  }\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp({ e }: TEvent) {\n    if (!this.canvas._isMainEvent(e)) {\n      return true;\n    }\n    this.drawStraightLine = false;\n    this.oldEnd = undefined;\n    this._finalizeAndAddPath();\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {Point} pointer Actual mouse position related to the canvas.\n   */\n  _prepareForDrawing(pointer: Point) {\n    this._reset();\n    this._addPoint(pointer);\n    this.canvas.contextTop.moveTo(pointer.x, pointer.y);\n  }\n\n  /**\n   * @private\n   * @param {Point} point Point to be added to points array\n   */\n  _addPoint(point: Point) {\n    if (\n      this._points.length > 1 &&\n      point.eq(this._points[this._points.length - 1])\n    ) {\n      return false;\n    }\n    if (this.drawStraightLine && this._points.length > 1) {\n      this._hasStraightLine = true;\n      this._points.pop();\n    }\n    this._points.push(point);\n    return true;\n  }\n\n  /**\n   * Clear points array and set contextTop canvas style.\n   * @private\n   */\n  _reset() {\n    this._points = [];\n    this._setBrushStyles(this.canvas.contextTop);\n    this._setShadow();\n    this._hasStraightLine = false;\n  }\n\n  /**\n   * Draw a smooth path on the topCanvas using quadraticCurveTo\n   * @private\n   * @param {CanvasRenderingContext2D} [ctx]\n   */\n  _render(ctx: CanvasRenderingContext2D = this.canvas.contextTop) {\n    let p1 = this._points[0],\n      p2 = this._points[1];\n    this._saveAndTransform(ctx);\n    ctx.beginPath();\n    //if we only have 2 points in the path and they are the same\n    //it means that the user only clicked the canvas without moving the mouse\n    //then we should be drawing a dot. A path isn't drawn between two identical dots\n    //that's why we set them apart a bit\n    if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n      const width = this.width / 1000;\n      p1.x -= width;\n      p2.x += width;\n    }\n    ctx.moveTo(p1.x, p1.y);\n\n    for (let i = 1; i < this._points.length; i++) {\n      // we pick the point between pi + 1 & pi + 2 as the\n      // end point and p1 as our control point.\n      PencilBrush.drawSegment(ctx, p1, p2);\n      p1 = this._points[i];\n      p2 = this._points[i + 1];\n    }\n    // Draw last line as a straight line while\n    // we wait for the next point to be able to calculate\n    // the bezier control point\n    ctx.lineTo(p1.x, p1.y);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  /**\n   * Converts points to SVG path\n   * @param {Point[]} points Array of points\n   * @return {TSimplePathData} SVG path commands\n   */\n  convertPointsToSVGPath(points: Point[]): TSimplePathData {\n    const correction = this.width / 1000;\n    return getSmoothPathFromPoints(points, correction);\n  }\n\n  /**\n   * Creates a Path object to add on canvas\n   * @param {TSimplePathData} pathData Path data\n   * @return {Path} Path to add on canvas\n   */\n  createPath(pathData: TSimplePathData): Path {\n    const path = new Path(pathData, {\n      fill: null,\n      stroke: this.color,\n      strokeWidth: this.width,\n      strokeLineCap: this.strokeLineCap,\n      strokeMiterLimit: this.strokeMiterLimit,\n      strokeLineJoin: this.strokeLineJoin,\n      strokeDashArray: this.strokeDashArray,\n    });\n    if (this.shadow) {\n      this.shadow.affectStroke = true;\n      path.shadow = new Shadow(this.shadow);\n    }\n\n    return path;\n  }\n\n  /**\n   * Decimate points array with the decimate value\n   */\n  decimatePoints(points: Point[], distance: number) {\n    if (points.length <= 2) {\n      return points;\n    }\n    let lastPoint = points[0],\n      cDistance;\n    const zoom = this.canvas.getZoom(),\n      adjustedDistance = Math.pow(distance / zoom, 2),\n      l = points.length - 1,\n      newPoints = [lastPoint];\n    for (let i = 1; i < l - 1; i++) {\n      cDistance =\n        Math.pow(lastPoint.x - points[i].x, 2) +\n        Math.pow(lastPoint.y - points[i].y, 2);\n      if (cDistance >= adjustedDistance) {\n        lastPoint = points[i];\n        newPoints.push(lastPoint);\n      }\n    }\n    // Add the last point from the original line to the end of the array.\n    // This ensures decimate doesn't delete the last point on the line, and ensures the line is > 1 point.\n    newPoints.push(points[l]);\n    return newPoints;\n  }\n\n  /**\n   * On mouseup after drawing the path on contextTop canvas\n   * we use the points captured to create an new Path object\n   * and add it to the canvas.\n   */\n  _finalizeAndAddPath() {\n    const ctx = this.canvas.contextTop;\n    ctx.closePath();\n    if (this.decimate) {\n      this._points = this.decimatePoints(this._points, this.decimate);\n    }\n    const pathData = this.convertPointsToSVGPath(this._points);\n    if (isEmptySVGPath(pathData)) {\n      // do not create 0 width/height paths, as they are\n      // rendered inconsistently across browsers\n      // Firefox 4, for example, renders a dot,\n      // whereas Chrome 10 renders nothing\n      this.canvas.requestRenderAll();\n      return;\n    }\n\n    const path = this.createPath(pathData);\n    this.canvas.clearContext(this.canvas.contextTop);\n    this.canvas.fire('before:path:created', { path: path });\n    this.canvas.add(path);\n    this.canvas.requestRenderAll();\n    path.setCoords();\n    this._resetShadow();\n\n    // fire event 'path' created\n    this.canvas.fire('path:created', { path: path });\n  }\n}\n","import type { ObjectEvents } from '../EventTypeDefs';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport { cos } from '../util/misc/cos';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport { sin } from '../util/misc/sin';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { CSSRules } from '../parser/typedefs';\nimport { SCALE_X, SCALE_Y } from '../constants';\n\ninterface UniqueCircleProps {\n  /**\n   * Radius of this circle\n   * @type Number\n   * @default 0\n   */\n  radius: number;\n\n  /**\n   * Angle for the start of the circle, in degrees.\n   * @type TDegree 0 - 359\n   * @default 0\n   */\n  startAngle: number;\n\n  /**\n   * Angle for the end of the circle, in degrees\n   * @type TDegree 1 - 360\n   * @default 360\n   */\n  endAngle: number;\n\n  /**\n   * Orientation for the direction of the circle.\n   * Setting to true will switch the arc of the circle to traverse from startAngle to endAngle in a counter-clockwise direction.\n   * Note: this will only change how the circle is drawn, and does not affect rotational transformation.\n   * @default false\n   */\n  counterClockwise: boolean;\n}\n\nexport interface SerializedCircleProps\n  extends SerializedObjectProps,\n    UniqueCircleProps {}\n\nexport interface CircleProps extends FabricObjectProps, UniqueCircleProps {}\n\nconst CIRCLE_PROPS = [\n  'radius',\n  'startAngle',\n  'endAngle',\n  'counterClockwise',\n] as const;\n\nexport const circleDefaultValues: Partial<TClassProperties<Circle>> = {\n  radius: 0,\n  startAngle: 0,\n  endAngle: 360,\n  counterClockwise: false,\n};\n\nexport class Circle<\n    Props extends TOptions<CircleProps> = Partial<CircleProps>,\n    SProps extends SerializedCircleProps = SerializedCircleProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements UniqueCircleProps\n{\n  declare radius: number;\n  declare startAngle: number;\n  declare endAngle: number;\n  declare counterClockwise: boolean;\n\n  static type = 'Circle';\n\n  static cacheProperties = [...cacheProperties, ...CIRCLE_PROPS];\n\n  static ownDefaults = circleDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Circle.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, Circle.ownDefaults);\n    this.setOptions(options);\n  }\n\n  /**\n   * @private\n   * @param {String} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    super._set(key, value);\n\n    if (key === 'radius') {\n      this.setRadius(value);\n    }\n\n    return this;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    ctx.arc(\n      0,\n      0,\n      this.radius,\n      degreesToRadians(this.startAngle),\n      degreesToRadians(this.endAngle),\n      this.counterClockwise,\n    );\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns horizontal radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRadiusX(): number {\n    return this.get('radius') * this.get(SCALE_X);\n  }\n\n  /**\n   * Returns vertical radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRadiusY(): number {\n    return this.get('radius') * this.get(SCALE_Y);\n  }\n\n  /**\n   * Sets radius of an object (and updates width accordingly)\n   */\n  setRadius(value: number) {\n    this.radius = value;\n    this.set({ width: value * 2, height: value * 2 });\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject([...CIRCLE_PROPS, ...propertiesToInclude]);\n  }\n\n  /* _TO_SVG_START_ */\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG(): string[] {\n    const angle = (this.endAngle - this.startAngle) % 360;\n\n    if (angle === 0) {\n      return [\n        '<circle ',\n        'COMMON_PARTS',\n        'cx=\"0\" cy=\"0\" ',\n        'r=\"',\n        `${this.radius}`,\n        '\" />\\n',\n      ];\n    } else {\n      const { radius } = this;\n      const start = degreesToRadians(this.startAngle),\n        end = degreesToRadians(this.endAngle),\n        startX = cos(start) * radius,\n        startY = sin(start) * radius,\n        endX = cos(end) * radius,\n        endY = sin(end) * radius,\n        largeFlag = angle > 180 ? 1 : 0,\n        sweepFlag = this.counterClockwise ? 0 : 1;\n      return [\n        `<path d=\"M ${startX} ${startY} A ${radius} ${radius} 0 ${largeFlag} ${sweepFlag} ${endX} ${endY}\" `,\n        'COMMON_PARTS',\n        ' />\\n',\n      ];\n    }\n  }\n  /* _TO_SVG_END_ */\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Circle.fromElement})\n   * @static\n   * @memberOf Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  static ATTRIBUTE_NAMES = ['cx', 'cy', 'r', ...SHARED_ATTRIBUTES];\n\n  /**\n   * Returns {@link Circle} instance from an SVG element\n   * @static\n   * @memberOf Circle\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Partial Circle object to default missing properties on the element.\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ): Promise<Circle> {\n    const {\n      left = 0,\n      top = 0,\n      radius = 0,\n      ...otherParsedAttributes\n    } = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules,\n    ) as Partial<CircleProps>;\n\n    // this probably requires to be fixed for default origins not being top/left.\n\n    return new this({\n      ...otherParsedAttributes,\n      radius,\n      left: left - radius,\n      top: top - radius,\n    });\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * @todo how do we declare this??\n   */\n  static fromObject<T extends TOptions<SerializedCircleProps>>(object: T) {\n    return super._fromObject<Circle>(object);\n  }\n}\n\nclassRegistry.setClass(Circle);\nclassRegistry.setSVGClass(Circle);\n","import { Color } from '../color/Color';\nimport type { Point } from '../Point';\nimport { Shadow } from '../Shadow';\nimport { Circle } from '../shapes/Circle';\nimport { Group } from '../shapes/Group';\nimport { getRandomInt } from '../util/internals/getRandomInt';\nimport type { Canvas } from '../canvas/Canvas';\nimport { BaseBrush } from './BaseBrush';\nimport type { CircleBrushPoint } from './typedefs';\nimport { CENTER } from '../constants';\n\nexport class CircleBrush extends BaseBrush {\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width = 10;\n\n  declare points: CircleBrushPoint[];\n\n  constructor(canvas: Canvas) {\n    super(canvas);\n    this.points = [];\n  }\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Point} pointer\n   */\n  drawDot(pointer: Point) {\n    const point = this.addPoint(pointer),\n      ctx = this.canvas.contextTop;\n    this._saveAndTransform(ctx);\n    this.dot(ctx, point);\n    ctx.restore();\n  }\n\n  dot(ctx: CanvasRenderingContext2D, point: CircleBrushPoint) {\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown(pointer: Point) {\n    this.points = [];\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  }\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render() {\n    const ctx = this.canvas.contextTop,\n      points = this.points;\n    this._saveAndTransform(ctx);\n    for (let i = 0; i < points.length; i++) {\n      this.dot(ctx, points[i]);\n    }\n    ctx.restore();\n  }\n\n  /**\n   * Invoked on mouse move\n   * @param {Point} pointer\n   */\n  onMouseMove(pointer: Point) {\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\n      return;\n    }\n    if (this.needsFullRender()) {\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.addPoint(pointer);\n      this._render();\n    } else {\n      this.drawDot(pointer);\n    }\n  }\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp() {\n    const originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    const circles: Circle[] = [];\n\n    for (let i = 0; i < this.points.length; i++) {\n      const point = this.points[i],\n        circle = new Circle({\n          radius: point.radius,\n          left: point.x,\n          top: point.y,\n          originX: CENTER,\n          originY: CENTER,\n          fill: point.fill,\n        });\n\n      this.shadow && (circle.shadow = new Shadow(this.shadow));\n\n      circles.push(circle);\n    }\n    const group = new Group(circles, { canvas: this.canvas });\n\n    this.canvas.fire('before:path:created', { path: group });\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  }\n\n  /**\n   * @param {Object} pointer\n   * @return {Point} Just added pointer point\n   */\n  addPoint({ x, y }: Point) {\n    const pointerPoint: CircleBrushPoint = {\n      x,\n      y,\n      radius: getRandomInt(Math.max(0, this.width - 20), this.width + 20) / 2,\n      fill: new Color(this.color).setAlpha(getRandomInt(0, 100) / 100).toRgba(),\n    };\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n}\n","import type { Point } from '../Point';\nimport { Group } from '../shapes/Group';\nimport { Shadow } from '../Shadow';\nimport { Rect } from '../shapes/Rect';\nimport { getRandomInt } from '../util/internals/getRandomInt';\nimport type { Canvas } from '../canvas/Canvas';\nimport { BaseBrush } from './BaseBrush';\nimport type { SprayBrushPoint } from './typedefs';\nimport { CENTER } from '../constants';\n\n/**\n *\n * @param rects\n * @returns\n */\nfunction getUniqueRects(rects: Rect[]) {\n  const uniqueRects: Record<string, boolean> = {};\n  const uniqueRectsArray: Rect[] = [];\n\n  for (let i = 0, key: string; i < rects.length; i++) {\n    key = `${rects[i].left}${rects[i].top}`;\n    if (!uniqueRects[key]) {\n      uniqueRects[key] = true;\n      uniqueRectsArray.push(rects[i]);\n    }\n  }\n\n  return uniqueRectsArray;\n}\n\nexport class SprayBrush extends BaseBrush {\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width = 10;\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density = 20;\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth = 1;\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance = 1;\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity = false;\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping = true;\n\n  private declare sprayChunks: SprayBrushPoint[][];\n\n  private declare sprayChunk: SprayBrushPoint[];\n\n  /**\n   * Constructor\n   * @param {Canvas} canvas\n   * @return {SprayBrush} Instance of a spray brush\n   */\n  constructor(canvas: Canvas) {\n    super(canvas);\n    this.sprayChunks = [];\n    this.sprayChunk = [];\n  }\n\n  /**\n   * Invoked on mouse down\n   * @param {Point} pointer\n   */\n  onMouseDown(pointer: Point) {\n    this.sprayChunks = [];\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.renderChunck(this.sprayChunk);\n  }\n\n  /**\n   * Invoked on mouse move\n   * @param {Point} pointer\n   */\n  onMouseMove(pointer: Point) {\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\n      return;\n    }\n    this.addSprayChunk(pointer);\n    this.renderChunck(this.sprayChunk);\n  }\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp() {\n    const originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    const rects: Rect[] = [];\n\n    for (let i = 0; i < this.sprayChunks.length; i++) {\n      const sprayChunk = this.sprayChunks[i];\n      for (let j = 0; j < sprayChunk.length; j++) {\n        const chunck = sprayChunk[j];\n        const rect = new Rect({\n          width: chunck.width,\n          height: chunck.width,\n          left: chunck.x + 1,\n          top: chunck.y + 1,\n          originX: CENTER,\n          originY: CENTER,\n          fill: this.color,\n        });\n        rects.push(rect);\n      }\n    }\n\n    const group = new Group(\n      this.optimizeOverlapping ? getUniqueRects(rects) : rects,\n      {\n        objectCaching: true,\n        subTargetCheck: false,\n        interactive: false,\n      },\n    );\n    this.shadow && group.set('shadow', new Shadow(this.shadow));\n    this.canvas.fire('before:path:created', { path: group });\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  }\n\n  renderChunck(sprayChunck: SprayBrushPoint[]) {\n    const ctx = this.canvas.contextTop;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (let i = 0; i < sprayChunck.length; i++) {\n      const point = sprayChunck[i];\n      ctx.globalAlpha = point.opacity;\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n\n    ctx.restore();\n  }\n\n  /**\n   * Render all spray chunks\n   */\n  _render() {\n    const ctx = this.canvas.contextTop;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (let i = 0; i < this.sprayChunks.length; i++) {\n      this.renderChunck(this.sprayChunks[i]);\n    }\n    ctx.restore();\n  }\n\n  /**\n   * @param {Point} pointer\n   */\n  addSprayChunk(pointer: Point) {\n    this.sprayChunk = [];\n    const radius = this.width / 2;\n\n    for (let i = 0; i < this.density; i++) {\n      this.sprayChunk.push({\n        x: getRandomInt(pointer.x - radius, pointer.x + radius),\n        y: getRandomInt(pointer.y - radius, pointer.y + radius),\n        width: this.dotWidthVariance\n          ? getRandomInt(\n              // bottom clamp width to 1\n              Math.max(1, this.dotWidth - this.dotWidthVariance),\n              this.dotWidth + this.dotWidthVariance,\n            )\n          : this.dotWidth,\n        opacity: this.randomOpacity ? getRandomInt(0, 100) / 100 : 1,\n      });\n    }\n\n    this.sprayChunks.push(this.sprayChunk);\n  }\n}\n","import { Pattern } from '../Pattern';\nimport { createCanvasElement } from '../util/misc/dom';\nimport type { Canvas } from '../canvas/Canvas';\nimport { PencilBrush } from './PencilBrush';\nimport type { TSimplePathData } from '../util/path/typedefs';\n\nexport class PatternBrush extends PencilBrush {\n  declare source?: CanvasImageSource;\n\n  constructor(canvas: Canvas) {\n    super(canvas);\n  }\n\n  getPatternSrc() {\n    const dotWidth = 20,\n      dotDistance = 5,\n      patternCanvas = createCanvasElement(),\n      patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n    if (patternCtx) {\n      patternCtx.fillStyle = this.color;\n      patternCtx.beginPath();\n      patternCtx.arc(\n        dotWidth / 2,\n        dotWidth / 2,\n        dotWidth / 2,\n        0,\n        Math.PI * 2,\n        false,\n      );\n      patternCtx.closePath();\n      patternCtx.fill();\n    }\n    return patternCanvas;\n  }\n\n  /**\n   * Creates \"pattern\" instance property\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  getPattern(ctx: CanvasRenderingContext2D) {\n    return ctx.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  }\n\n  /**\n   * Sets brush styles\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  _setBrushStyles(ctx: CanvasRenderingContext2D) {\n    super._setBrushStyles(ctx);\n    const pattern = this.getPattern(ctx);\n    pattern && (ctx.strokeStyle = pattern);\n  }\n\n  /**\n   * Creates path\n   */\n  createPath(pathData: TSimplePathData) {\n    const path = super.createPath(pathData),\n      topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new Pattern({\n      source: this.source || this.getPatternSrc(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y,\n    });\n    return path;\n  }\n}\n","import { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport { Point } from '../Point';\nimport { isFiller } from '../util/typeAssertions';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport { makeBoundingBoxFromPoints } from '../util';\nimport { CENTER, LEFT, TOP } from '../constants';\nimport type { CSSRules } from '../parser/typedefs';\n\n// @TODO this code is terrible and Line should be a special case of polyline.\n\nconst coordProps = ['x1', 'x2', 'y1', 'y2'] as const;\n\ninterface UniqueLineProps {\n  x1: number;\n  x2: number;\n  y1: number;\n  y2: number;\n}\n\nexport interface SerializedLineProps\n  extends SerializedObjectProps,\n    UniqueLineProps {}\n\nexport class Line<\n    Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n    SProps extends SerializedLineProps = SerializedLineProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements UniqueLineProps\n{\n  /**\n   * x value or first line edge\n   * @type number\n   * @default\n   */\n  declare x1: number;\n\n  /**\n   * y value or first line edge\n   * @type number\n   * @default\n   */\n  declare y1: number;\n\n  /**\n   * x value or second line edge\n   * @type number\n   * @default\n   */\n  declare x2: number;\n\n  /**\n   * y value or second line edge\n   * @type number\n   * @default\n   */\n  declare y2: number;\n\n  static type = 'Line';\n\n  static cacheProperties = [...cacheProperties, ...coordProps];\n  /**\n   * Constructor\n   * @param {Array} [points] Array of points\n   * @param {Object} [options] Options object\n   * @return {Line} thisArg\n   */\n  constructor([x1, y1, x2, y2] = [0, 0, 0, 0], options: Partial<Props> = {}) {\n    super();\n    Object.assign(this, Line.ownDefaults);\n    this.setOptions(options);\n    this.x1 = x1;\n    this.x2 = x2;\n    this.y1 = y1;\n    this.y2 = y2;\n    this._setWidthHeight();\n    const { left, top } = options;\n    typeof left === 'number' && this.set(LEFT, left);\n    typeof top === 'number' && this.set(TOP, top);\n  }\n\n  /**\n   * @private\n   * @param {Object} [options] Options\n   */\n  _setWidthHeight() {\n    const { x1, y1, x2, y2 } = this;\n    this.width = Math.abs(x2 - x1);\n    this.height = Math.abs(y2 - y1);\n    const { left, top, width, height } = makeBoundingBoxFromPoints([\n      { x: x1, y: y1 },\n      { x: x2, y: y2 },\n    ]);\n    const position = new Point(left + width / 2, top + height / 2);\n    this.setPositionByOrigin(position, CENTER, CENTER);\n  }\n\n  /**\n   * @private\n   * @param {String} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    super._set(key, value);\n    if (coordProps.includes(key as keyof UniqueLineProps)) {\n      // this doesn't make sense very much, since setting x1 when top or left\n      // are already set, is just going to show a strange result since the\n      // line will move way more than the developer expect.\n      // in fabric5 it worked only when the line didn't have extra transformations,\n      // in fabric6 too. With extra transform they behave bad in different ways.\n      // This needs probably a good rework or a tutorial if you have to create a dynamic line\n      this._setWidthHeight();\n    }\n    return this;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n\n    const p = this.calcLinePoints();\n    ctx.moveTo(p.x1, p.y1);\n    ctx.lineTo(p.x2, p.y2);\n\n    ctx.lineWidth = this.strokeWidth;\n\n    // TODO: test this\n    // make sure setting \"fill\" changes color of a line\n    // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n    const origStrokeStyle = ctx.strokeStyle;\n    if (isFiller(this.stroke)) {\n      ctx.strokeStyle = this.stroke.toLive(ctx)!;\n    } else {\n      ctx.strokeStyle = this.stroke ?? ctx.fillStyle;\n    }\n    this.stroke && this._renderStroke(ctx);\n    ctx.strokeStyle = origStrokeStyle;\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement(): Point {\n    return new Point((this.x1 + this.x2) / 2, (this.y1 + this.y2) / 2);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @method toObject\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject(propertiesToInclude),\n      ...this.calcLinePoints(),\n    };\n  }\n\n  /*\n   * Calculate object dimensions from its properties\n   * @private\n   */\n  _getNonTransformedDimensions(): Point {\n    const dim = super._getNonTransformedDimensions();\n    if (this.strokeLineCap === 'butt') {\n      if (this.width === 0) {\n        dim.y -= this.strokeWidth;\n      }\n      if (this.height === 0) {\n        dim.x -= this.strokeWidth;\n      }\n    }\n    return dim;\n  }\n\n  /**\n   * Recalculates line points given width and height\n   * Those points are simply placed around the center,\n   * This is not useful outside internal render functions and svg output\n   * Is not meant to be for the developer.\n   * @private\n   */\n  calcLinePoints(): UniqueLineProps {\n    const { x1: _x1, x2: _x2, y1: _y1, y2: _y2, width, height } = this;\n    const xMult = _x1 <= _x2 ? -1 : 1,\n      yMult = _y1 <= _y2 ? -1 : 1,\n      x1 = (xMult * width) / 2,\n      y1 = (yMult * height) / 2,\n      x2 = (xMult * -width) / 2,\n      y2 = (yMult * -height) / 2;\n\n    return {\n      x1,\n      x2,\n      y1,\n      y2,\n    };\n  }\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const { x1, x2, y1, y2 } = this.calcLinePoints();\n    return [\n      '<line ',\n      'COMMON_PARTS',\n      `x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y2}\" />\\n`,\n    ];\n  }\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Line.fromElement})\n   * @static\n   * @memberOf Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  static ATTRIBUTE_NAMES = SHARED_ATTRIBUTES.concat(coordProps);\n\n  /**\n   * Returns Line instance from an SVG element\n   * @static\n   * @memberOf Line\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const {\n      x1 = 0,\n      y1 = 0,\n      x2 = 0,\n      y2 = 0,\n      ...parsedAttributes\n    } = parseAttributes(element, this.ATTRIBUTE_NAMES, cssRules);\n    return new this([x1, y1, x2, y2], parsedAttributes);\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns Line instance from an object representation\n   * @static\n   * @memberOf Line\n   * @param {Object} object Object to create an instance from\n   * @returns {Promise<Line>}\n   */\n  static fromObject<T extends TOptions<SerializedLineProps>>({\n    x1,\n    y1,\n    x2,\n    y2,\n    ...object\n  }: T) {\n    return this._fromObject<Line>(\n      {\n        ...object,\n        points: [x1, y1, x2, y2],\n      },\n      {\n        extraParam: 'points',\n      },\n    );\n  }\n}\n\nclassRegistry.setClass(Line);\nclassRegistry.setSVGClass(Line);\n","import { classRegistry } from '../ClassRegistry';\nimport { FabricObject } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { TClassProperties, TOptions } from '../typedefs';\nimport type { ObjectEvents } from '../EventTypeDefs';\n\nexport const triangleDefaultValues: Partial<TClassProperties<Triangle>> = {\n  width: 100,\n  height: 100,\n};\n\nexport class Triangle<\n    Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n    SProps extends SerializedObjectProps = SerializedObjectProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements FabricObjectProps\n{\n  static type = 'Triangle';\n\n  static ownDefaults = triangleDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...Triangle.ownDefaults };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, Triangle.ownDefaults);\n    this.setOptions(options);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const widthBy2 = this.width / 2,\n      heightBy2 = this.height / 2;\n\n    ctx.beginPath();\n    ctx.moveTo(-widthBy2, heightBy2);\n    ctx.lineTo(0, -heightBy2);\n    ctx.lineTo(widthBy2, heightBy2);\n    ctx.closePath();\n\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const widthBy2 = this.width / 2,\n      heightBy2 = this.height / 2,\n      points = `${-widthBy2} ${heightBy2},0 ${-heightBy2},${widthBy2} ${heightBy2}`;\n    return ['<polygon ', 'COMMON_PARTS', 'points=\"', points, '\" />'];\n  }\n}\n\nclassRegistry.setClass(Triangle);\nclassRegistry.setSVGClass(Triangle);\n","import { SCALE_X, SCALE_Y, twoMathPi } from '../constants';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport type { CSSRules } from '../parser/typedefs';\n\nexport const ellipseDefaultValues: Partial<TClassProperties<Ellipse>> = {\n  rx: 0,\n  ry: 0,\n};\n\ninterface UniqueEllipseProps {\n  rx: number;\n  ry: number;\n}\n\nexport interface SerializedEllipseProps\n  extends SerializedObjectProps,\n    UniqueEllipseProps {}\n\nexport interface EllipseProps extends FabricObjectProps, UniqueEllipseProps {}\n\nconst ELLIPSE_PROPS = ['rx', 'ry'] as const;\n\nexport class Ellipse<\n    Props extends TOptions<EllipseProps> = Partial<EllipseProps>,\n    SProps extends SerializedEllipseProps = SerializedEllipseProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements EllipseProps\n{\n  /**\n   * Horizontal radius\n   * @type Number\n   * @default\n   */\n  declare rx: number;\n\n  /**\n   * Vertical radius\n   * @type Number\n   * @default\n   */\n  declare ry: number;\n\n  static type = 'Ellipse';\n\n  static cacheProperties = [...cacheProperties, ...ELLIPSE_PROPS];\n\n  static ownDefaults = ellipseDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Ellipse.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, Ellipse.ownDefaults);\n    this.setOptions(options);\n  }\n\n  /**\n   * @private\n   * @param {String} key\n   * @param {*} value\n   * @return {Ellipse} thisArg\n   */\n  _set(key: string, value: any) {\n    super._set(key, value);\n    switch (key) {\n      case 'rx':\n        this.rx = value;\n        this.set('width', value * 2);\n        break;\n\n      case 'ry':\n        this.ry = value;\n        this.set('height', value * 2);\n        break;\n    }\n    return this;\n  }\n\n  /**\n   * Returns horizontal radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRx() {\n    return this.get('rx') * this.get(SCALE_X);\n  }\n\n  /**\n   * Returns Vertical radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRy() {\n    return this.get('ry') * this.get(SCALE_Y);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject([...ELLIPSE_PROPS, ...propertiesToInclude]);\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG(): string[] {\n    return [\n      '<ellipse ',\n      'COMMON_PARTS',\n      `cx=\"0\" cy=\"0\" rx=\"${this.rx}\" ry=\"${this.ry}\" />\\n`,\n    ];\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    ctx.save();\n    ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n    ctx.arc(0, 0, this.rx, 0, twoMathPi, false);\n    ctx.restore();\n    this._renderPaintInOrder(ctx);\n  }\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Ellipse.fromElement})\n   * @static\n   * @memberOf Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  static ATTRIBUTE_NAMES = [...SHARED_ATTRIBUTES, 'cx', 'cy', 'rx', 'ry'];\n\n  /**\n   * Returns {@link Ellipse} instance from an SVG element\n   * @static\n   * @memberOf Ellipse\n   * @param {HTMLElement} element Element to parse\n   * @return {Ellipse}\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const parsedAttributes = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules,\n    );\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    return new this(parsedAttributes);\n  }\n\n  /* _FROM_SVG_END_ */\n}\n\nclassRegistry.setClass(Ellipse);\nclassRegistry.setSVGClass(Ellipse);\n","import type { XY } from '../Point';\n\n/**\n * Parses \"points\" attribute, returning an array of values\n * @static\n * @memberOf fabric\n * @param {String} points points attribute string\n * @return {Array} array of points\n */\nexport function parsePointsAttribute(points: string | null): XY[] {\n  // points attribute is required and must not be empty\n  if (!points) {\n    return [];\n  }\n\n  // replace commas with whitespace and remove bookending whitespace\n  const pointsSplit: string[] = points.replace(/,/g, ' ').trim().split(/\\s+/);\n\n  const parsedPoints = [];\n\n  for (let i = 0; i < pointsSplit.length; i += 2) {\n    parsedPoints.push({\n      x: parseFloat(pointsSplit[i]),\n      y: parseFloat(pointsSplit[i + 1]),\n    });\n  }\n\n  // odd number of points is an error\n  // if (parsedPoints.length % 2 !== 0) {\n  //   return null;\n  // }\n  return parsedPoints;\n}\n","import { config } from '../config';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport { parsePointsAttribute } from '../parser/parsePointsAttribute';\nimport type { XY } from '../Point';\nimport { Point } from '../Point';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { makeBoundingBoxFromPoints } from '../util/misc/boundingBoxFromPoints';\nimport { calcDimensionsMatrix, transformPoint } from '../util/misc/matrix';\nimport { projectStrokeOnPoints } from '../util/misc/projectStroke';\nimport type { TProjectStrokeOnPointsOptions } from '../util/misc/projectStroke/types';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport { toFixed } from '../util/misc/toFixed';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport {\n  CENTER,\n  LEFT,\n  SCALE_X,\n  SCALE_Y,\n  SKEW_X,\n  SKEW_Y,\n  TOP,\n} from '../constants';\nimport type { CSSRules } from '../parser/typedefs';\n\nexport const polylineDefaultValues: Partial<TClassProperties<Polyline>> = {\n  /**\n   * @deprecated transient option soon to be removed in favor of a different design\n   */\n  exactBoundingBox: false,\n};\n\nexport interface SerializedPolylineProps extends SerializedObjectProps {\n  points: XY[];\n}\n\nexport class Polyline<\n  Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n  SProps extends SerializedPolylineProps = SerializedPolylineProps,\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends FabricObject<Props, SProps, EventSpec> {\n  /**\n   * Points array\n   * @type Array\n   * @default\n   */\n  declare points: XY[];\n\n  /**\n   * WARNING: Feature in progress\n   * Calculate the exact bounding box taking in account strokeWidth on acute angles\n   * this will be turned to true by default on fabric 6.0\n   * maybe will be left in as an optimization since calculations may be slow\n   * @deprecated transient option soon to be removed in favor of a different design\n   * @type Boolean\n   * @default false\n   */\n  declare exactBoundingBox: boolean;\n\n  private declare initialized: true | undefined;\n\n  static ownDefaults = polylineDefaultValues;\n\n  static type = 'Polyline';\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Polyline.ownDefaults,\n    };\n  }\n\n  /**\n   * A list of properties that if changed trigger a recalculation of dimensions\n   * @todo check if you really need to recalculate for all cases\n   */\n  static layoutProperties: (keyof Polyline)[] = [\n    SKEW_X,\n    SKEW_Y,\n    'strokeLineCap',\n    'strokeLineJoin',\n    'strokeMiterLimit',\n    'strokeWidth',\n    'strokeUniform',\n    'points',\n  ];\n\n  declare pathOffset: Point;\n\n  declare strokeOffset: Point;\n\n  static cacheProperties = [...cacheProperties, 'points'];\n\n  strokeDiff: Point;\n\n  /**\n   * Constructor\n   * @param {Array} points Array of points (where each point is an object with x and y)\n   * @param {Object} [options] Options object\n   * @return {Polyline} thisArg\n   * @example\n   * var poly = new Polyline([\n   *     { x: 10, y: 10 },\n   *     { x: 50, y: 30 },\n   *     { x: 40, y: 70 },\n   *     { x: 60, y: 50 },\n   *     { x: 100, y: 150 },\n   *     { x: 40, y: 100 }\n   *   ], {\n   *   stroke: 'red',\n   *   left: 100,\n   *   top: 100\n   * });\n   */\n  constructor(points: XY[] = [], options: Props = {} as Props) {\n    super();\n    Object.assign(this, Polyline.ownDefaults);\n    this.setOptions(options);\n    this.points = points;\n    const { left, top } = options;\n    this.initialized = true;\n    this.setBoundingBox(true);\n    typeof left === 'number' && this.set(LEFT, left);\n    typeof top === 'number' && this.set(TOP, top);\n  }\n\n  protected isOpen() {\n    return true;\n  }\n\n  private _projectStrokeOnPoints(options: TProjectStrokeOnPointsOptions) {\n    return projectStrokeOnPoints(this.points, options, this.isOpen());\n  }\n\n  /**\n   * Calculate the polygon bounding box\n   * @private\n   */\n  _calcDimensions(options?: Partial<TProjectStrokeOnPointsOptions>) {\n    options = {\n      scaleX: this.scaleX,\n      scaleY: this.scaleY,\n      skewX: this.skewX,\n      skewY: this.skewY,\n      strokeLineCap: this.strokeLineCap,\n      strokeLineJoin: this.strokeLineJoin,\n      strokeMiterLimit: this.strokeMiterLimit,\n      strokeUniform: this.strokeUniform,\n      strokeWidth: this.strokeWidth,\n      ...(options || {}),\n    };\n    const points = this.exactBoundingBox\n      ? this._projectStrokeOnPoints(\n          options as TProjectStrokeOnPointsOptions,\n        ).map((projection) => projection.projectedPoint)\n      : this.points;\n    if (points.length === 0) {\n      return {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0,\n        pathOffset: new Point(),\n        strokeOffset: new Point(),\n        strokeDiff: new Point(),\n      };\n    }\n    const bbox = makeBoundingBoxFromPoints(points),\n      // Remove scale effect, since it's applied after\n      matrix = calcDimensionsMatrix({ ...options, scaleX: 1, scaleY: 1 }),\n      bboxNoStroke = makeBoundingBoxFromPoints(\n        this.points.map((p) => transformPoint(p, matrix, true)),\n      ),\n      scale = new Point(this.scaleX, this.scaleY);\n    let offsetX = bbox.left + bbox.width / 2,\n      offsetY = bbox.top + bbox.height / 2;\n    if (this.exactBoundingBox) {\n      offsetX = offsetX - offsetY * Math.tan(degreesToRadians(this.skewX));\n      // Order of those assignments is important.\n      // offsetY relies on offsetX being already changed by the line above\n      offsetY = offsetY - offsetX * Math.tan(degreesToRadians(this.skewY));\n    }\n\n    return {\n      ...bbox,\n      pathOffset: new Point(offsetX, offsetY),\n      strokeOffset: new Point(bboxNoStroke.left, bboxNoStroke.top)\n        .subtract(new Point(bbox.left, bbox.top))\n        .multiply(scale),\n      strokeDiff: new Point(bbox.width, bbox.height)\n        .subtract(new Point(bboxNoStroke.width, bboxNoStroke.height))\n        .multiply(scale),\n    };\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates, by look at the polyline/polygon points.\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement(): Point {\n    const bbox = makeBoundingBoxFromPoints(this.points);\n    return new Point(bbox.left + bbox.width / 2, bbox.top + bbox.height / 2);\n  }\n\n  setDimensions() {\n    this.setBoundingBox();\n  }\n\n  setBoundingBox(adjustPosition?: boolean) {\n    const { left, top, width, height, pathOffset, strokeOffset, strokeDiff } =\n      this._calcDimensions();\n    this.set({ width, height, pathOffset, strokeOffset, strokeDiff });\n    adjustPosition &&\n      this.setPositionByOrigin(\n        new Point(left + width / 2, top + height / 2),\n        CENTER,\n        CENTER,\n      );\n  }\n\n  /**\n   * @deprecated intermidiate method to be removed, do not use\n   */\n  protected isStrokeAccountedForInDimensions() {\n    return this.exactBoundingBox;\n  }\n\n  /**\n   * @override stroke is taken in account in size\n   */\n  _getNonTransformedDimensions() {\n    return this.exactBoundingBox\n      ? // TODO: fix this\n        new Point(this.width, this.height)\n      : super._getNonTransformedDimensions();\n  }\n\n  /**\n   * @override stroke and skewing are taken into account when projecting stroke on points,\n   * therefore we don't want the default calculation to account for skewing as well.\n   * Though it is possible to pass `width` and `height` in `options`, doing so is very strange, use with discretion.\n   *\n   * @private\n   */\n  _getTransformedDimensions(options: any = {}) {\n    if (this.exactBoundingBox) {\n      let size: Point;\n      /* When `strokeUniform = true`, any changes to the properties require recalculating the `width` and `height` because\n        the stroke projections are affected.\n        When `strokeUniform = false`, we don't need to recalculate for scale transformations, as the effect of scale on\n        projections follows a linear function (e.g. scaleX of 2 just multiply width by 2)*/\n      if (\n        Object.keys(options).some(\n          (key) =>\n            this.strokeUniform ||\n            (this.constructor as typeof Polyline).layoutProperties.includes(\n              key as keyof TProjectStrokeOnPointsOptions,\n            ),\n        )\n      ) {\n        const { width, height } = this._calcDimensions(options);\n        size = new Point(options.width ?? width, options.height ?? height);\n      } else {\n        size = new Point(\n          options.width ?? this.width,\n          options.height ?? this.height,\n        );\n      }\n      return size.multiply(\n        new Point(options.scaleX || this.scaleX, options.scaleY || this.scaleY),\n      );\n    } else {\n      return super._getTransformedDimensions(options);\n    }\n  }\n\n  /**\n   * Recalculates dimensions when changing skew and scale\n   * @private\n   */\n  _set(key: string, value: any) {\n    const changed = this.initialized && this[key as keyof this] !== value;\n    const output = super._set(key, value);\n    if (\n      this.exactBoundingBox &&\n      changed &&\n      (((key === SCALE_X || key === SCALE_Y) &&\n        this.strokeUniform &&\n        (this.constructor as typeof Polyline).layoutProperties.includes(\n          'strokeUniform',\n        )) ||\n        (this.constructor as typeof Polyline).layoutProperties.includes(\n          key as keyof Polyline,\n        ))\n    ) {\n      this.setDimensions();\n    }\n    return output;\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject(propertiesToInclude),\n      points: this.points.map(({ x, y }) => ({ x, y })),\n    };\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const points = [],\n      diffX = this.pathOffset.x,\n      diffY = this.pathOffset.y,\n      NUM_FRACTION_DIGITS = config.NUM_FRACTION_DIGITS;\n\n    for (let i = 0, len = this.points.length; i < len; i++) {\n      points.push(\n        toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS),\n        ',',\n        toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS),\n        ' ',\n      );\n    }\n    return [\n      `<${\n        (this.constructor as typeof Polyline).type.toLowerCase() as\n          | 'polyline'\n          | 'polygon'\n      } `,\n      'COMMON_PARTS',\n      `points=\"${points.join('')}\" />\\n`,\n    ];\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const len = this.points.length,\n      x = this.pathOffset.x,\n      y = this.pathOffset.y;\n\n    if (!len || isNaN(this.points[len - 1].y)) {\n      // do not draw if no points or odd points\n      // NaN comes from parseFloat of a empty string in parser\n      return;\n    }\n    ctx.beginPath();\n    ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n    for (let i = 0; i < len; i++) {\n      const point = this.points[i];\n      ctx.lineTo(point.x - x, point.y - y);\n    }\n    !this.isOpen() && ctx.closePath();\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns complexity of an instance\n   * @return {Number} complexity of this instance\n   */\n  complexity(): number {\n    return this.points.length;\n  }\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Polyline.fromElement})\n   * @static\n   * @memberOf Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  static ATTRIBUTE_NAMES = [...SHARED_ATTRIBUTES];\n\n  /**\n   * Returns Polyline instance from an SVG element\n   * @static\n   * @memberOf Polyline\n   * @param {HTMLElement} element Element to parser\n   * @param {Object} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const points = parsePointsAttribute(element.getAttribute('points')),\n      // we omit left and top to instruct the constructor to position the object using the bbox\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      { left, top, ...parsedAttributes } = parseAttributes(\n        element,\n        this.ATTRIBUTE_NAMES,\n        cssRules,\n      );\n    return new this(points, {\n      ...parsedAttributes,\n      ...options,\n    });\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns Polyline instance from an object representation\n   * @static\n   * @memberOf Polyline\n   * @param {Object} object Object to create an instance from\n   * @returns {Promise<Polyline>}\n   */\n  static fromObject<T extends TOptions<SerializedPolylineProps>>(object: T) {\n    return this._fromObject<Polyline>(object, {\n      extraParam: 'points',\n    });\n  }\n}\n\nclassRegistry.setClass(Polyline);\nclassRegistry.setSVGClass(Polyline);\n","import { classRegistry } from '../ClassRegistry';\nimport { Polyline, polylineDefaultValues } from './Polyline';\n\nexport class Polygon extends Polyline {\n  static ownDefaults = polylineDefaultValues;\n\n  static type = 'Polygon';\n\n  protected isOpen() {\n    return false;\n  }\n}\n\nclassRegistry.setClass(Polygon);\nclassRegistry.setSVGClass(Polygon);\n","import { FILL, LEFT, STROKE, reNewline } from '../../constants';\nimport type { TClassProperties } from '../../typedefs';\nimport type { FabricText } from './Text';\n\nconst fontProperties = [\n  'fontSize',\n  'fontWeight',\n  'fontFamily',\n  'fontStyle',\n] as const;\n\nexport const textDecorationProperties = [\n  'underline',\n  'overline',\n  'linethrough',\n] as const;\n\nexport const textLayoutProperties: string[] = [\n  ...fontProperties,\n  'lineHeight',\n  'text',\n  'charSpacing',\n  'textAlign',\n  'styles',\n  'path',\n  'pathStartOffset',\n  'pathSide',\n  'pathAlign',\n];\n\nexport const additionalProps = [\n  ...textLayoutProperties,\n  ...textDecorationProperties,\n  'textBackgroundColor',\n  'direction',\n] as const;\n\nexport type StylePropertiesType =\n  | 'fill'\n  | 'stroke'\n  | 'strokeWidth'\n  | 'fontSize'\n  | 'fontFamily'\n  | 'fontWeight'\n  | 'fontStyle'\n  | 'textBackgroundColor'\n  | 'deltaY'\n  | 'overline'\n  | 'underline'\n  | 'linethrough';\n\nexport const styleProperties: Readonly<StylePropertiesType[]> = [\n  ...fontProperties,\n  ...textDecorationProperties,\n  STROKE,\n  'strokeWidth',\n  FILL,\n  'deltaY',\n  'textBackgroundColor',\n] as const;\n\n// @TODO: Many things here are configuration related and shouldn't be on the class nor prototype\n// regexes, list of properties that are not suppose to change by instances, magic consts.\n// this will be a separated effort\nexport const textDefaultValues: Partial<TClassProperties<FabricText>> = {\n  _reNewline: reNewline,\n  _reSpacesAndTabs: /[ \\t\\r]/g,\n  _reSpaceAndTab: /[ \\t\\r]/,\n  _reWords: /\\S+/g,\n  fontSize: 40,\n  fontWeight: 'normal',\n  fontFamily: 'Times New Roman',\n  underline: false,\n  overline: false,\n  linethrough: false,\n  textAlign: LEFT,\n  fontStyle: 'normal',\n  lineHeight: 1.16,\n  superscript: {\n    size: 0.6, // fontSize factor\n    baseline: -0.35, // baseline-shift factor (upwards)\n  },\n  subscript: {\n    size: 0.6, // fontSize factor\n    baseline: 0.11, // baseline-shift factor (downwards)\n  },\n  textBackgroundColor: '',\n  stroke: null,\n  shadow: null,\n  path: undefined,\n  pathStartOffset: 0,\n  pathSide: LEFT,\n  pathAlign: 'baseline',\n  _fontSizeFraction: 0.222,\n  offsets: {\n    underline: 0.1,\n    linethrough: -0.315,\n    overline: -0.88,\n  },\n  _fontSizeMult: 1.13,\n  charSpacing: 0,\n  deltaY: 0,\n  direction: 'ltr',\n  CACHE_FONT_SIZE: 400,\n  MIN_TEXT_WIDTH: 2,\n};\n\nexport const JUSTIFY = 'justify';\nexport const JUSTIFY_LEFT = 'justify-left';\nexport const JUSTIFY_RIGHT = 'justify-right';\nexport const JUSTIFY_CENTER = 'justify-center';\n","import type { ObjectEvents } from '../../EventTypeDefs';\nimport type { FabricObjectProps, SerializedObjectProps } from '../Object/types';\nimport type { TOptions } from '../../typedefs';\nimport { FabricObject } from '../Object/FabricObject';\nimport { styleProperties } from './constants';\nimport type { StylePropertiesType } from './constants';\nimport type { FabricText } from './Text';\nimport { pick } from '../../util';\nimport { pickBy } from '../../util/misc/pick';\n\nexport type CompleteTextStyleDeclaration = Pick<\n  FabricText,\n  StylePropertiesType\n>;\n\nexport type TextStyleDeclaration = Partial<CompleteTextStyleDeclaration>;\n\nexport type TextStyle = {\n  [line: number | string]: { [char: number | string]: TextStyleDeclaration };\n};\n\nexport abstract class StyledText<\n  Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n  SProps extends SerializedObjectProps = SerializedObjectProps,\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends FabricObject<Props, SProps, EventSpec> {\n  declare abstract styles: TextStyle;\n  protected declare abstract _textLines: string[][];\n  protected declare _forceClearCache: boolean;\n  static _styleProperties: Readonly<StylePropertiesType[]> = styleProperties;\n  abstract get2DCursorLocation(\n    selectionStart: number,\n    skipWrapping?: boolean,\n  ): { charIndex: number; lineIndex: number };\n\n  /**\n   * Returns true if object has no styling or no styling in a line\n   * @param {Number} lineIndex , lineIndex is on wrapped lines.\n   * @return {Boolean}\n   */\n  isEmptyStyles(lineIndex?: number): boolean {\n    if (!this.styles) {\n      return true;\n    }\n    if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n      return true;\n    }\n    const obj =\n      typeof lineIndex === 'undefined'\n        ? this.styles\n        : { line: this.styles[lineIndex] };\n    for (const p1 in obj) {\n      for (const p2 in obj[p1]) {\n        // eslint-disable-next-line no-unused-vars\n        for (const p3 in obj[p1][p2]) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Returns true if object has a style property or has it ina specified line\n   * This function is used to detect if a text will use a particular property or not.\n   * @param {String} property to check for\n   * @param {Number} lineIndex to check the style on\n   * @return {Boolean}\n   */\n  styleHas(property: keyof TextStyleDeclaration, lineIndex?: number): boolean {\n    if (!this.styles) {\n      return false;\n    }\n    if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n      return false;\n    }\n    const obj =\n      typeof lineIndex === 'undefined'\n        ? this.styles\n        : { 0: this.styles[lineIndex] };\n    // eslint-disable-next-line\n    for (const p1 in obj) {\n      // eslint-disable-next-line\n      for (const p2 in obj[p1]) {\n        if (typeof obj[p1][p2][property] !== 'undefined') {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if characters in a text have a value for a property\n   * whose value matches the textbox's value for that property.  If so,\n   * the character-level property is deleted.  If the character\n   * has no other properties, then it is also deleted.  Finally,\n   * if the line containing that character has no other characters\n   * then it also is deleted.\n   */\n  cleanStyle(property: keyof TextStyleDeclaration) {\n    if (!this.styles) {\n      return false;\n    }\n    const obj = this.styles;\n    let stylesCount = 0,\n      letterCount,\n      stylePropertyValue,\n      allStyleObjectPropertiesMatch = true,\n      graphemeCount = 0;\n    for (const p1 in obj) {\n      letterCount = 0;\n      for (const p2 in obj[p1]) {\n        const styleObject = obj[p1][p2] || {},\n          stylePropertyHasBeenSet = styleObject[property] !== undefined;\n\n        stylesCount++;\n\n        if (stylePropertyHasBeenSet) {\n          if (!stylePropertyValue) {\n            stylePropertyValue = styleObject[property];\n          } else if (styleObject[property] !== stylePropertyValue) {\n            allStyleObjectPropertiesMatch = false;\n          }\n\n          if (styleObject[property] === this[property as keyof this]) {\n            delete styleObject[property];\n          }\n        } else {\n          allStyleObjectPropertiesMatch = false;\n        }\n\n        if (Object.keys(styleObject).length !== 0) {\n          letterCount++;\n        } else {\n          delete obj[p1][p2];\n        }\n      }\n\n      if (letterCount === 0) {\n        delete obj[p1];\n      }\n    }\n    // if every grapheme has the same style set then\n    // delete those styles and set it on the parent\n    for (let i = 0; i < this._textLines.length; i++) {\n      graphemeCount += this._textLines[i].length;\n    }\n    if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n      this[property as keyof this] = stylePropertyValue as any;\n      this.removeStyle(property);\n    }\n  }\n\n  /**\n   * Remove a style property or properties from all individual character styles\n   * in a text object.  Deletes the character style object if it contains no other style\n   * props.  Deletes a line style object if it contains no other character styles.\n   *\n   * @param {String} props The property to remove from character styles.\n   */\n  removeStyle(property: keyof TextStyleDeclaration) {\n    if (!this.styles) {\n      return;\n    }\n    const obj = this.styles;\n    let line, lineNum, charNum;\n    for (lineNum in obj) {\n      line = obj[lineNum];\n      for (charNum in line) {\n        delete line[charNum][property];\n        if (Object.keys(line[charNum]).length === 0) {\n          delete line[charNum];\n        }\n      }\n      if (Object.keys(line).length === 0) {\n        delete obj[lineNum];\n      }\n    }\n  }\n\n  private _extendStyles(index: number, style: TextStyleDeclaration): void {\n    const { lineIndex, charIndex } = this.get2DCursorLocation(index);\n\n    if (!this._getLineStyle(lineIndex)) {\n      this._setLineStyle(lineIndex);\n    }\n\n    const newStyle = pickBy(\n      {\n        // first create a new object that is a merge of existing and new\n        ...this._getStyleDeclaration(lineIndex, charIndex),\n        ...style,\n        // use the predicate to discard undefined values\n      },\n      (value) => value !== undefined,\n    );\n\n    // finally assign to the old position the new style\n    this._setStyleDeclaration(lineIndex, charIndex, newStyle);\n  }\n\n  /**\n   * Gets style of a current selection/cursor (at the start position)\n   * @param {Number} startIndex Start index to get styles at\n   * @param {Number} endIndex End index to get styles at, if not specified startIndex + 1\n   * @param {Boolean} [complete] get full style or not\n   * @return {Array} styles an array with one, zero or more Style objects\n   */\n  getSelectionStyles(\n    startIndex: number,\n    endIndex?: number,\n    complete?: boolean,\n  ): TextStyleDeclaration[] {\n    const styles: TextStyleDeclaration[] = [];\n    for (let i = startIndex; i < (endIndex || startIndex); i++) {\n      styles.push(this.getStyleAtPosition(i, complete));\n    }\n    return styles;\n  }\n\n  /**\n   * Gets style of a current selection/cursor position\n   * @param {Number} position  to get styles at\n   * @param {Boolean} [complete] full style if true\n   * @return {Object} style Style object at a specified index\n   * @private\n   */\n  getStyleAtPosition(position: number, complete?: boolean) {\n    const { lineIndex, charIndex } = this.get2DCursorLocation(position);\n    return complete\n      ? this.getCompleteStyleDeclaration(lineIndex, charIndex)\n      : this._getStyleDeclaration(lineIndex, charIndex);\n  }\n\n  /**\n   * Sets style of a current selection, if no selection exist, do not set anything.\n   * @param {Object} styles Styles object\n   * @param {Number} startIndex Start index to get styles at\n   * @param {Number} [endIndex] End index to get styles at, if not specified startIndex + 1\n   */\n  setSelectionStyles(styles: object, startIndex: number, endIndex?: number) {\n    for (let i = startIndex; i < (endIndex || startIndex); i++) {\n      this._extendStyles(i, styles);\n    }\n    /* not included in _extendStyles to avoid clearing cache more than once */\n    this._forceClearCache = true;\n  }\n\n  /**\n   * Get a reference, not a clone, to the style object for a given character,\n   * if no style is set for a line or char, return a new empty object.\n   * This is tricky and confusing because when you get an empty object you can't\n   * determine if it is a reference or a new one.\n   * @TODO this should always return a reference or always a clone or undefined when necessary.\n   * @protected\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {TextStyleDeclaration} a style object reference to the existing one or a new empty object when undefined\n   */\n  _getStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n  ): TextStyleDeclaration {\n    const lineStyle = this.styles && this.styles[lineIndex];\n    return lineStyle ? lineStyle[charIndex] ?? {} : {};\n  }\n\n  /**\n   * return a new object that contains all the style property for a character\n   * the object returned is newly created\n   * @param {Number} lineIndex of the line where the character is\n   * @param {Number} charIndex position of the character on the line\n   * @return {Object} style object\n   */\n  getCompleteStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n  ): CompleteTextStyleDeclaration {\n    return {\n      ...pick(\n        this,\n        (this.constructor as typeof StyledText)\n          ._styleProperties as (keyof this)[],\n      ),\n      ...this._getStyleDeclaration(lineIndex, charIndex),\n    } as CompleteTextStyleDeclaration;\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @param {Object} style\n   * @private\n   */\n  protected _setStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n    style: object,\n  ) {\n    this.styles[lineIndex][charIndex] = style;\n  }\n\n  /**\n   *\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @private\n   */\n  protected _deleteStyleDeclaration(lineIndex: number, charIndex: number) {\n    delete this.styles[lineIndex][charIndex];\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @return {Boolean} if the line exists or not\n   * @private\n   */\n  protected _getLineStyle(lineIndex: number): boolean {\n    return !!this.styles[lineIndex];\n  }\n\n  /**\n   * Set the line style to an empty object so that is initialized\n   * @param {Number} lineIndex\n   * @private\n   */\n  protected _setLineStyle(lineIndex: number) {\n    this.styles[lineIndex] = {};\n  }\n\n  protected _deleteLineStyle(lineIndex: number) {\n    delete this.styles[lineIndex];\n  }\n}\n","import { config } from '../../config';\nimport type { TSVGReviver } from '../../typedefs';\nimport { escapeXml } from '../../util/lang_string';\nimport { colorPropToSVG, createSVGRect } from '../../util/misc/svgParsing';\nimport { hasStyleChanged } from '../../util/misc/textStyles';\nimport { toFixed } from '../../util/misc/toFixed';\nimport { FabricObjectSVGExportMixin } from '../Object/FabricObjectSVGExportMixin';\nimport { type TextStyleDeclaration } from './StyledText';\nimport { JUSTIFY } from '../Text/constants';\nimport type { FabricText } from './Text';\nimport { STROKE, FILL } from '../../constants';\n\nconst multipleSpacesRegex = /  +/g;\nconst dblQuoteRegex = /\"/g;\n\nfunction createSVGInlineRect(\n  color: string,\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n) {\n  return `\\t\\t${createSVGRect(color, { left, top, width, height })}\\n`;\n}\n\nexport class TextSVGExportMixin extends FabricObjectSVGExportMixin {\n  _toSVG(this: TextSVGExportMixin & FabricText): string[] {\n    const offsets = this._getSVGLeftTopOffsets(),\n      textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n    return this._wrapSVGTextAndBg(textAndBg);\n  }\n\n  toSVG(this: TextSVGExportMixin & FabricText, reviver?: TSVGReviver): string {\n    return this._createBaseSVGMarkup(this._toSVG(), {\n      reviver,\n      noStyle: true,\n      withShadow: true,\n    });\n  }\n\n  private _getSVGLeftTopOffsets(this: TextSVGExportMixin & FabricText) {\n    return {\n      textLeft: -this.width / 2,\n      textTop: -this.height / 2,\n      lineTop: this.getHeightOfLine(0),\n    };\n  }\n\n  private _wrapSVGTextAndBg(\n    this: TextSVGExportMixin & FabricText,\n    {\n      textBgRects,\n      textSpans,\n    }: {\n      textSpans: string[];\n      textBgRects: string[];\n    },\n  ) {\n    const noShadow = true,\n      textDecoration = this.getSvgTextDecoration(this);\n    return [\n      textBgRects.join(''),\n      '\\t\\t<text xml:space=\"preserve\" ',\n      this.fontFamily\n        ? `font-family=\"${this.fontFamily.replace(dblQuoteRegex, \"'\")}\" `\n        : '',\n      this.fontSize ? `font-size=\"${this.fontSize}\" ` : '',\n      this.fontStyle ? `font-style=\"${this.fontStyle}\" ` : '',\n      this.fontWeight ? `font-weight=\"${this.fontWeight}\" ` : '',\n      textDecoration ? `text-decoration=\"${textDecoration}\" ` : '',\n      this.direction === 'rtl' ? `direction=\"${this.direction}\" ` : '',\n      'style=\"',\n      this.getSvgStyles(noShadow),\n      '\"',\n      this.addPaintOrder(),\n      ' >',\n      textSpans.join(''),\n      '</text>\\n',\n    ];\n  }\n\n  /**\n   * @private\n   * @param {Number} textTopOffset Text top offset\n   * @param {Number} textLeftOffset Text left offset\n   * @return {Object}\n   */\n  private _getSVGTextAndBg(\n    this: TextSVGExportMixin & FabricText,\n    textTopOffset: number,\n    textLeftOffset: number,\n  ) {\n    const textSpans: string[] = [],\n      textBgRects: string[] = [];\n    let height = textTopOffset,\n      lineOffset;\n\n    // bounding-box background\n    this.backgroundColor &&\n      textBgRects.push(\n        ...createSVGInlineRect(\n          this.backgroundColor,\n          -this.width / 2,\n          -this.height / 2,\n          this.width,\n          this.height,\n        ),\n      );\n\n    // text and text-background\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      lineOffset = this._getLineLeftOffset(i);\n      if (this.direction === 'rtl') {\n        lineOffset += this.width;\n      }\n      if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n        this._setSVGTextLineBg(\n          textBgRects,\n          i,\n          textLeftOffset + lineOffset,\n          height,\n        );\n      }\n      this._setSVGTextLineText(\n        textSpans,\n        i,\n        textLeftOffset + lineOffset,\n        height,\n      );\n      height += this.getHeightOfLine(i);\n    }\n\n    return {\n      textSpans,\n      textBgRects,\n    };\n  }\n\n  private _createTextCharSpan(\n    this: TextSVGExportMixin & FabricText,\n    char: string,\n    styleDecl: TextStyleDeclaration,\n    left: number,\n    top: number,\n  ) {\n    const styleProps = this.getSvgSpanStyles(\n        styleDecl,\n        char !== char.trim() || !!char.match(multipleSpacesRegex),\n      ),\n      fillStyles = styleProps ? `style=\"${styleProps}\"` : '',\n      dy = styleDecl.deltaY,\n      dySpan = dy ? ` dy=\"${toFixed(dy, config.NUM_FRACTION_DIGITS)}\" ` : '';\n\n    return `<tspan x=\"${toFixed(\n      left,\n      config.NUM_FRACTION_DIGITS,\n    )}\" y=\"${toFixed(\n      top,\n      config.NUM_FRACTION_DIGITS,\n    )}\" ${dySpan}${fillStyles}>${escapeXml(char)}</tspan>`;\n  }\n\n  private _setSVGTextLineText(\n    this: TextSVGExportMixin & FabricText,\n    textSpans: string[],\n    lineIndex: number,\n    textLeftOffset: number,\n    textTopOffset: number,\n  ) {\n    const lineHeight = this.getHeightOfLine(lineIndex),\n      isJustify = this.textAlign.includes(JUSTIFY),\n      line = this._textLines[lineIndex];\n    let actualStyle,\n      nextStyle,\n      charsToRender = '',\n      charBox,\n      style,\n      boxWidth = 0,\n      timeToRender;\n\n    textTopOffset +=\n      (lineHeight * (1 - this._fontSizeFraction)) / this.lineHeight;\n    for (let i = 0, len = line.length - 1; i <= len; i++) {\n      timeToRender = i === len || this.charSpacing;\n      charsToRender += line[i];\n      charBox = this.__charBounds[lineIndex][i];\n      if (boxWidth === 0) {\n        textLeftOffset += charBox.kernedWidth - charBox.width;\n        boxWidth += charBox.width;\n      } else {\n        boxWidth += charBox.kernedWidth;\n      }\n      if (isJustify && !timeToRender) {\n        if (this._reSpaceAndTab.test(line[i])) {\n          timeToRender = true;\n        }\n      }\n      if (!timeToRender) {\n        // if we have charSpacing, we render char by char\n        actualStyle =\n          actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n        nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n        timeToRender = hasStyleChanged(actualStyle, nextStyle, true);\n      }\n      if (timeToRender) {\n        style = this._getStyleDeclaration(lineIndex, i);\n        textSpans.push(\n          this._createTextCharSpan(\n            charsToRender,\n            style,\n            textLeftOffset,\n            textTopOffset,\n          ),\n        );\n        charsToRender = '';\n        actualStyle = nextStyle;\n        if (this.direction === 'rtl') {\n          textLeftOffset -= boxWidth;\n        } else {\n          textLeftOffset += boxWidth;\n        }\n        boxWidth = 0;\n      }\n    }\n  }\n\n  private _setSVGTextLineBg(\n    this: TextSVGExportMixin & FabricText,\n    textBgRects: (string | number)[],\n    i: number,\n    leftOffset: number,\n    textTopOffset: number,\n  ) {\n    const line = this._textLines[i],\n      heightOfLine = this.getHeightOfLine(i) / this.lineHeight;\n    let boxWidth = 0,\n      boxStart = 0,\n      currentColor,\n      lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n    for (let j = 0; j < line.length; j++) {\n      const { left, width, kernedWidth } = this.__charBounds[i][j];\n      currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n      if (currentColor !== lastColor) {\n        lastColor &&\n          textBgRects.push(\n            ...createSVGInlineRect(\n              lastColor,\n              leftOffset + boxStart,\n              textTopOffset,\n              boxWidth,\n              heightOfLine,\n            ),\n          );\n        boxStart = left;\n        boxWidth = width;\n        lastColor = currentColor;\n      } else {\n        boxWidth += kernedWidth;\n      }\n    }\n    currentColor &&\n      textBgRects.push(\n        ...createSVGInlineRect(\n          lastColor,\n          leftOffset + boxStart,\n          textTopOffset,\n          boxWidth,\n          heightOfLine,\n        ),\n      );\n  }\n\n  /**\n   * @deprecated unused\n   */\n  _getSVGLineTopOffset(\n    this: TextSVGExportMixin & FabricText,\n    lineIndex: number,\n  ) {\n    let lineTopOffset = 0,\n      j;\n    for (j = 0; j < lineIndex; j++) {\n      lineTopOffset += this.getHeightOfLine(j);\n    }\n    const lastHeight = this.getHeightOfLine(j);\n    return {\n      lineTop: lineTopOffset,\n      offset:\n        ((this._fontSizeMult - this._fontSizeFraction) * lastHeight) /\n        (this.lineHeight * this._fontSizeMult),\n    };\n  }\n\n  /**\n   * Returns styles-string for svg-export\n   * @param {Boolean} skipShadow a boolean to skip shadow filter output\n   * @return {String}\n   */\n  getSvgStyles(this: TextSVGExportMixin & FabricText, skipShadow?: boolean) {\n    return `${super.getSvgStyles(skipShadow)} white-space: pre;`;\n  }\n\n  /**\n   * Returns styles-string for svg-export\n   * @param {Object} style the object from which to retrieve style properties\n   * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n   * @return {String}\n   */\n  getSvgSpanStyles(\n    this: TextSVGExportMixin & FabricText,\n    style: TextStyleDeclaration,\n    useWhiteSpace?: boolean,\n  ) {\n    const {\n      fontFamily,\n      strokeWidth,\n      stroke,\n      fill,\n      fontSize,\n      fontStyle,\n      fontWeight,\n      deltaY,\n    } = style;\n\n    const textDecoration = this.getSvgTextDecoration(style);\n\n    return [\n      stroke ? colorPropToSVG(STROKE, stroke) : '',\n      strokeWidth ? `stroke-width: ${strokeWidth}; ` : '',\n      fontFamily\n        ? `font-family: ${\n            !fontFamily.includes(\"'\") && !fontFamily.includes('\"')\n              ? `'${fontFamily}'`\n              : fontFamily\n          }; `\n        : '',\n      fontSize ? `font-size: ${fontSize}px; ` : '',\n      fontStyle ? `font-style: ${fontStyle}; ` : '',\n      fontWeight ? `font-weight: ${fontWeight}; ` : '',\n      textDecoration ? `text-decoration: ${textDecoration}; ` : textDecoration,\n      fill ? colorPropToSVG(FILL, fill) : '',\n      deltaY ? `baseline-shift: ${-deltaY}; ` : '',\n      useWhiteSpace ? 'white-space: pre; ' : '',\n    ].join('');\n  }\n\n  /**\n   * Returns text-decoration property for svg-export\n   * @param {Object} style the object from which to retrieve style properties\n   * @return {String}\n   */\n  getSvgTextDecoration(\n    this: TextSVGExportMixin & FabricText,\n    style: TextStyleDeclaration,\n  ) {\n    return (['overline', 'underline', 'line-through'] as const)\n      .filter(\n        (decoration) =>\n          style[\n            decoration.replace('-', '') as\n              | 'overline'\n              | 'underline'\n              | 'linethrough'\n          ],\n      )\n      .join(' ');\n  }\n}\n","import { cache } from '../../cache';\nimport { DEFAULT_SVG_FONT_SIZE, FILL, STROKE } from '../../constants';\nimport type { ObjectEvents } from '../../EventTypeDefs';\nimport type {\n  CompleteTextStyleDeclaration,\n  TextStyle,\n  TextStyleDeclaration,\n} from './StyledText';\nimport { StyledText } from './StyledText';\nimport { SHARED_ATTRIBUTES } from '../../parser/attributes';\nimport { parseAttributes } from '../../parser/parseAttributes';\nimport type {\n  Abortable,\n  TCacheCanvasDimensions,\n  TClassProperties,\n  TFiller,\n  TOptions,\n} from '../../typedefs';\nimport { classRegistry } from '../../ClassRegistry';\nimport { graphemeSplit } from '../../util/lang_string';\nimport { createCanvasElementFor } from '../../util/misc/dom';\nimport type { TextStyleArray } from '../../util/misc/textStyles';\nimport {\n  hasStyleChanged,\n  stylesFromArray,\n  stylesToArray,\n} from '../../util/misc/textStyles';\nimport { getPathSegmentsInfo, getPointOnPath } from '../../util/path';\nimport { cacheProperties } from '../Object/FabricObject';\nimport type { Path } from '../Path';\nimport { TextSVGExportMixin } from './TextSVGExportMixin';\nimport { applyMixins } from '../../util/applyMixins';\nimport type { FabricObjectProps, SerializedObjectProps } from '../Object/types';\nimport type { StylePropertiesType } from './constants';\nimport {\n  additionalProps,\n  textDefaultValues,\n  textLayoutProperties,\n  JUSTIFY,\n  JUSTIFY_CENTER,\n  JUSTIFY_LEFT,\n  JUSTIFY_RIGHT,\n} from './constants';\nimport { CENTER, LEFT, RIGHT, TOP, BOTTOM } from '../../constants';\nimport { isFiller } from '../../util/typeAssertions';\nimport type { Gradient } from '../../gradient/Gradient';\nimport type { Pattern } from '../../Pattern';\nimport type { CSSRules } from '../../parser/typedefs';\n\nlet measuringContext: CanvasRenderingContext2D | null;\n\n/**\n * Return a context for measurement of text string.\n * if created it gets stored for reuse\n */\nfunction getMeasuringContext() {\n  if (!measuringContext) {\n    const canvas = createCanvasElementFor({\n      width: 0,\n      height: 0,\n    });\n    measuringContext = canvas.getContext('2d');\n  }\n  return measuringContext;\n}\n\nexport type TPathSide = 'left' | 'right';\n\nexport type TPathAlign = 'baseline' | 'center' | 'ascender' | 'descender';\n\nexport type TextLinesInfo = {\n  lines: string[];\n  graphemeLines: string[][];\n  graphemeText: string[];\n  _unwrappedLines: string[][];\n};\n\n/**\n * Measure and return the info of a single grapheme.\n * needs the the info of previous graphemes already filled\n * Override to customize measuring\n */\nexport type GraphemeBBox = {\n  width: number;\n  height: number;\n  kernedWidth: number;\n  left: number;\n  deltaY: number;\n  renderLeft?: number;\n  renderTop?: number;\n  angle?: number;\n};\n\n// @TODO this is not complete\ninterface UniqueTextProps {\n  charSpacing: number;\n  lineHeight: number;\n  fontSize: number;\n  fontWeight: string | number;\n  fontFamily: string;\n  fontStyle: string;\n  pathSide: TPathSide;\n  pathAlign: TPathAlign;\n  underline: boolean;\n  overline: boolean;\n  linethrough: boolean;\n  textAlign: string;\n  direction: CanvasDirection;\n  path?: Path;\n}\n\nexport interface SerializedTextProps\n  extends SerializedObjectProps,\n    UniqueTextProps {\n  styles: TextStyleArray | TextStyle;\n}\n\nexport interface TextProps extends FabricObjectProps, UniqueTextProps {\n  styles: TextStyle;\n}\n\n/**\n * Text class\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n */\nexport class FabricText<\n    Props extends TOptions<TextProps> = Partial<TextProps>,\n    SProps extends SerializedTextProps = SerializedTextProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends StyledText<Props, SProps, EventSpec>\n  implements UniqueTextProps\n{\n  /**\n   * Properties that requires a text layout recalculation when changed\n   * @type string[]\n   * @protected\n   */\n  static textLayoutProperties: string[] = textLayoutProperties;\n\n  /**\n   * @private\n   */\n  declare _reNewline: RegExp;\n\n  /**\n   * Use this regular expression to filter for whitespaces that is not a new line.\n   * Mostly used when text is 'justify' aligned.\n   * @private\n   */\n  declare _reSpacesAndTabs: RegExp;\n\n  /**\n   * Use this regular expression to filter for whitespace that is not a new line.\n   * Mostly used when text is 'justify' aligned.\n   * @private\n   */\n  declare _reSpaceAndTab: RegExp;\n\n  /**\n   * Use this regular expression to filter consecutive groups of non spaces.\n   * Mostly used when text is 'justify' aligned.\n   * @private\n   */\n  declare _reWords: RegExp;\n\n  declare text: string;\n\n  /**\n   * Font size (in pixels)\n   * @type Number\n   * @default\n   */\n  declare fontSize: number;\n\n  /**\n   * Font weight (e.g. bold, normal, 400, 600, 800)\n   * @type {(Number|String)}\n   * @default\n   */\n  declare fontWeight: string | number;\n\n  /**\n   * Font family\n   * @type String\n   * @default\n   */\n  declare fontFamily: string;\n\n  /**\n   * Text decoration underline.\n   * @type Boolean\n   * @default\n   */\n  declare underline: boolean;\n\n  /**\n   * Text decoration overline.\n   * @type Boolean\n   * @default\n   */\n  declare overline: boolean;\n\n  /**\n   * Text decoration linethrough.\n   * @type Boolean\n   * @default\n   */\n  declare linethrough: boolean;\n\n  /**\n   * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n   * \"justify-left\", \"justify-center\" or \"justify-right\".\n   * @type String\n   * @default\n   */\n  declare textAlign: string;\n\n  /**\n   * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n   * @type String\n   * @default\n   */\n  declare fontStyle: string;\n\n  /**\n   * Line height\n   * @type Number\n   * @default\n   */\n  declare lineHeight: number;\n\n  /**\n   * Superscript schema object (minimum overlap)\n   */\n  declare superscript: {\n    /**\n     * fontSize factor\n     * @default 0.6\n     */\n    size: number;\n    /**\n     * baseline-shift factor (upwards)\n     * @default -0.35\n     */\n    baseline: number;\n  };\n\n  /**\n   * Subscript schema object (minimum overlap)\n   */\n  declare subscript: {\n    /**\n     * fontSize factor\n     * @default 0.6\n     */\n    size: number;\n    /**\n     * baseline-shift factor (downwards)\n     * @default 0.11\n     */\n    baseline: number;\n  };\n\n  /**\n   * Background color of text lines\n   * @type String\n   * @default\n   */\n  declare textBackgroundColor: string;\n\n  declare styles: TextStyle;\n\n  /**\n   * Path that the text should follow.\n   * since 4.6.0 the path will be drawn automatically.\n   * if you want to make the path visible, give it a stroke and strokeWidth or fill value\n   * if you want it to be hidden, assign visible = false to the path.\n   * This feature is in BETA, and SVG import/export is not yet supported.\n   * @type Path\n   * @example\n   * const textPath = new Text('Text on a path', {\n   *     top: 150,\n   *     left: 150,\n   *     textAlign: 'center',\n   *     charSpacing: -50,\n   *     path: new Path('M 0 0 C 50 -100 150 -100 200 0', {\n   *         strokeWidth: 1,\n   *         visible: false\n   *     }),\n   *     pathSide: 'left',\n   *     pathStartOffset: 0\n   * });\n   * @default\n   */\n  declare path?: Path;\n\n  /**\n   * Offset amount for text path starting position\n   * Only used when text has a path\n   * @type Number\n   * @default\n   */\n  declare pathStartOffset: number;\n\n  /**\n   * Which side of the path the text should be drawn on.\n   * Only used when text has a path\n   * @type {TPathSide} 'left|right'\n   * @default\n   */\n  declare pathSide: TPathSide;\n\n  /**\n   * How text is aligned to the path. This property determines\n   * the perpendicular position of each character relative to the path.\n   * (one of \"baseline\", \"center\", \"ascender\", \"descender\")\n   * This feature is in BETA, and its behavior may change\n   * @type TPathAlign\n   * @default\n   */\n  declare pathAlign: TPathAlign;\n\n  /**\n   * @private\n   */\n  declare _fontSizeFraction: number;\n\n  /**\n   * @private\n   */\n  declare offsets: { underline: number; linethrough: number; overline: number };\n\n  /**\n   * Text Line proportion to font Size (in pixels)\n   * @type Number\n   * @default\n   */\n  declare _fontSizeMult: number;\n\n  /**\n   * additional space between characters\n   * expressed in thousands of em unit\n   * @type Number\n   * @default\n   */\n  declare charSpacing: number;\n\n  /**\n   * Baseline shift, styles only, keep at 0 for the main text object\n   * @type {Number}\n   * @default\n   */\n  declare deltaY: number;\n\n  /**\n   * WARNING: EXPERIMENTAL. NOT SUPPORTED YET\n   * determine the direction of the text.\n   * This has to be set manually together with textAlign and originX for proper\n   * experience.\n   * some interesting link for the future\n   * https://www.w3.org/International/questions/qa-bidi-unicode-controls\n   * @since 4.5.0\n   * @type {CanvasDirection} 'ltr|rtl'\n   * @default\n   */\n  declare direction: CanvasDirection;\n\n  /**\n   * contains characters bounding boxes\n   * This variable is considered to be protected.\n   * But for how mixins are implemented right now, we can't leave it private\n   * @protected\n   */\n  __charBounds: GraphemeBBox[][] = [];\n\n  /**\n   * use this size when measuring text. To avoid IE11 rounding errors\n   * @type {Number}\n   * @default\n   * @readonly\n   * @private\n   */\n  declare CACHE_FONT_SIZE: number;\n\n  /**\n   * contains the min text width to avoid getting 0\n   * @type {Number}\n   * @default\n   */\n  declare MIN_TEXT_WIDTH: number;\n\n  /**\n   * contains the the text of the object, divided in lines as they are displayed\n   * on screen. Wrapping will divide the text independently of line breaks\n   * @type {string[]}\n   * @default\n   */\n  declare textLines: string[];\n\n  /**\n   * same as textlines, but each line is an array of graphemes as split by splitByGrapheme\n   * @type {string[]}\n   * @default\n   */\n  declare _textLines: string[][];\n\n  declare _unwrappedTextLines: string[][];\n  declare _text: string[];\n  declare cursorWidth: number;\n  declare __lineHeights: number[];\n  declare __lineWidths: number[];\n  declare initialized?: true;\n\n  static cacheProperties = [...cacheProperties, ...additionalProps];\n\n  static ownDefaults = textDefaultValues;\n\n  static type = 'Text';\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...FabricText.ownDefaults };\n  }\n\n  constructor(text: string, options?: Props) {\n    super();\n    Object.assign(this, FabricText.ownDefaults);\n    this.setOptions(options);\n    if (!this.styles) {\n      this.styles = {};\n    }\n    this.text = text;\n    this.initialized = true;\n    if (this.path) {\n      this.setPathInfo();\n    }\n    this.initDimensions();\n    this.setCoords();\n  }\n\n  /**\n   * If text has a path, it will add the extra information needed\n   * for path and text calculations\n   */\n  setPathInfo() {\n    const path = this.path;\n    if (path) {\n      path.segmentsInfo = getPathSegmentsInfo(path.path);\n    }\n  }\n\n  /**\n   * @private\n   * Divides text into lines of text and lines of graphemes.\n   */\n  _splitText(): TextLinesInfo {\n    const newLines = this._splitTextIntoLines(this.text);\n    this.textLines = newLines.lines;\n    this._textLines = newLines.graphemeLines;\n    this._unwrappedTextLines = newLines._unwrappedLines;\n    this._text = newLines.graphemeText;\n    return newLines;\n  }\n\n  /**\n   * Initialize or update text dimensions.\n   * Updates this.width and this.height with the proper values.\n   * Does not return dimensions.\n   */\n  initDimensions() {\n    this._splitText();\n    this._clearCache();\n    this.dirty = true;\n    if (this.path) {\n      this.width = this.path.width;\n      this.height = this.path.height;\n    } else {\n      this.width =\n        this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n      this.height = this.calcTextHeight();\n    }\n    if (this.textAlign.includes(JUSTIFY)) {\n      // once text is measured we need to make space fatter to make justified text.\n      this.enlargeSpaces();\n    }\n  }\n\n  /**\n   * Enlarge space boxes and shift the others\n   */\n  enlargeSpaces() {\n    let diffSpace,\n      currentLineWidth,\n      numberOfSpaces,\n      accumulatedSpace,\n      line,\n      charBound,\n      spaces;\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      if (\n        this.textAlign !== JUSTIFY &&\n        (i === len - 1 || this.isEndOfWrapping(i))\n      ) {\n        continue;\n      }\n      accumulatedSpace = 0;\n      line = this._textLines[i];\n      currentLineWidth = this.getLineWidth(i);\n      if (\n        currentLineWidth < this.width &&\n        (spaces = this.textLines[i].match(this._reSpacesAndTabs))\n      ) {\n        numberOfSpaces = spaces.length;\n        diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n        for (let j = 0; j <= line.length; j++) {\n          charBound = this.__charBounds[i][j];\n          if (this._reSpaceAndTab.test(line[j])) {\n            charBound.width += diffSpace;\n            charBound.kernedWidth += diffSpace;\n            charBound.left += accumulatedSpace;\n            accumulatedSpace += diffSpace;\n          } else {\n            charBound.left += accumulatedSpace;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Detect if the text line is ended with an hard break\n   * text and itext do not have wrapping, return false\n   * @return {Boolean}\n   */\n  isEndOfWrapping(lineIndex: number): boolean {\n    return lineIndex === this._textLines.length - 1;\n  }\n\n  /**\n   * Detect if a line has a linebreak and so we need to account for it when moving\n   * and counting style.\n   * It return always 1 for text and Itext. Textbox has its own implementation\n   * @return Number\n   */\n  missingNewlineOffset(lineIndex: number, skipWrapping?: boolean): 0 | 1;\n  missingNewlineOffset(_lineIndex: number): 1 {\n    return 1;\n  }\n\n  /**\n   * Returns 2d representation (lineIndex and charIndex) of cursor\n   * @param {Number} selectionStart\n   * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. useful to manage styles.\n   */\n  get2DCursorLocation(selectionStart: number, skipWrapping?: boolean) {\n    const lines = skipWrapping ? this._unwrappedTextLines : this._textLines;\n    let i: number;\n    for (i = 0; i < lines.length; i++) {\n      if (selectionStart <= lines[i].length) {\n        return {\n          lineIndex: i,\n          charIndex: selectionStart,\n        };\n      }\n      selectionStart -=\n        lines[i].length + this.missingNewlineOffset(i, skipWrapping);\n    }\n    return {\n      lineIndex: i - 1,\n      charIndex:\n        lines[i - 1].length < selectionStart\n          ? lines[i - 1].length\n          : selectionStart,\n    };\n  }\n\n  /**\n   * Returns string representation of an instance\n   * @return {String} String representation of text object\n   */\n  toString(): string {\n    return `#<Text (${this.complexity()}): { \"text\": \"${\n      this.text\n    }\", \"fontFamily\": \"${this.fontFamily}\" }>`;\n  }\n\n  /**\n   * Return the dimension and the zoom level needed to create a cache canvas\n   * big enough to host the object to be cached.\n   * @private\n   * @param {Object} dim.x width of object to be cached\n   * @param {Object} dim.y height of object to be cached\n   * @return {Object}.width width of canvas\n   * @return {Object}.height height of canvas\n   * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   */\n  _getCacheCanvasDimensions(): TCacheCanvasDimensions {\n    const dims = super._getCacheCanvasDimensions();\n    const fontSize = this.fontSize;\n    dims.width += fontSize * dims.zoomX;\n    dims.height += fontSize * dims.zoomY;\n    return dims;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const path = this.path;\n    path && !path.isNotVisible() && path._render(ctx);\n    this._setTextStyles(ctx);\n    this._renderTextLinesBackground(ctx);\n    this._renderTextDecoration(ctx, 'underline');\n    this._renderText(ctx);\n    this._renderTextDecoration(ctx, 'overline');\n    this._renderTextDecoration(ctx, 'linethrough');\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderText(ctx: CanvasRenderingContext2D) {\n    if (this.paintFirst === STROKE) {\n      this._renderTextStroke(ctx);\n      this._renderTextFill(ctx);\n    } else {\n      this._renderTextFill(ctx);\n      this._renderTextStroke(ctx);\n    }\n  }\n\n  /**\n   * Set the font parameter of the context with the object properties or with charStyle\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Object} [charStyle] object with font style properties\n   * @param {String} [charStyle.fontFamily] Font Family\n   * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n   * @param {String} [charStyle.fontWeight] Font weight\n   * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n   */\n  _setTextStyles(\n    ctx: CanvasRenderingContext2D,\n    charStyle?: any,\n    forMeasuring?: boolean,\n  ) {\n    ctx.textBaseline = 'alphabetic';\n    if (this.path) {\n      switch (this.pathAlign) {\n        case CENTER:\n          ctx.textBaseline = 'middle';\n          break;\n        case 'ascender':\n          ctx.textBaseline = TOP;\n          break;\n        case 'descender':\n          ctx.textBaseline = BOTTOM;\n          break;\n      }\n    }\n    ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n  }\n\n  /**\n   * calculate and return the text Width measuring each line.\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @return {Number} Maximum width of Text object\n   */\n  calcTextWidth(): number {\n    let maxWidth = this.getLineWidth(0);\n\n    for (let i = 1, len = this._textLines.length; i < len; i++) {\n      const currentLineWidth = this.getLineWidth(i);\n      if (currentLineWidth > maxWidth) {\n        maxWidth = currentLineWidth;\n      }\n    }\n    return maxWidth;\n  }\n\n  /**\n   * @private\n   * @param {String} method Method name (\"fillText\" or \"strokeText\")\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {String} line Text to render\n   * @param {Number} left Left position of text\n   * @param {Number} top Top position of text\n   * @param {Number} lineIndex Index of a line in a text\n   */\n  _renderTextLine(\n    method: 'fillText' | 'strokeText',\n    ctx: CanvasRenderingContext2D,\n    line: string[],\n    left: number,\n    top: number,\n    lineIndex: number,\n  ) {\n    this._renderChars(method, ctx, line, left, top, lineIndex);\n  }\n\n  /**\n   * Renders the text background for lines, taking care of style\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextLinesBackground(ctx: CanvasRenderingContext2D) {\n    if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n      return;\n    }\n    const originalFill = ctx.fillStyle,\n      leftOffset = this._getLeftOffset();\n    let lineTopOffset = this._getTopOffset();\n\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      const heightOfLine = this.getHeightOfLine(i);\n      if (\n        !this.textBackgroundColor &&\n        !this.styleHas('textBackgroundColor', i)\n      ) {\n        lineTopOffset += heightOfLine;\n        continue;\n      }\n      const jlen = this._textLines[i].length;\n      const lineLeftOffset = this._getLineLeftOffset(i);\n      let boxWidth = 0;\n      let boxStart = 0;\n      let drawStart;\n      let currentColor;\n      let lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n      for (let j = 0; j < jlen; j++) {\n        // at this point charbox are either standard or full with pathInfo if there is a path.\n        const charBox = this.__charBounds[i][j] as Required<GraphemeBBox>;\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n        if (this.path) {\n          ctx.save();\n          ctx.translate(charBox.renderLeft, charBox.renderTop);\n          ctx.rotate(charBox.angle);\n          ctx.fillStyle = currentColor;\n          currentColor &&\n            ctx.fillRect(\n              -charBox.width / 2,\n              (-heightOfLine / this.lineHeight) * (1 - this._fontSizeFraction),\n              charBox.width,\n              heightOfLine / this.lineHeight,\n            );\n          ctx.restore();\n        } else if (currentColor !== lastColor) {\n          drawStart = leftOffset + lineLeftOffset + boxStart;\n          if (this.direction === 'rtl') {\n            drawStart = this.width - drawStart - boxWidth;\n          }\n          ctx.fillStyle = lastColor;\n          lastColor &&\n            ctx.fillRect(\n              drawStart,\n              lineTopOffset,\n              boxWidth,\n              heightOfLine / this.lineHeight,\n            );\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      if (currentColor && !this.path) {\n        drawStart = leftOffset + lineLeftOffset + boxStart;\n        if (this.direction === 'rtl') {\n          drawStart = this.width - drawStart - boxWidth;\n        }\n        ctx.fillStyle = currentColor;\n        ctx.fillRect(\n          drawStart,\n          lineTopOffset,\n          boxWidth,\n          heightOfLine / this.lineHeight,\n        );\n      }\n      lineTopOffset += heightOfLine;\n    }\n    ctx.fillStyle = originalFill;\n    // if there is text background color no\n    // other shadows should be casted\n    this._removeShadow(ctx);\n  }\n\n  /**\n   * measure and return the width of a single character.\n   * possibly overridden to accommodate different measure logic or\n   * to hook some external lib for character measurement\n   * @private\n   * @param {String} _char, char to be measured\n   * @param {Object} charStyle style of char to be measured\n   * @param {String} [previousChar] previous char\n   * @param {Object} [prevCharStyle] style of previous char\n   */\n  _measureChar(\n    _char: string,\n    charStyle: CompleteTextStyleDeclaration,\n    previousChar: string | undefined,\n    prevCharStyle: CompleteTextStyleDeclaration | Record<string, never>,\n  ) {\n    const fontCache = cache.getFontCache(charStyle),\n      fontDeclaration = this._getFontDeclaration(charStyle),\n      couple = previousChar + _char,\n      stylesAreEqual =\n        previousChar &&\n        fontDeclaration === this._getFontDeclaration(prevCharStyle),\n      fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE;\n    let width: number | undefined,\n      coupleWidth: number | undefined,\n      previousWidth: number | undefined,\n      kernedWidth: number | undefined;\n\n    if (previousChar && fontCache[previousChar] !== undefined) {\n      previousWidth = fontCache[previousChar];\n    }\n    if (fontCache[_char] !== undefined) {\n      kernedWidth = width = fontCache[_char];\n    }\n    if (stylesAreEqual && fontCache[couple] !== undefined) {\n      coupleWidth = fontCache[couple];\n      kernedWidth = coupleWidth - previousWidth!;\n    }\n    if (\n      width === undefined ||\n      previousWidth === undefined ||\n      coupleWidth === undefined\n    ) {\n      const ctx = getMeasuringContext()!;\n      // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n      this._setTextStyles(ctx, charStyle, true);\n      if (width === undefined) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n      if (stylesAreEqual && coupleWidth === undefined) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        // safe to use the non-null since if undefined we defined it before.\n        kernedWidth = coupleWidth - previousWidth!;\n      }\n    }\n    return {\n      width: width * fontMultiplier,\n      kernedWidth: kernedWidth! * fontMultiplier,\n    };\n  }\n\n  /**\n   * Computes height of character at given position\n   * @param {Number} line the line index number\n   * @param {Number} _char the character index number\n   * @return {Number} fontSize of the character\n   */\n  getHeightOfChar(line: number, _char: number): number {\n    return this.getValueOfPropertyAt(line, _char, 'fontSize');\n  }\n\n  /**\n   * measure a text line measuring all characters.\n   * @param {Number} lineIndex line number\n   */\n  measureLine(lineIndex: number) {\n    const lineInfo = this._measureLine(lineIndex);\n    if (this.charSpacing !== 0) {\n      lineInfo.width -= this._getWidthOfCharSpacing();\n    }\n    if (lineInfo.width < 0) {\n      lineInfo.width = 0;\n    }\n    return lineInfo;\n  }\n\n  /**\n   * measure every grapheme of a line, populating __charBounds\n   * @param {Number} lineIndex\n   * @return {Object} object.width total width of characters\n   * @return {Object} object.numOfSpaces length of chars that match this._reSpacesAndTabs\n   */\n  _measureLine(lineIndex: number) {\n    let width = 0,\n      prevGrapheme: string | undefined,\n      graphemeInfo: GraphemeBBox | undefined;\n\n    const reverse = this.pathSide === RIGHT,\n      path = this.path,\n      line = this._textLines[lineIndex],\n      llength = line.length,\n      lineBounds = new Array<GraphemeBBox>(llength);\n\n    this.__charBounds[lineIndex] = lineBounds;\n    for (let i = 0; i < llength; i++) {\n      const grapheme = line[i];\n      graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n      lineBounds[i] = graphemeInfo;\n      width += graphemeInfo.kernedWidth;\n      prevGrapheme = grapheme;\n    }\n    // this latest bound box represent the last character of the line\n    // to simplify cursor handling in interactive mode.\n    lineBounds[llength] = {\n      left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n      width: 0,\n      kernedWidth: 0,\n      height: this.fontSize,\n      deltaY: 0,\n    } as GraphemeBBox;\n    if (path && path.segmentsInfo) {\n      let positionInPath = 0;\n      const totalPathLength =\n        path.segmentsInfo[path.segmentsInfo.length - 1].length;\n      switch (this.textAlign) {\n        case LEFT:\n          positionInPath = reverse ? totalPathLength - width : 0;\n          break;\n        case CENTER:\n          positionInPath = (totalPathLength - width) / 2;\n          break;\n        case RIGHT:\n          positionInPath = reverse ? 0 : totalPathLength - width;\n          break;\n        //todo - add support for justify\n      }\n      positionInPath += this.pathStartOffset * (reverse ? -1 : 1);\n      for (\n        let i = reverse ? llength - 1 : 0;\n        reverse ? i >= 0 : i < llength;\n        reverse ? i-- : i++\n      ) {\n        graphemeInfo = lineBounds[i];\n        if (positionInPath > totalPathLength) {\n          positionInPath %= totalPathLength;\n        } else if (positionInPath < 0) {\n          positionInPath += totalPathLength;\n        }\n        // it would probably much faster to send all the grapheme position for a line\n        // and calculate path position/angle at once.\n        this._setGraphemeOnPath(positionInPath, graphemeInfo);\n        positionInPath += graphemeInfo.kernedWidth;\n      }\n    }\n    return { width: width, numOfSpaces: 0 };\n  }\n\n  /**\n   * Calculate the angle  and the left,top position of the char that follow a path.\n   * It appends it to graphemeInfo to be reused later at rendering\n   * @private\n   * @param {Number} positionInPath to be measured\n   * @param {GraphemeBBox} graphemeInfo current grapheme box information\n   * @param {Object} startingPoint position of the point\n   */\n  _setGraphemeOnPath(positionInPath: number, graphemeInfo: GraphemeBBox) {\n    const centerPosition = positionInPath + graphemeInfo.kernedWidth / 2,\n      path = this.path!;\n\n    // we are at currentPositionOnPath. we want to know what point on the path is.\n    const info = getPointOnPath(path.path, centerPosition, path.segmentsInfo)!;\n    graphemeInfo.renderLeft = info.x - path.pathOffset.x;\n    graphemeInfo.renderTop = info.y - path.pathOffset.y;\n    graphemeInfo.angle = info.angle + (this.pathSide === RIGHT ? Math.PI : 0);\n  }\n\n  /**\n   *\n   * @param {String} grapheme to be measured\n   * @param {Number} lineIndex index of the line where the char is\n   * @param {Number} charIndex position in the line\n   * @param {String} [prevGrapheme] character preceding the one to be measured\n   * @returns {GraphemeBBox} grapheme bbox\n   */\n  _getGraphemeBox(\n    grapheme: string,\n    lineIndex: number,\n    charIndex: number,\n    prevGrapheme?: string,\n    skipLeft?: boolean,\n  ): GraphemeBBox {\n    const style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n      prevStyle = prevGrapheme\n        ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1)\n        : {},\n      info = this._measureChar(grapheme, style, prevGrapheme, prevStyle);\n    let kernedWidth = info.kernedWidth,\n      width = info.width,\n      charSpacing;\n\n    if (this.charSpacing !== 0) {\n      charSpacing = this._getWidthOfCharSpacing();\n      width += charSpacing;\n      kernedWidth += charSpacing;\n    }\n\n    const box: GraphemeBBox = {\n      width,\n      left: 0,\n      height: style.fontSize,\n      kernedWidth,\n      deltaY: style.deltaY,\n    };\n    if (charIndex > 0 && !skipLeft) {\n      const previousBox = this.__charBounds[lineIndex][charIndex - 1];\n      box.left =\n        previousBox.left + previousBox.width + info.kernedWidth - info.width;\n    }\n    return box;\n  }\n\n  /**\n   * Calculate height of line at 'lineIndex'\n   * @param {Number} lineIndex index of line to calculate\n   * @return {Number}\n   */\n  getHeightOfLine(lineIndex: number): number {\n    if (this.__lineHeights[lineIndex]) {\n      return this.__lineHeights[lineIndex];\n    }\n\n    // char 0 is measured before the line cycle because it needs to char\n    // emptylines\n    let maxHeight = this.getHeightOfChar(lineIndex, 0);\n    for (let i = 1, len = this._textLines[lineIndex].length; i < len; i++) {\n      maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n    }\n\n    return (this.__lineHeights[lineIndex] =\n      maxHeight * this.lineHeight * this._fontSizeMult);\n  }\n\n  /**\n   * Calculate text box height\n   */\n  calcTextHeight() {\n    let lineHeight,\n      height = 0;\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      lineHeight = this.getHeightOfLine(i);\n      height += i === len - 1 ? lineHeight / this.lineHeight : lineHeight;\n    }\n    return height;\n  }\n\n  /**\n   * @private\n   * @return {Number} Left offset\n   */\n  _getLeftOffset(): number {\n    return this.direction === 'ltr' ? -this.width / 2 : this.width / 2;\n  }\n\n  /**\n   * @private\n   * @return {Number} Top offset\n   */\n  _getTopOffset(): number {\n    return -this.height / 2;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {String} method Method name (\"fillText\" or \"strokeText\")\n   */\n  _renderTextCommon(\n    ctx: CanvasRenderingContext2D,\n    method: 'fillText' | 'strokeText',\n  ) {\n    ctx.save();\n    let lineHeights = 0;\n    const left = this._getLeftOffset(),\n      top = this._getTopOffset();\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      const heightOfLine = this.getHeightOfLine(i),\n        maxHeight = heightOfLine / this.lineHeight,\n        leftOffset = this._getLineLeftOffset(i);\n      this._renderTextLine(\n        method,\n        ctx,\n        this._textLines[i],\n        left + leftOffset,\n        top + lineHeights + maxHeight,\n        i,\n      );\n      lineHeights += heightOfLine;\n    }\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextFill(ctx: CanvasRenderingContext2D) {\n    if (!this.fill && !this.styleHas(FILL)) {\n      return;\n    }\n\n    this._renderTextCommon(ctx, 'fillText');\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextStroke(ctx: CanvasRenderingContext2D) {\n    if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n      return;\n    }\n\n    if (this.shadow && !this.shadow.affectStroke) {\n      this._removeShadow(ctx);\n    }\n\n    ctx.save();\n    this._setLineDash(ctx, this.strokeDashArray);\n    ctx.beginPath();\n    this._renderTextCommon(ctx, 'strokeText');\n    ctx.closePath();\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {String} method fillText or strokeText.\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Array} line Content of the line, splitted in an array by grapheme\n   * @param {Number} left\n   * @param {Number} top\n   * @param {Number} lineIndex\n   */\n  _renderChars(\n    method: 'fillText' | 'strokeText',\n    ctx: CanvasRenderingContext2D,\n    line: Array<any>,\n    left: number,\n    top: number,\n    lineIndex: number,\n  ) {\n    const lineHeight = this.getHeightOfLine(lineIndex),\n      isJustify = this.textAlign.includes(JUSTIFY),\n      path = this.path,\n      shortCut =\n        !isJustify &&\n        this.charSpacing === 0 &&\n        this.isEmptyStyles(lineIndex) &&\n        !path,\n      isLtr = this.direction === 'ltr',\n      sign = this.direction === 'ltr' ? 1 : -1,\n      // this was changed in the PR #7674\n      // currentDirection = ctx.canvas.getAttribute('dir');\n      currentDirection = ctx.direction;\n\n    let actualStyle,\n      nextStyle,\n      charsToRender = '',\n      charBox,\n      boxWidth = 0,\n      timeToRender,\n      drawingLeft;\n\n    ctx.save();\n    if (currentDirection !== this.direction) {\n      ctx.canvas.setAttribute('dir', isLtr ? 'ltr' : 'rtl');\n      ctx.direction = isLtr ? 'ltr' : 'rtl';\n      ctx.textAlign = isLtr ? LEFT : RIGHT;\n    }\n    top -= (lineHeight * this._fontSizeFraction) / this.lineHeight;\n    if (shortCut) {\n      // render all the line in one pass without checking\n      // drawingLeft = isLtr ? left : left - this.getLineWidth(lineIndex);\n      this._renderChar(method, ctx, lineIndex, 0, line.join(''), left, top);\n      ctx.restore();\n      return;\n    }\n    for (let i = 0, len = line.length - 1; i <= len; i++) {\n      timeToRender = i === len || this.charSpacing || path;\n      charsToRender += line[i];\n      charBox = this.__charBounds[lineIndex][i] as Required<GraphemeBBox>;\n      if (boxWidth === 0) {\n        left += sign * (charBox.kernedWidth - charBox.width);\n        boxWidth += charBox.width;\n      } else {\n        boxWidth += charBox.kernedWidth;\n      }\n      if (isJustify && !timeToRender) {\n        if (this._reSpaceAndTab.test(line[i])) {\n          timeToRender = true;\n        }\n      }\n      if (!timeToRender) {\n        // if we have charSpacing, we render char by char\n        actualStyle =\n          actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n        nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n        timeToRender = hasStyleChanged(actualStyle, nextStyle, false);\n      }\n      if (timeToRender) {\n        if (path) {\n          ctx.save();\n          ctx.translate(charBox.renderLeft, charBox.renderTop);\n          ctx.rotate(charBox.angle);\n          this._renderChar(\n            method,\n            ctx,\n            lineIndex,\n            i,\n            charsToRender,\n            -boxWidth / 2,\n            0,\n          );\n          ctx.restore();\n        } else {\n          drawingLeft = left;\n          this._renderChar(\n            method,\n            ctx,\n            lineIndex,\n            i,\n            charsToRender,\n            drawingLeft,\n            top,\n          );\n        }\n        charsToRender = '';\n        actualStyle = nextStyle;\n        left += sign * boxWidth;\n        boxWidth = 0;\n      }\n    }\n    ctx.restore();\n  }\n\n  /**\n   * This function try to patch the missing gradientTransform on canvas gradients.\n   * transforming a context to transform the gradient, is going to transform the stroke too.\n   * we want to transform the gradient but not the stroke operation, so we create\n   * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\n   * this method has drawbacks: is slow, is in low resolution, needs a patch for when the size\n   * is limited.\n   * @private\n   * @param {TFiller} filler a fabric gradient instance\n   * @return {CanvasPattern} a pattern to use as fill/stroke style\n   */\n  _applyPatternGradientTransformText(filler: TFiller) {\n    // TODO: verify compatibility with strokeUniform\n    const width = this.width + this.strokeWidth,\n      height = this.height + this.strokeWidth,\n      pCanvas = createCanvasElementFor({\n        width,\n        height,\n      }),\n      pCtx = pCanvas.getContext('2d')!;\n    pCanvas.width = width;\n    pCanvas.height = height;\n    pCtx.beginPath();\n    pCtx.moveTo(0, 0);\n    pCtx.lineTo(width, 0);\n    pCtx.lineTo(width, height);\n    pCtx.lineTo(0, height);\n    pCtx.closePath();\n    pCtx.translate(width / 2, height / 2);\n    pCtx.fillStyle = filler.toLive(pCtx)!;\n    this._applyPatternGradientTransform(pCtx, filler);\n    pCtx.fill();\n    return pCtx.createPattern(pCanvas, 'no-repeat')!;\n  }\n\n  handleFiller<T extends 'fill' | 'stroke'>(\n    ctx: CanvasRenderingContext2D,\n    property: `${T}Style`,\n    filler: TFiller | string,\n  ): { offsetX: number; offsetY: number } {\n    let offsetX: number, offsetY: number;\n    if (isFiller(filler)) {\n      if (\n        (filler as Gradient<'linear'>).gradientUnits === 'percentage' ||\n        (filler as Gradient<'linear'>).gradientTransform ||\n        (filler as Pattern).patternTransform\n      ) {\n        // need to transform gradient in a pattern.\n        // this is a slow process. If you are hitting this codepath, and the object\n        // is not using caching, you should consider switching it on.\n        // we need a canvas as big as the current object caching canvas.\n        offsetX = -this.width / 2;\n        offsetY = -this.height / 2;\n        ctx.translate(offsetX, offsetY);\n        ctx[property] = this._applyPatternGradientTransformText(filler);\n        return { offsetX, offsetY };\n      } else {\n        // is a simple gradient or pattern\n        ctx[property] = filler.toLive(ctx)!;\n        return this._applyPatternGradientTransform(ctx, filler);\n      }\n    } else {\n      // is a color\n      ctx[property] = filler;\n    }\n    return { offsetX: 0, offsetY: 0 };\n  }\n\n  /**\n   * This function prepare the canvas for a stroke style, and stroke and strokeWidth\n   * need to be sent in as defined\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {CompleteTextStyleDeclaration} style with stroke and strokeWidth defined\n   * @returns\n   */\n  _setStrokeStyles(\n    ctx: CanvasRenderingContext2D,\n    {\n      stroke,\n      strokeWidth,\n    }: Pick<CompleteTextStyleDeclaration, 'stroke' | 'strokeWidth'>,\n  ) {\n    ctx.lineWidth = strokeWidth;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.lineDashOffset = this.strokeDashOffset;\n    ctx.lineJoin = this.strokeLineJoin;\n    ctx.miterLimit = this.strokeMiterLimit;\n    return this.handleFiller(ctx, 'strokeStyle', stroke!);\n  }\n\n  /**\n   * This function prepare the canvas for a ill style, and fill\n   * need to be sent in as defined\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {CompleteTextStyleDeclaration} style with ill defined\n   * @returns\n   */\n  _setFillStyles(ctx: CanvasRenderingContext2D, { fill }: Pick<this, 'fill'>) {\n    return this.handleFiller(ctx, 'fillStyle', fill!);\n  }\n\n  /**\n   * @private\n   * @param {String} method\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @param {String} _char\n   * @param {Number} left Left coordinate\n   * @param {Number} top Top coordinate\n   * @param {Number} lineHeight Height of the line\n   */\n  _renderChar(\n    method: 'fillText' | 'strokeText',\n    ctx: CanvasRenderingContext2D,\n    lineIndex: number,\n    charIndex: number,\n    _char: string,\n    left: number,\n    top: number,\n  ) {\n    const decl = this._getStyleDeclaration(lineIndex, charIndex),\n      fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n      shouldFill = method === 'fillText' && fullDecl.fill,\n      shouldStroke =\n        method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n    if (!shouldStroke && !shouldFill) {\n      return;\n    }\n    ctx.save();\n\n    ctx.font = this._getFontDeclaration(fullDecl);\n\n    if (decl.textBackgroundColor) {\n      this._removeShadow(ctx);\n    }\n    if (decl.deltaY) {\n      top += decl.deltaY;\n    }\n\n    if (shouldFill) {\n      const fillOffsets = this._setFillStyles(ctx, fullDecl);\n      ctx.fillText(\n        _char,\n        left - fillOffsets.offsetX,\n        top - fillOffsets.offsetY,\n      );\n    }\n\n    if (shouldStroke) {\n      const strokeOffsets = this._setStrokeStyles(ctx, fullDecl);\n      ctx.strokeText(\n        _char,\n        left - strokeOffsets.offsetX,\n        top - strokeOffsets.offsetY,\n      );\n    }\n\n    ctx.restore();\n  }\n\n  /**\n   * Turns the character into a 'superior figure' (i.e. 'superscript')\n   * @param {Number} start selection start\n   * @param {Number} end selection end\n   */\n  setSuperscript(start: number, end: number) {\n    this._setScript(start, end, this.superscript);\n  }\n\n  /**\n   * Turns the character into an 'inferior figure' (i.e. 'subscript')\n   * @param {Number} start selection start\n   * @param {Number} end selection end\n   */\n  setSubscript(start: number, end: number) {\n    this._setScript(start, end, this.subscript);\n  }\n\n  /**\n   * Applies 'schema' at given position\n   * @private\n   * @param {Number} start selection start\n   * @param {Number} end selection end\n   * @param {Number} schema\n   */\n  protected _setScript(\n    start: number,\n    end: number,\n    schema: {\n      size: number;\n      baseline: number;\n    },\n  ) {\n    const loc = this.get2DCursorLocation(start, true),\n      fontSize = this.getValueOfPropertyAt(\n        loc.lineIndex,\n        loc.charIndex,\n        'fontSize',\n      ),\n      dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\n      style = {\n        fontSize: fontSize * schema.size,\n        deltaY: dy + fontSize * schema.baseline,\n      };\n    this.setSelectionStyles(style, start, end);\n  }\n\n  /**\n   * @private\n   * @param {Number} lineIndex index text line\n   * @return {Number} Line left offset\n   */\n  _getLineLeftOffset(lineIndex: number): number {\n    const lineWidth = this.getLineWidth(lineIndex),\n      lineDiff = this.width - lineWidth,\n      textAlign = this.textAlign,\n      direction = this.direction,\n      isEndOfWrapping = this.isEndOfWrapping(lineIndex);\n    let leftOffset = 0;\n    if (\n      textAlign === JUSTIFY ||\n      (textAlign === JUSTIFY_CENTER && !isEndOfWrapping) ||\n      (textAlign === JUSTIFY_RIGHT && !isEndOfWrapping) ||\n      (textAlign === JUSTIFY_LEFT && !isEndOfWrapping)\n    ) {\n      return 0;\n    }\n    if (textAlign === CENTER) {\n      leftOffset = lineDiff / 2;\n    }\n    if (textAlign === RIGHT) {\n      leftOffset = lineDiff;\n    }\n    if (textAlign === JUSTIFY_CENTER) {\n      leftOffset = lineDiff / 2;\n    }\n    if (textAlign === JUSTIFY_RIGHT) {\n      leftOffset = lineDiff;\n    }\n    if (direction === 'rtl') {\n      if (\n        textAlign === RIGHT ||\n        textAlign === JUSTIFY ||\n        textAlign === JUSTIFY_RIGHT\n      ) {\n        leftOffset = 0;\n      } else if (textAlign === LEFT || textAlign === JUSTIFY_LEFT) {\n        leftOffset = -lineDiff;\n      } else if (textAlign === CENTER || textAlign === JUSTIFY_CENTER) {\n        leftOffset = -lineDiff / 2;\n      }\n    }\n    return leftOffset;\n  }\n\n  /**\n   * @private\n   */\n  _clearCache() {\n    this._forceClearCache = false;\n    this.__lineWidths = [];\n    this.__lineHeights = [];\n    this.__charBounds = [];\n  }\n\n  /**\n   * Measure a single line given its index. Used to calculate the initial\n   * text bounding box. The values are calculated and stored in __lineWidths cache.\n   * @private\n   * @param {Number} lineIndex line number\n   * @return {Number} Line width\n   */\n  getLineWidth(lineIndex: number): number {\n    if (this.__lineWidths[lineIndex] !== undefined) {\n      return this.__lineWidths[lineIndex];\n    }\n\n    const { width } = this.measureLine(lineIndex);\n    this.__lineWidths[lineIndex] = width;\n    return width;\n  }\n\n  _getWidthOfCharSpacing() {\n    if (this.charSpacing !== 0) {\n      return (this.fontSize * this.charSpacing) / 1000;\n    }\n    return 0;\n  }\n\n  /**\n   * Retrieves the value of property at given character position\n   * @param {Number} lineIndex the line number\n   * @param {Number} charIndex the character number\n   * @param {String} property the property name\n   * @returns the value of 'property'\n   */\n  getValueOfPropertyAt<T extends StylePropertiesType>(\n    lineIndex: number,\n    charIndex: number,\n    property: T,\n  ): this[T] {\n    const charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n    return (charStyle[property] ?? this[property]) as this[T];\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextDecoration(\n    ctx: CanvasRenderingContext2D,\n    type: 'underline' | 'linethrough' | 'overline',\n  ) {\n    if (!this[type] && !this.styleHas(type)) {\n      return;\n    }\n    let topOffset = this._getTopOffset();\n    const leftOffset = this._getLeftOffset(),\n      path = this.path,\n      charSpacing = this._getWidthOfCharSpacing(),\n      offsetY = this.offsets[type];\n\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      const heightOfLine = this.getHeightOfLine(i);\n      if (!this[type] && !this.styleHas(type, i)) {\n        topOffset += heightOfLine;\n        continue;\n      }\n      const line = this._textLines[i];\n      const maxHeight = heightOfLine / this.lineHeight;\n      const lineLeftOffset = this._getLineLeftOffset(i);\n      let boxStart = 0;\n      let boxWidth = 0;\n      let lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n      let lastFill = this.getValueOfPropertyAt(i, 0, FILL);\n      let currentDecoration;\n      let currentFill;\n      const top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n      let size = this.getHeightOfChar(i, 0);\n      let dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\n      for (let j = 0, jlen = line.length; j < jlen; j++) {\n        const charBox = this.__charBounds[i][j] as Required<GraphemeBBox>;\n        currentDecoration = this.getValueOfPropertyAt(i, j, type);\n        currentFill = this.getValueOfPropertyAt(i, j, FILL);\n        const currentSize = this.getHeightOfChar(i, j);\n        const currentDy = this.getValueOfPropertyAt(i, j, 'deltaY');\n        if (path && currentDecoration && currentFill) {\n          ctx.save();\n          // bug? verify lastFill is a valid fill here.\n          ctx.fillStyle = lastFill as string;\n          ctx.translate(charBox.renderLeft, charBox.renderTop);\n          ctx.rotate(charBox.angle);\n          ctx.fillRect(\n            -charBox.kernedWidth / 2,\n            offsetY * currentSize + currentDy,\n            charBox.kernedWidth,\n            this.fontSize / 15,\n          );\n          ctx.restore();\n        } else if (\n          (currentDecoration !== lastDecoration ||\n            currentFill !== lastFill ||\n            currentSize !== size ||\n            currentDy !== dy) &&\n          boxWidth > 0\n        ) {\n          let drawStart = leftOffset + lineLeftOffset + boxStart;\n          if (this.direction === 'rtl') {\n            drawStart = this.width - drawStart - boxWidth;\n          }\n          if (lastDecoration && lastFill) {\n            // bug? verify lastFill is a valid fill here.\n            ctx.fillStyle = lastFill as string;\n            ctx.fillRect(\n              drawStart,\n              top + offsetY * size + dy,\n              boxWidth,\n              this.fontSize / 15,\n            );\n          }\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastDecoration = currentDecoration;\n          lastFill = currentFill;\n          size = currentSize;\n          dy = currentDy;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      let drawStart = leftOffset + lineLeftOffset + boxStart;\n      if (this.direction === 'rtl') {\n        drawStart = this.width - drawStart - boxWidth;\n      }\n      ctx.fillStyle = currentFill as string;\n      currentDecoration &&\n        currentFill &&\n        ctx.fillRect(\n          drawStart,\n          top + offsetY * size + dy,\n          boxWidth - charSpacing,\n          this.fontSize / 15,\n        );\n      topOffset += heightOfLine;\n    }\n    // if there is text background color no\n    // other shadows should be casted\n    this._removeShadow(ctx);\n  }\n\n  /**\n   * return font declaration string for canvas context\n   * @param {Object} [styleObject] object\n   * @returns {String} font declaration formatted for canvas context.\n   */\n  _getFontDeclaration(\n    {\n      fontFamily = this.fontFamily,\n      fontStyle = this.fontStyle,\n      fontWeight = this.fontWeight,\n      fontSize = this.fontSize,\n    }: Partial<\n      Pick<\n        TextStyleDeclaration,\n        'fontFamily' | 'fontStyle' | 'fontWeight' | 'fontSize'\n      >\n    > = {},\n    forMeasuring?: boolean,\n  ): string {\n    const parsedFontFamily =\n      fontFamily.includes(\"'\") ||\n      fontFamily.includes('\"') ||\n      fontFamily.includes(',') ||\n      FabricText.genericFonts.includes(fontFamily.toLowerCase())\n        ? fontFamily\n        : `\"${fontFamily}\"`;\n    return [\n      fontStyle,\n      fontWeight,\n      `${forMeasuring ? this.CACHE_FONT_SIZE : fontSize}px`,\n      parsedFontFamily,\n    ].join(' ');\n  }\n\n  /**\n   * Renders text instance on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    if (!this.visible) {\n      return;\n    }\n    if (\n      this.canvas &&\n      this.canvas.skipOffscreen &&\n      !this.group &&\n      !this.isOnScreen()\n    ) {\n      return;\n    }\n    if (this._forceClearCache) {\n      this.initDimensions();\n    }\n    super.render(ctx);\n  }\n\n  /**\n   * Override this method to customize grapheme splitting\n   * @todo the util `graphemeSplit` needs to be injectable in some way.\n   * is more comfortable to inject the correct util rather than having to override text\n   * in the middle of the prototype chain\n   * @param {string} value\n   * @returns {string[]} array of graphemes\n   */\n  graphemeSplit(value: string): string[] {\n    return graphemeSplit(value);\n  }\n\n  /**\n   * Returns the text as an array of lines.\n   * @param {String} text text to split\n   * @returns  Lines in the text\n   */\n  _splitTextIntoLines(text: string): TextLinesInfo {\n    const lines = text.split(this._reNewline),\n      newLines = new Array<string[]>(lines.length),\n      newLine = ['\\n'];\n    let newText: string[] = [];\n    for (let i = 0; i < lines.length; i++) {\n      newLines[i] = this.graphemeSplit(lines[i]);\n      newText = newText.concat(newLines[i], newLine);\n    }\n    newText.pop();\n    return {\n      _unwrappedLines: newLines,\n      lines: lines,\n      graphemeText: newText,\n      graphemeLines: newLines,\n    };\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject([...additionalProps, ...propertiesToInclude] as K[]),\n      styles: stylesToArray(this.styles, this.text),\n      ...(this.path ? { path: this.path.toObject() } : {}),\n    };\n  }\n\n  set(key: string | any, value?: any) {\n    const { textLayoutProperties } = this.constructor as typeof FabricText;\n    super.set(key, value);\n    let needsDims = false;\n    let isAddingPath = false;\n    if (typeof key === 'object') {\n      for (const _key in key) {\n        if (_key === 'path') {\n          this.setPathInfo();\n        }\n        needsDims = needsDims || textLayoutProperties.includes(_key);\n        isAddingPath = isAddingPath || _key === 'path';\n      }\n    } else {\n      needsDims = textLayoutProperties.includes(key);\n      isAddingPath = key === 'path';\n    }\n    if (isAddingPath) {\n      this.setPathInfo();\n    }\n    if (needsDims && this.initialized) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    return this;\n  }\n\n  /**\n   * Returns complexity of an instance\n   * @return {Number} complexity\n   */\n  complexity(): number {\n    return 1;\n  }\n\n  /**\n   * List of generic font families\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/font-family#generic-name\n   */\n  static genericFonts = [\n    'serif',\n    'sans-serif',\n    'monospace',\n    'cursive',\n    'fantasy',\n    'system-ui',\n    'ui-serif',\n    'ui-sans-serif',\n    'ui-monospace',\n    'ui-rounded',\n    'math',\n    'emoji',\n    'fangsong',\n  ];\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link FabricText.fromElement})\n   * @static\n   * @memberOf Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  static ATTRIBUTE_NAMES = SHARED_ATTRIBUTES.concat(\n    'x',\n    'y',\n    'dx',\n    'dy',\n    'font-family',\n    'font-style',\n    'font-weight',\n    'font-size',\n    'letter-spacing',\n    'text-decoration',\n    'text-anchor',\n  );\n\n  /**\n   * Returns FabricText instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf Text\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const parsedAttributes = parseAttributes(\n      element,\n      FabricText.ATTRIBUTE_NAMES,\n      cssRules,\n    );\n\n    const {\n      textAnchor = LEFT as typeof LEFT | typeof CENTER | typeof RIGHT,\n      textDecoration = '',\n      dx = 0,\n      dy = 0,\n      top = 0,\n      left = 0,\n      fontSize = DEFAULT_SVG_FONT_SIZE,\n      strokeWidth = 1,\n      ...restOfOptions\n    } = { ...options, ...parsedAttributes };\n\n    const textContent = (element.textContent || '')\n      .replace(/^\\s+|\\s+$|\\n+/g, '')\n      .replace(/\\s+/g, ' ');\n\n    // this code here is probably the usual issue for SVG center find\n    // this can later looked at again and probably removed.\n\n    const text = new this(textContent, {\n        left: left + dx,\n        top: top + dy,\n        underline: textDecoration.includes('underline'),\n        overline: textDecoration.includes('overline'),\n        linethrough: textDecoration.includes('line-through'),\n        // we initialize this as 0\n        strokeWidth: 0,\n        fontSize,\n        ...restOfOptions,\n      }),\n      textHeightScaleFactor = text.getScaledHeight() / text.height,\n      lineHeightDiff =\n        (text.height + text.strokeWidth) * text.lineHeight - text.height,\n      scaledDiff = lineHeightDiff * textHeightScaleFactor,\n      textHeight = text.getScaledHeight() + scaledDiff;\n\n    let offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n    if (textAnchor === CENTER) {\n      offX = text.getScaledWidth() / 2;\n    }\n    if (textAnchor === RIGHT) {\n      offX = text.getScaledWidth();\n    }\n    text.set({\n      left: text.left - offX,\n      top:\n        text.top -\n        (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) /\n          text.lineHeight,\n      strokeWidth,\n    });\n    return text;\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns FabricText instance from an object representation\n   * @param {Object} object plain js Object to create an instance from\n   * @returns {Promise<FabricText>}\n   */\n  static fromObject<\n    T extends TOptions<SerializedTextProps>,\n    S extends FabricText,\n  >(object: T) {\n    return this._fromObject<S>(\n      {\n        ...object,\n        styles: stylesFromArray(object.styles || {}, object.text),\n      },\n      {\n        extraParam: 'text',\n      },\n    );\n  }\n}\n\napplyMixins(FabricText, [TextSVGExportMixin]);\nclassRegistry.setClass(FabricText);\nclassRegistry.setSVGClass(FabricText);\n","import type {\n  DragEventData,\n  DropEventData,\n  TPointerEvent,\n} from '../../EventTypeDefs';\nimport { Point } from '../../Point';\nimport type { IText } from './IText';\nimport { setStyle } from '../../util/dom_style';\nimport { cloneStyles } from '../../util/internals/cloneStyles';\nimport type { TextStyleDeclaration } from '../Text/StyledText';\nimport { getDocumentFromElement } from '../../util/dom_misc';\nimport { CHANGED, NONE } from '../../constants';\n\n/**\n * #### Dragging IText/Textbox Lifecycle\n * - {@link start} is called from `mousedown` {@link IText#_mouseDownHandler} and determines if dragging should start by testing {@link isPointerOverSelection}\n * - if true `mousedown` {@link IText#_mouseDownHandler} is blocked to keep selection\n * - if the pointer moves, canvas fires numerous mousemove {@link Canvas#_onMouseMove} that we make sure **aren't** prevented ({@link IText#shouldStartDragging}) in order for the window to start a drag session\n * - once/if the session starts canvas calls {@link onDragStart} on the active object to determine if dragging should occur\n * - canvas fires relevant drag events that are handled by the handlers defined in this scope\n * - {@link end} is called from `mouseup` {@link IText#mouseUpHandler}, blocking IText default click behavior\n * - in case the drag session didn't occur, {@link end} handles a click, since logic to do so was blocked during `mousedown`\n */\nexport class DraggableTextDelegate {\n  readonly target: IText;\n  private __mouseDownInPlace = false;\n  private __dragStartFired = false;\n  private __isDraggingOver = false;\n  private __dragStartSelection?: {\n    selectionStart: number;\n    selectionEnd: number;\n  };\n  private __dragImageDisposer?: VoidFunction;\n  private _dispose?: () => void;\n\n  constructor(target: IText) {\n    this.target = target;\n    const disposers = [\n      this.target.on('dragenter', this.dragEnterHandler.bind(this)),\n      this.target.on('dragover', this.dragOverHandler.bind(this)),\n      this.target.on('dragleave', this.dragLeaveHandler.bind(this)),\n      this.target.on('dragend', this.dragEndHandler.bind(this)),\n      this.target.on('drop', this.dropHandler.bind(this)),\n    ];\n    this._dispose = () => {\n      disposers.forEach((d) => d());\n      this._dispose = undefined;\n    };\n  }\n\n  isPointerOverSelection(e: TPointerEvent) {\n    const target = this.target;\n    const newSelection = target.getSelectionStartFromPointer(e);\n    return (\n      target.isEditing &&\n      newSelection >= target.selectionStart &&\n      newSelection <= target.selectionEnd &&\n      target.selectionStart < target.selectionEnd\n    );\n  }\n\n  /**\n   * @public override this method to disable dragging and default to mousedown logic\n   */\n  start(e: TPointerEvent) {\n    return (this.__mouseDownInPlace = this.isPointerOverSelection(e));\n  }\n\n  /**\n   * @public override this method to disable dragging without discarding selection\n   */\n  isActive() {\n    return this.__mouseDownInPlace;\n  }\n\n  /**\n   * Ends interaction and sets cursor in case of a click\n   * @returns true if was active\n   */\n  end(e: TPointerEvent) {\n    const active = this.isActive();\n    if (active && !this.__dragStartFired) {\n      // mousedown has been blocked since `active` is true => cursor has not been set.\n      // `__dragStartFired` is false => dragging didn't occur, pointer didn't move and is over selection.\n      // meaning this is actually a click, `active` is a false positive.\n      this.target.setCursorByClick(e);\n      this.target.initDelayedCursor(true);\n    }\n    this.__mouseDownInPlace = false;\n    this.__dragStartFired = false;\n    this.__isDraggingOver = false;\n    return active;\n  }\n\n  getDragStartSelection() {\n    return this.__dragStartSelection;\n  }\n\n  /**\n   * Override to customize the drag image\n   * https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/setDragImage\n   */\n  setDragImage(\n    e: DragEvent,\n    {\n      selectionStart,\n      selectionEnd,\n    }: {\n      selectionStart: number;\n      selectionEnd: number;\n    },\n  ) {\n    const target = this.target;\n    const canvas = target.canvas!;\n    const flipFactor = new Point(target.flipX ? -1 : 1, target.flipY ? -1 : 1);\n    const boundaries = target._getCursorBoundaries(selectionStart);\n    const selectionPosition = new Point(\n      boundaries.left + boundaries.leftOffset,\n      boundaries.top + boundaries.topOffset,\n    ).multiply(flipFactor);\n    const pos = selectionPosition.transform(target.calcTransformMatrix());\n    const pointer = canvas.getScenePoint(e);\n    const diff = pointer.subtract(pos);\n    const retinaScaling = target.getCanvasRetinaScaling();\n    const bbox = target.getBoundingRect();\n    const correction = pos.subtract(new Point(bbox.left, bbox.top));\n    const vpt = canvas.viewportTransform;\n    const offset = correction.add(diff).transform(vpt, true);\n    //  prepare instance for drag image snapshot by making all non selected text invisible\n    const bgc = target.backgroundColor;\n    const styles = cloneStyles(target.styles);\n    target.backgroundColor = '';\n    const styleOverride = {\n      stroke: 'transparent',\n      fill: 'transparent',\n      textBackgroundColor: 'transparent',\n    };\n    target.setSelectionStyles(styleOverride, 0, selectionStart);\n    target.setSelectionStyles(styleOverride, selectionEnd, target.text.length);\n    target.dirty = true;\n    const dragImage = target.toCanvasElement({\n      enableRetinaScaling: canvas.enableRetinaScaling,\n      viewportTransform: true,\n    });\n    // restore values\n    target.backgroundColor = bgc;\n    target.styles = styles;\n    target.dirty = true;\n    //  position drag image offscreen\n    setStyle(dragImage, {\n      position: 'fixed',\n      left: `${-dragImage.width}px`,\n      border: NONE,\n      width: `${dragImage.width / retinaScaling}px`,\n      height: `${dragImage.height / retinaScaling}px`,\n    });\n    this.__dragImageDisposer && this.__dragImageDisposer();\n    this.__dragImageDisposer = () => {\n      dragImage.remove();\n    };\n    getDocumentFromElement(\n      (e.target || this.target.hiddenTextarea)! as HTMLElement,\n    ).body.appendChild(dragImage);\n    e.dataTransfer?.setDragImage(dragImage, offset.x, offset.y);\n  }\n\n  /**\n   * @returns {boolean} determines whether {@link target} should/shouldn't become a drag source\n   */\n  onDragStart(e: DragEvent): boolean {\n    this.__dragStartFired = true;\n    const target = this.target;\n    const active = this.isActive();\n    if (active && e.dataTransfer) {\n      const selection = (this.__dragStartSelection = {\n        selectionStart: target.selectionStart,\n        selectionEnd: target.selectionEnd,\n      });\n      const value = target._text\n        .slice(selection.selectionStart, selection.selectionEnd)\n        .join('');\n      const data = { text: target.text, value, ...selection };\n      e.dataTransfer.setData('text/plain', value);\n      e.dataTransfer.setData(\n        'application/fabric',\n        JSON.stringify({\n          value: value,\n          styles: target.getSelectionStyles(\n            selection.selectionStart,\n            selection.selectionEnd,\n            true,\n          ),\n        }),\n      );\n      e.dataTransfer.effectAllowed = 'copyMove';\n      this.setDragImage(e, data);\n    }\n    target.abortCursorAnimation();\n    return active;\n  }\n\n  /**\n   * use {@link targetCanDrop} to respect overriding\n   * @returns {boolean} determines whether {@link target} should/shouldn't become a drop target\n   */\n  canDrop(e: DragEvent): boolean {\n    if (\n      this.target.editable &&\n      !this.target.getActiveControl() &&\n      !e.defaultPrevented\n    ) {\n      if (this.isActive() && this.__dragStartSelection) {\n        //  drag source trying to drop over itself\n        //  allow dropping only outside of drag start selection\n        const index = this.target.getSelectionStartFromPointer(e);\n        const dragStartSelection = this.__dragStartSelection;\n        return (\n          index < dragStartSelection.selectionStart ||\n          index > dragStartSelection.selectionEnd\n        );\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * in order to respect overriding {@link IText#canDrop} we call that instead of calling {@link canDrop} directly\n   */\n  protected targetCanDrop(e: DragEvent) {\n    return this.target.canDrop(e);\n  }\n\n  dragEnterHandler({ e }: DragEventData) {\n    const canDrop = this.targetCanDrop(e);\n    if (!this.__isDraggingOver && canDrop) {\n      this.__isDraggingOver = true;\n    }\n  }\n\n  dragOverHandler(ev: DragEventData) {\n    const { e } = ev;\n    const canDrop = this.targetCanDrop(e);\n    if (!this.__isDraggingOver && canDrop) {\n      this.__isDraggingOver = true;\n    } else if (this.__isDraggingOver && !canDrop) {\n      //  drop state has changed\n      this.__isDraggingOver = false;\n    }\n    if (this.__isDraggingOver) {\n      //  can be dropped, inform browser\n      e.preventDefault();\n      //  inform event subscribers\n      ev.canDrop = true;\n      ev.dropTarget = this.target;\n    }\n  }\n\n  dragLeaveHandler() {\n    if (this.__isDraggingOver || this.isActive()) {\n      this.__isDraggingOver = false;\n    }\n  }\n\n  /**\n   * Override the `text/plain | application/fabric` types of {@link DragEvent#dataTransfer}\n   * in order to change the drop value or to customize styling respectively, by listening to the `drop:before` event\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#performing_a_drop\n   */\n  dropHandler(ev: DropEventData) {\n    const { e } = ev;\n    const didDrop = e.defaultPrevented;\n    this.__isDraggingOver = false;\n    // inform browser that the drop has been accepted\n    e.preventDefault();\n    let insert = e.dataTransfer?.getData('text/plain');\n    if (insert && !didDrop) {\n      const target = this.target;\n      const canvas = target.canvas!;\n      let insertAt = target.getSelectionStartFromPointer(e);\n      const { styles } = (\n        e.dataTransfer!.types.includes('application/fabric')\n          ? JSON.parse(e.dataTransfer!.getData('application/fabric'))\n          : {}\n      ) as { styles: TextStyleDeclaration[] };\n      const trailing = insert[Math.max(0, insert.length - 1)];\n      const selectionStartOffset = 0;\n      //  drag and drop in same instance\n      if (this.__dragStartSelection) {\n        const selectionStart = this.__dragStartSelection.selectionStart;\n        const selectionEnd = this.__dragStartSelection.selectionEnd;\n        if (insertAt > selectionStart && insertAt <= selectionEnd) {\n          insertAt = selectionStart;\n        } else if (insertAt > selectionEnd) {\n          insertAt -= selectionEnd - selectionStart;\n        }\n        target.removeChars(selectionStart, selectionEnd);\n        // prevent `dragend` from handling event\n        delete this.__dragStartSelection;\n      }\n      //  remove redundant line break\n      if (\n        target._reNewline.test(trailing) &&\n        (target._reNewline.test(target._text[insertAt]) ||\n          insertAt === target._text.length)\n      ) {\n        insert = insert.trimEnd();\n      }\n      //  inform subscribers\n      ev.didDrop = true;\n      ev.dropTarget = target;\n      //  finalize\n      target.insertChars(insert, styles, insertAt);\n      // can this part be moved in an outside event? andrea to check.\n      canvas.setActiveObject(target);\n      target.enterEditing(e);\n      target.selectionStart = Math.min(\n        insertAt + selectionStartOffset,\n        target._text.length,\n      );\n      target.selectionEnd = Math.min(\n        target.selectionStart + insert.length,\n        target._text.length,\n      );\n      target.hiddenTextarea!.value = target.text;\n      target._updateTextarea();\n      target.hiddenTextarea!.focus();\n      target.fire(CHANGED, {\n        index: insertAt + selectionStartOffset,\n        action: 'drop',\n      });\n      canvas.fire('text:changed', { target });\n      canvas.contextTopDirty = true;\n      canvas.requestRenderAll();\n    }\n  }\n\n  /**\n   * fired only on the drag source after drop (if occurred)\n   * handle changes to the drag source in case of a drop on another object or a cancellation\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#finishing_a_drag\n   */\n  dragEndHandler({ e }: DragEventData) {\n    if (this.isActive() && this.__dragStartFired) {\n      //  once the drop event finishes we check if we need to change the drag source\n      //  if the drag source received the drop we bail out since the drop handler has already handled logic\n      if (this.__dragStartSelection) {\n        const target = this.target;\n        const canvas = this.target.canvas!;\n        const { selectionStart, selectionEnd } = this.__dragStartSelection;\n        const dropEffect = e.dataTransfer?.dropEffect || NONE;\n        if (dropEffect === NONE) {\n          // pointer is back over selection\n          target.selectionStart = selectionStart;\n          target.selectionEnd = selectionEnd;\n          target._updateTextarea();\n          target.hiddenTextarea!.focus();\n        } else {\n          target.clearContextTop();\n          if (dropEffect === 'move') {\n            target.removeChars(selectionStart, selectionEnd);\n            target.selectionStart = target.selectionEnd = selectionStart;\n            target.hiddenTextarea &&\n              (target.hiddenTextarea.value = target.text);\n            target._updateTextarea();\n            target.fire(CHANGED, {\n              index: selectionStart,\n              action: 'dragend',\n            });\n            canvas.fire('text:changed', { target });\n            canvas.requestRenderAll();\n          }\n          target.exitEditing();\n        }\n      }\n    }\n\n    this.__dragImageDisposer && this.__dragImageDisposer();\n    delete this.__dragImageDisposer;\n    delete this.__dragStartSelection;\n    this.__isDraggingOver = false;\n  }\n\n  dispose() {\n    this._dispose && this._dispose();\n  }\n}\n","import type {\n  ObjectEvents,\n  TPointerEvent,\n  TPointerEventInfo,\n} from '../../EventTypeDefs';\nimport { Point } from '../../Point';\nimport type { FabricObject } from '../Object/FabricObject';\nimport { FabricText } from '../Text/Text';\nimport { animate } from '../../util/animation/animate';\nimport type { TOnAnimationChangeCallback } from '../../util/animation/types';\nimport type { ValueAnimation } from '../../util/animation/ValueAnimation';\nimport type { TextStyleDeclaration } from '../Text/StyledText';\nimport type { SerializedTextProps, TextProps } from '../Text/Text';\nimport type { TOptions } from '../../typedefs';\nimport { getDocumentFromElement } from '../../util/dom_misc';\nimport { LEFT, MODIFIED, RIGHT, reNewline } from '../../constants';\nimport type { IText } from './IText';\n\n/**\n *  extend this regex to support non english languages\n *\n *  - ` `      Matches a SPACE character (char code 32).\n *  - `\\n`     Matches a LINE FEED character (char code 10).\n *  - `\\.`     Matches a \".\" character (char code 46).\n *  - `,`      Matches a \",\" character (char code 44).\n *  - `;`      Matches a \";\" character (char code 59).\n *  - `!`      Matches a \"!\" character (char code 33).\n *  - `\\?`     Matches a \"?\" character (char code 63).\n *  - `\\-`     Matches a \"-\" character (char code 45).\n */\n// eslint-disable-next-line no-useless-escape\nconst reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\nexport type ITextEvents = ObjectEvents & {\n  'selection:changed': never;\n  changed: never | { index: number; action: string };\n  tripleclick: TPointerEventInfo;\n  'editing:entered': never | { e: TPointerEvent };\n  'editing:exited': never;\n};\n\nexport abstract class ITextBehavior<\n  Props extends TOptions<TextProps> = Partial<TextProps>,\n  SProps extends SerializedTextProps = SerializedTextProps,\n  EventSpec extends ITextEvents = ITextEvents,\n> extends FabricText<Props, SProps, EventSpec> {\n  declare abstract isEditing: boolean;\n  declare abstract cursorDelay: number;\n  declare abstract selectionStart: number;\n  declare abstract selectionEnd: number;\n  declare abstract cursorDuration: number;\n  declare abstract editable: boolean;\n  declare abstract editingBorderColor: string;\n\n  declare abstract compositionStart: number;\n  declare abstract compositionEnd: number;\n\n  declare abstract hiddenTextarea: HTMLTextAreaElement | null;\n\n  /**\n   * Helps determining when the text is in composition, so that the cursor\n   * rendering is altered.\n   */\n  protected declare inCompositionMode: boolean;\n\n  protected declare _reSpace: RegExp;\n  private declare _currentTickState?: ValueAnimation;\n  private declare _currentTickCompleteState?: ValueAnimation;\n  protected _currentCursorOpacity = 1;\n  private declare _textBeforeEdit: string;\n  protected declare __selectionStartOnMouseDown: number;\n\n  protected declare selected: boolean;\n  protected declare cursorOffsetCache: { left?: number; top?: number };\n  protected declare _savedProps?: {\n    hasControls: boolean;\n    borderColor: string;\n    lockMovementX: boolean;\n    lockMovementY: boolean;\n    selectable: boolean;\n    hoverCursor: CSSStyleDeclaration['cursor'] | null;\n    defaultCursor?: CSSStyleDeclaration['cursor'];\n    moveCursor?: CSSStyleDeclaration['cursor'];\n  };\n  protected declare _selectionDirection: 'left' | 'right' | null;\n\n  abstract initHiddenTextarea(): void;\n  abstract _fireSelectionChanged(): void;\n  abstract renderCursorOrSelection(): void;\n  abstract getSelectionStartFromPointer(e: TPointerEvent): number;\n  abstract _getCursorBoundaries(\n    index: number,\n    skipCaching?: boolean,\n  ): {\n    left: number;\n    top: number;\n    leftOffset: number;\n    topOffset: number;\n  };\n\n  /**\n   * Initializes all the interactive behavior of IText\n   */\n  initBehavior() {\n    this._tick = this._tick.bind(this);\n    this._onTickComplete = this._onTickComplete.bind(this);\n    this.updateSelectionOnMouseMove =\n      this.updateSelectionOnMouseMove.bind(this);\n  }\n\n  onDeselect(options?: { e?: TPointerEvent; object?: FabricObject }) {\n    this.isEditing && this.exitEditing();\n    this.selected = false;\n    return super.onDeselect(options);\n  }\n\n  /**\n   * @private\n   */\n  _animateCursor({\n    toValue,\n    duration,\n    delay,\n    onComplete,\n  }: {\n    toValue: number;\n    duration: number;\n    delay?: number;\n    onComplete?: TOnAnimationChangeCallback<number, void>;\n  }) {\n    return animate({\n      startValue: this._currentCursorOpacity,\n      endValue: toValue,\n      duration,\n      delay,\n      onComplete,\n      abort: () =>\n        !this.canvas ||\n        // we do not want to animate a selection, only cursor\n        this.selectionStart !== this.selectionEnd,\n      onChange: (value) => {\n        this._currentCursorOpacity = value;\n        this.renderCursorOrSelection();\n      },\n    });\n  }\n\n  /**\n   * changes the cursor from visible to invisible\n   */\n  private _tick(delay?: number) {\n    this._currentTickState = this._animateCursor({\n      toValue: 0,\n      duration: this.cursorDuration / 2,\n      delay: Math.max(delay || 0, 100),\n      onComplete: this._onTickComplete,\n    });\n  }\n\n  /**\n   * Changes the cursor from invisible to visible\n   */\n  private _onTickComplete() {\n    this._currentTickCompleteState?.abort();\n    this._currentTickCompleteState = this._animateCursor({\n      toValue: 1,\n      duration: this.cursorDuration,\n      onComplete: this._tick,\n    });\n  }\n\n  /**\n   * Initializes delayed cursor\n   */\n  initDelayedCursor(restart?: boolean) {\n    this.abortCursorAnimation();\n    this._tick(restart ? 0 : this.cursorDelay);\n  }\n\n  /**\n   * Aborts cursor animation, clears all timeouts and clear textarea context if necessary\n   */\n  abortCursorAnimation() {\n    let shouldClear = false;\n    [this._currentTickState, this._currentTickCompleteState].forEach(\n      (cursorAnimation) => {\n        if (cursorAnimation && !cursorAnimation.isDone()) {\n          shouldClear = true;\n          cursorAnimation.abort();\n        }\n      },\n    );\n\n    this._currentCursorOpacity = 1;\n\n    //  make sure we clear context even if instance is not editing\n    if (shouldClear) {\n      this.clearContextTop();\n    }\n  }\n\n  /**\n   * Restart tue cursor animation if either is in complete state ( between animations )\n   * or if it never started before\n   */\n  restartCursorIfNeeded() {\n    if (\n      [this._currentTickState, this._currentTickCompleteState].some(\n        (cursorAnimation) => !cursorAnimation || cursorAnimation.isDone(),\n      )\n    ) {\n      this.initDelayedCursor();\n    }\n  }\n\n  /**\n   * Selects entire text\n   */\n  selectAll() {\n    this.selectionStart = 0;\n    this.selectionEnd = this._text.length;\n    this._fireSelectionChanged();\n    this._updateTextarea();\n    return this;\n  }\n\n  /**\n   * Returns selected text\n   * @return {String}\n   */\n  getSelectedText(): string {\n    return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n  }\n\n  /**\n   * Find new selection index representing start of current word according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findWordBoundaryLeft(startFrom: number): number {\n    let offset = 0,\n      index = startFrom - 1;\n\n    // remove space before cursor first\n    if (this._reSpace.test(this._text[index])) {\n      while (this._reSpace.test(this._text[index])) {\n        offset++;\n        index--;\n      }\n    }\n    while (/\\S/.test(this._text[index]) && index > -1) {\n      offset++;\n      index--;\n    }\n\n    return startFrom - offset;\n  }\n\n  /**\n   * Find new selection index representing end of current word according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findWordBoundaryRight(startFrom: number): number {\n    let offset = 0,\n      index = startFrom;\n\n    // remove space after cursor first\n    if (this._reSpace.test(this._text[index])) {\n      while (this._reSpace.test(this._text[index])) {\n        offset++;\n        index++;\n      }\n    }\n    while (/\\S/.test(this._text[index]) && index < this._text.length) {\n      offset++;\n      index++;\n    }\n\n    return startFrom + offset;\n  }\n\n  /**\n   * Find new selection index representing start of current line according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findLineBoundaryLeft(startFrom: number): number {\n    let offset = 0,\n      index = startFrom - 1;\n\n    while (!/\\n/.test(this._text[index]) && index > -1) {\n      offset++;\n      index--;\n    }\n\n    return startFrom - offset;\n  }\n\n  /**\n   * Find new selection index representing end of current line according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findLineBoundaryRight(startFrom: number): number {\n    let offset = 0,\n      index = startFrom;\n\n    while (!/\\n/.test(this._text[index]) && index < this._text.length) {\n      offset++;\n      index++;\n    }\n\n    return startFrom + offset;\n  }\n\n  /**\n   * Finds index corresponding to beginning or end of a word\n   * @param {Number} selectionStart Index of a character\n   * @param {Number} direction 1 or -1\n   * @return {Number} Index of the beginning or end of a word\n   */\n  searchWordBoundary(selectionStart: number, direction: 1 | -1): number {\n    const text = this._text;\n    // if we land on a space we move the cursor backwards\n    // if we are searching boundary end we move the cursor backwards ONLY if we don't land on a line break\n    let index =\n        selectionStart > 0 &&\n        this._reSpace.test(text[selectionStart]) &&\n        (direction === -1 || !reNewline.test(text[selectionStart - 1]))\n          ? selectionStart - 1\n          : selectionStart,\n      _char = text[index];\n    while (index > 0 && index < text.length && !reNonWord.test(_char)) {\n      index += direction;\n      _char = text[index];\n    }\n    if (direction === -1 && reNonWord.test(_char)) {\n      index++;\n    }\n    return index;\n  }\n\n  /**\n   * TODO fix: selectionStart set as 0 will be ignored?\n   * Selects a word based on the index\n   * @param {Number} selectionStart Index of a character\n   */\n  selectWord(selectionStart?: number) {\n    selectionStart = selectionStart || this.selectionStart;\n    // search backwards\n    const newSelectionStart = this.searchWordBoundary(selectionStart, -1),\n      // search forward\n      newSelectionEnd = Math.max(\n        newSelectionStart,\n        this.searchWordBoundary(selectionStart, 1),\n      );\n\n    this.selectionStart = newSelectionStart;\n    this.selectionEnd = newSelectionEnd;\n    this._fireSelectionChanged();\n    this._updateTextarea();\n    this.renderCursorOrSelection();\n  }\n\n  /**\n   * TODO fix: selectionStart set as 0 will be ignored?\n   * Selects a line based on the index\n   * @param {Number} selectionStart Index of a character\n   */\n  selectLine(selectionStart?: number) {\n    selectionStart = selectionStart || this.selectionStart;\n    const newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n      newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n    this.selectionStart = newSelectionStart;\n    this.selectionEnd = newSelectionEnd;\n    this._fireSelectionChanged();\n    this._updateTextarea();\n    return this;\n  }\n\n  /**\n   * Enters editing state\n   */\n  enterEditing(e?: TPointerEvent) {\n    if (this.isEditing || !this.editable) {\n      return;\n    }\n    this.enterEditingImpl();\n    this.fire('editing:entered', e ? { e } : undefined);\n    this._fireSelectionChanged();\n    if (this.canvas) {\n      this.canvas.fire('text:editing:entered', {\n        target: this as unknown as IText,\n        e,\n      });\n      this.canvas.requestRenderAll();\n    }\n  }\n\n  /**\n   * runs the actual logic that enter from editing state, see {@link enterEditing}\n   */\n  enterEditingImpl() {\n    if (this.canvas) {\n      this.canvas.calcOffset();\n      this.canvas.textEditingManager.exitTextEditing();\n    }\n\n    this.isEditing = true;\n\n    this.initHiddenTextarea();\n    this.hiddenTextarea!.focus();\n    this.hiddenTextarea!.value = this.text;\n    this._updateTextarea();\n    this._saveEditingProps();\n    this._setEditingProps();\n    this._textBeforeEdit = this.text;\n\n    this._tick();\n  }\n\n  /**\n   * called by {@link Canvas#textEditingManager}\n   */\n  updateSelectionOnMouseMove(e: TPointerEvent) {\n    if (this.getActiveControl()) {\n      return;\n    }\n\n    const el = this.hiddenTextarea!;\n    // regain focus\n    getDocumentFromElement(el).activeElement !== el && el.focus();\n\n    const newSelectionStart = this.getSelectionStartFromPointer(e),\n      currentStart = this.selectionStart,\n      currentEnd = this.selectionEnd;\n    if (\n      (newSelectionStart !== this.__selectionStartOnMouseDown ||\n        currentStart === currentEnd) &&\n      (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n    ) {\n      return;\n    }\n    if (newSelectionStart > this.__selectionStartOnMouseDown) {\n      this.selectionStart = this.__selectionStartOnMouseDown;\n      this.selectionEnd = newSelectionStart;\n    } else {\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = this.__selectionStartOnMouseDown;\n    }\n    if (\n      this.selectionStart !== currentStart ||\n      this.selectionEnd !== currentEnd\n    ) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setEditingProps() {\n    this.hoverCursor = 'text';\n\n    if (this.canvas) {\n      this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n    }\n\n    this.borderColor = this.editingBorderColor;\n    this.hasControls = this.selectable = false;\n    this.lockMovementX = this.lockMovementY = true;\n  }\n\n  /**\n   * convert from textarea to grapheme indexes\n   */\n  fromStringToGraphemeSelection(start: number, end: number, text: string) {\n    const smallerTextStart = text.slice(0, start),\n      graphemeStart = this.graphemeSplit(smallerTextStart).length;\n    if (start === end) {\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n    }\n    const smallerTextEnd = text.slice(start, end),\n      graphemeEnd = this.graphemeSplit(smallerTextEnd).length;\n    return {\n      selectionStart: graphemeStart,\n      selectionEnd: graphemeStart + graphemeEnd,\n    };\n  }\n\n  /**\n   * convert from fabric to textarea values\n   */\n  fromGraphemeToStringSelection(\n    start: number,\n    end: number,\n    graphemes: string[],\n  ) {\n    const smallerTextStart = graphemes.slice(0, start),\n      graphemeStart = smallerTextStart.join('').length;\n    if (start === end) {\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n    }\n    const smallerTextEnd = graphemes.slice(start, end),\n      graphemeEnd = smallerTextEnd.join('').length;\n    return {\n      selectionStart: graphemeStart,\n      selectionEnd: graphemeStart + graphemeEnd,\n    };\n  }\n\n  /**\n   * @private\n   */\n  _updateTextarea() {\n    this.cursorOffsetCache = {};\n    if (!this.hiddenTextarea) {\n      return;\n    }\n    if (!this.inCompositionMode) {\n      const newSelection = this.fromGraphemeToStringSelection(\n        this.selectionStart,\n        this.selectionEnd,\n        this._text,\n      );\n      this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n      this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n    }\n    this.updateTextareaPosition();\n  }\n\n  /**\n   * @private\n   */\n  updateFromTextArea() {\n    if (!this.hiddenTextarea) {\n      return;\n    }\n    this.cursorOffsetCache = {};\n    const textarea = this.hiddenTextarea;\n    this.text = textarea.value;\n    this.set('dirty', true);\n    this.initDimensions();\n    this.setCoords();\n    const newSelection = this.fromStringToGraphemeSelection(\n      textarea.selectionStart,\n      textarea.selectionEnd,\n      textarea.value,\n    );\n    this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n    if (!this.inCompositionMode) {\n      this.selectionStart = newSelection.selectionStart;\n    }\n    this.updateTextareaPosition();\n  }\n\n  /**\n   * @private\n   */\n  updateTextareaPosition() {\n    if (this.selectionStart === this.selectionEnd) {\n      const style = this._calcTextareaPosition();\n      this.hiddenTextarea!.style.left = style.left;\n      this.hiddenTextarea!.style.top = style.top;\n    }\n  }\n\n  /**\n   * @private\n   * @return {Object} style contains style for hiddenTextarea\n   */\n  _calcTextareaPosition() {\n    if (!this.canvas) {\n      return { left: '1px', top: '1px' };\n    }\n    const desiredPosition = this.inCompositionMode\n        ? this.compositionStart\n        : this.selectionStart,\n      boundaries = this._getCursorBoundaries(desiredPosition),\n      cursorLocation = this.get2DCursorLocation(desiredPosition),\n      lineIndex = cursorLocation.lineIndex,\n      charIndex = cursorLocation.charIndex,\n      charHeight =\n        this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') *\n        this.lineHeight,\n      leftOffset = boundaries.leftOffset,\n      retinaScaling = this.getCanvasRetinaScaling(),\n      upperCanvas = this.canvas.upperCanvasEl,\n      upperCanvasWidth = upperCanvas.width / retinaScaling,\n      upperCanvasHeight = upperCanvas.height / retinaScaling,\n      maxWidth = upperCanvasWidth - charHeight,\n      maxHeight = upperCanvasHeight - charHeight;\n\n    const p = new Point(\n      boundaries.left + leftOffset,\n      boundaries.top + boundaries.topOffset + charHeight,\n    )\n      .transform(this.calcTransformMatrix())\n      .transform(this.canvas.viewportTransform)\n      .multiply(\n        new Point(\n          upperCanvas.clientWidth / upperCanvasWidth,\n          upperCanvas.clientHeight / upperCanvasHeight,\n        ),\n      );\n\n    if (p.x < 0) {\n      p.x = 0;\n    }\n    if (p.x > maxWidth) {\n      p.x = maxWidth;\n    }\n    if (p.y < 0) {\n      p.y = 0;\n    }\n    if (p.y > maxHeight) {\n      p.y = maxHeight;\n    }\n\n    // add canvas offset on document\n    p.x += this.canvas._offset.left;\n    p.y += this.canvas._offset.top;\n\n    return {\n      left: `${p.x}px`,\n      top: `${p.y}px`,\n      fontSize: `${charHeight}px`,\n      charHeight: charHeight,\n    };\n  }\n\n  /**\n   * @private\n   */\n  _saveEditingProps() {\n    this._savedProps = {\n      hasControls: this.hasControls,\n      borderColor: this.borderColor,\n      lockMovementX: this.lockMovementX,\n      lockMovementY: this.lockMovementY,\n      hoverCursor: this.hoverCursor,\n      selectable: this.selectable,\n      defaultCursor: this.canvas && this.canvas.defaultCursor,\n      moveCursor: this.canvas && this.canvas.moveCursor,\n    };\n  }\n\n  /**\n   * @private\n   */\n  _restoreEditingProps() {\n    if (!this._savedProps) {\n      return;\n    }\n\n    this.hoverCursor = this._savedProps.hoverCursor;\n    this.hasControls = this._savedProps.hasControls;\n    this.borderColor = this._savedProps.borderColor;\n    this.selectable = this._savedProps.selectable;\n    this.lockMovementX = this._savedProps.lockMovementX;\n    this.lockMovementY = this._savedProps.lockMovementY;\n\n    if (this.canvas) {\n      this.canvas.defaultCursor =\n        this._savedProps.defaultCursor || this.canvas.defaultCursor;\n      this.canvas.moveCursor =\n        this._savedProps.moveCursor || this.canvas.moveCursor;\n    }\n\n    delete this._savedProps;\n  }\n\n  /**\n   * runs the actual logic that exits from editing state, see {@link exitEditing}\n   * Please use exitEditingImpl, this function was kept to avoid breaking changes.\n   * Will be removed in fabric 7.0\n   * @deprecated use \"exitEditingImpl\"\n   */\n  protected _exitEditing() {\n    const hiddenTextarea = this.hiddenTextarea;\n    this.selected = false;\n    this.isEditing = false;\n\n    if (hiddenTextarea) {\n      hiddenTextarea.blur && hiddenTextarea.blur();\n      hiddenTextarea.parentNode &&\n        hiddenTextarea.parentNode.removeChild(hiddenTextarea);\n    }\n    this.hiddenTextarea = null;\n    this.abortCursorAnimation();\n    this.selectionStart !== this.selectionEnd && this.clearContextTop();\n  }\n\n  /**\n   * runs the actual logic that exits from editing state, see {@link exitEditing}\n   * But it does not fire events\n   */\n  exitEditingImpl() {\n    this._exitEditing();\n    this.selectionEnd = this.selectionStart;\n    this._restoreEditingProps();\n    if (this._forceClearCache) {\n      this.initDimensions();\n      this.setCoords();\n    }\n  }\n\n  /**\n   * Exits from editing state and fires relevant events\n   */\n  exitEditing() {\n    const isTextChanged = this._textBeforeEdit !== this.text;\n    this.exitEditingImpl();\n\n    this.fire('editing:exited');\n    isTextChanged && this.fire(MODIFIED);\n    if (this.canvas) {\n      this.canvas.fire('text:editing:exited', {\n        target: this as unknown as IText,\n      });\n      // todo: evaluate add an action to this event\n      isTextChanged && this.canvas.fire('object:modified', { target: this });\n    }\n    return this;\n  }\n\n  /**\n   * @private\n   */\n  _removeExtraneousStyles() {\n    for (const prop in this.styles) {\n      if (!this._textLines[prop as unknown as number]) {\n        delete this.styles[prop];\n      }\n    }\n  }\n\n  /**\n   * remove and reflow a style block from start to end.\n   * @param {Number} start linear start position for removal (included in removal)\n   * @param {Number} end linear end position for removal ( excluded from removal )\n   */\n  removeStyleFromTo(start: number, end: number) {\n    const { lineIndex: lineStart, charIndex: charStart } =\n        this.get2DCursorLocation(start, true),\n      { lineIndex: lineEnd, charIndex: charEnd } = this.get2DCursorLocation(\n        end,\n        true,\n      );\n    if (lineStart !== lineEnd) {\n      // step1 remove the trailing of lineStart\n      if (this.styles[lineStart]) {\n        for (\n          let i = charStart;\n          i < this._unwrappedTextLines[lineStart].length;\n          i++\n        ) {\n          delete this.styles[lineStart][i];\n        }\n      }\n      // step2 move the trailing of lineEnd to lineStart if needed\n      if (this.styles[lineEnd]) {\n        for (\n          let i = charEnd;\n          i < this._unwrappedTextLines[lineEnd].length;\n          i++\n        ) {\n          const styleObj = this.styles[lineEnd][i];\n          if (styleObj) {\n            this.styles[lineStart] || (this.styles[lineStart] = {});\n            this.styles[lineStart][charStart + i - charEnd] = styleObj;\n          }\n        }\n      }\n      // step3 detects lines will be completely removed.\n      for (let i = lineStart + 1; i <= lineEnd; i++) {\n        delete this.styles[i];\n      }\n      // step4 shift remaining lines.\n      this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n    } else {\n      // remove and shift left on the same line\n      if (this.styles[lineStart]) {\n        const styleObj = this.styles[lineStart];\n        const diff = charEnd - charStart;\n        for (let i = charStart; i < charEnd; i++) {\n          delete styleObj[i];\n        }\n        for (const char in this.styles[lineStart]) {\n          const numericChar = parseInt(char, 10);\n          if (numericChar >= charEnd) {\n            styleObj[numericChar - diff] = styleObj[char];\n            delete styleObj[char];\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Shifts line styles up or down\n   * @param {Number} lineIndex Index of a line\n   * @param {Number} offset Can any number?\n   */\n  shiftLineStyles(lineIndex: number, offset: number) {\n    const clonedStyles = Object.assign({}, this.styles);\n    for (const line in this.styles) {\n      const numericLine = parseInt(line, 10);\n      if (numericLine > lineIndex) {\n        this.styles[numericLine + offset] = clonedStyles[numericLine];\n        if (!clonedStyles[numericLine - offset]) {\n          delete this.styles[numericLine];\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle insertion of more consecutive style lines for when one or more\n   * newlines gets added to the text. Since current style needs to be shifted\n   * first we shift the current style of the number lines needed, then we add\n   * new lines from the last to the first.\n   * @param {Number} lineIndex Index of a line\n   * @param {Number} charIndex Index of a char\n   * @param {Number} qty number of lines to add\n   * @param {Array} copiedStyle Array of objects styles\n   */\n  insertNewlineStyleObject(\n    lineIndex: number,\n    charIndex: number,\n    qty: number,\n    copiedStyle?: { [index: number]: TextStyleDeclaration },\n  ) {\n    const newLineStyles: { [index: number]: TextStyleDeclaration } = {};\n    const originalLineLength = this._unwrappedTextLines[lineIndex].length;\n    const isEndOfLine = originalLineLength === charIndex;\n\n    let someStyleIsCarryingOver = false;\n    qty || (qty = 1);\n    this.shiftLineStyles(lineIndex, qty);\n    const currentCharStyle = this.styles[lineIndex]\n      ? this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1]\n      : undefined;\n\n    // we clone styles of all chars\n    // after cursor onto the current line\n    for (const index in this.styles[lineIndex]) {\n      const numIndex = parseInt(index, 10);\n      if (numIndex >= charIndex) {\n        someStyleIsCarryingOver = true;\n        newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n        // remove lines from the previous line since they're on a new line now\n        if (!(isEndOfLine && charIndex === 0)) {\n          delete this.styles[lineIndex][index];\n        }\n      }\n    }\n    let styleCarriedOver = false;\n    if (someStyleIsCarryingOver && !isEndOfLine) {\n      // if is end of line, the extra style we copied\n      // is probably not something we want\n      this.styles[lineIndex + qty] = newLineStyles;\n      styleCarriedOver = true;\n    }\n    if (styleCarriedOver || originalLineLength > charIndex) {\n      // skip the last line of since we already prepared it.\n      // or contains text without style that we don't want to style\n      // just because it changed lines\n      qty--;\n    }\n    // for the all the lines or all the other lines\n    // we clone current char style onto the next (otherwise empty) line\n    while (qty > 0) {\n      if (copiedStyle && copiedStyle[qty - 1]) {\n        this.styles[lineIndex + qty] = {\n          0: { ...copiedStyle[qty - 1] },\n        };\n      } else if (currentCharStyle) {\n        this.styles[lineIndex + qty] = {\n          0: { ...currentCharStyle },\n        };\n      } else {\n        delete this.styles[lineIndex + qty];\n      }\n      qty--;\n    }\n    this._forceClearCache = true;\n  }\n\n  /**\n   * Inserts style object for a given line/char index\n   * @param {Number} lineIndex Index of a line\n   * @param {Number} charIndex Index of a char\n   * @param {Number} quantity number Style object to insert, if given\n   * @param {Array} copiedStyle array of style objects\n   */\n  insertCharStyleObject(\n    lineIndex: number,\n    charIndex: number,\n    quantity: number,\n    copiedStyle?: TextStyleDeclaration[],\n  ) {\n    if (!this.styles) {\n      this.styles = {};\n    }\n    const currentLineStyles = this.styles[lineIndex],\n      currentLineStylesCloned = currentLineStyles\n        ? { ...currentLineStyles }\n        : {};\n\n    quantity || (quantity = 1);\n    // shift all char styles by quantity forward\n    // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n    for (const index in currentLineStylesCloned) {\n      const numericIndex = parseInt(index, 10);\n      if (numericIndex >= charIndex) {\n        currentLineStyles[numericIndex + quantity] =\n          currentLineStylesCloned[numericIndex];\n        // only delete the style if there was nothing moved there\n        if (!currentLineStylesCloned[numericIndex - quantity]) {\n          delete currentLineStyles[numericIndex];\n        }\n      }\n    }\n    this._forceClearCache = true;\n    if (copiedStyle) {\n      while (quantity--) {\n        if (!Object.keys(copiedStyle[quantity]).length) {\n          continue;\n        }\n        if (!this.styles[lineIndex]) {\n          this.styles[lineIndex] = {};\n        }\n        this.styles[lineIndex][charIndex + quantity] = {\n          ...copiedStyle[quantity],\n        };\n      }\n      return;\n    }\n    if (!currentLineStyles) {\n      return;\n    }\n    const newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n    while (newStyle && quantity--) {\n      this.styles[lineIndex][charIndex + quantity] = { ...newStyle };\n    }\n  }\n\n  /**\n   * Inserts style object(s)\n   * @param {Array} insertedText Characters at the location where style is inserted\n   * @param {Number} start cursor index for inserting style\n   * @param {Array} [copiedStyle] array of style objects to insert.\n   */\n  insertNewStyleBlock(\n    insertedText: string[],\n    start: number,\n    copiedStyle?: TextStyleDeclaration[],\n  ) {\n    const cursorLoc = this.get2DCursorLocation(start, true),\n      addedLines = [0];\n    let linesLength = 0;\n    // get an array of how many char per lines are being added.\n    for (let i = 0; i < insertedText.length; i++) {\n      if (insertedText[i] === '\\n') {\n        linesLength++;\n        addedLines[linesLength] = 0;\n      } else {\n        addedLines[linesLength]++;\n      }\n    }\n    // for the first line copy the style from the current char position.\n    if (addedLines[0] > 0) {\n      this.insertCharStyleObject(\n        cursorLoc.lineIndex,\n        cursorLoc.charIndex,\n        addedLines[0],\n        copiedStyle,\n      );\n      copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n    }\n    linesLength &&\n      this.insertNewlineStyleObject(\n        cursorLoc.lineIndex,\n        cursorLoc.charIndex + addedLines[0],\n        linesLength,\n      );\n    let i;\n    for (i = 1; i < linesLength; i++) {\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(\n          cursorLoc.lineIndex + i,\n          0,\n          addedLines[i],\n          copiedStyle,\n        );\n      } else if (copiedStyle) {\n        // this test is required in order to close #6841\n        // when a pasted buffer begins with a newline then\n        // this.styles[cursorLoc.lineIndex + i] and copiedStyle[0]\n        // may be undefined for some reason\n        if (this.styles[cursorLoc.lineIndex + i] && copiedStyle[0]) {\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n        }\n      }\n      copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n    }\n    if (addedLines[i] > 0) {\n      this.insertCharStyleObject(\n        cursorLoc.lineIndex + i,\n        0,\n        addedLines[i],\n        copiedStyle,\n      );\n    }\n  }\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars(start: number, end: number = start + 1) {\n    this.removeStyleFromTo(start, end);\n    this._text.splice(start, end - start);\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    this.initDimensions();\n    this.setCoords();\n    this._removeExtraneousStyles();\n  }\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars(\n    text: string,\n    style: TextStyleDeclaration[] | undefined,\n    start: number,\n    end: number = start,\n  ) {\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n    const graphemes = this.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [\n      ...this._text.slice(0, start),\n      ...graphemes,\n      ...this._text.slice(end),\n    ];\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    this.initDimensions();\n    this.setCoords();\n    this._removeExtraneousStyles();\n  }\n\n  /**\n   * Set the selectionStart and selectionEnd according to the new position of cursor\n   * mimic the key - mouse navigation when shift is pressed.\n   */\n  setSelectionStartEndWithShift(\n    start: number,\n    end: number,\n    newSelection: number,\n  ) {\n    if (newSelection <= start) {\n      if (end === start) {\n        this._selectionDirection = LEFT;\n      } else if (this._selectionDirection === RIGHT) {\n        this._selectionDirection = LEFT;\n        this.selectionEnd = start;\n      }\n      this.selectionStart = newSelection;\n    } else if (newSelection > start && newSelection < end) {\n      if (this._selectionDirection === RIGHT) {\n        this.selectionEnd = newSelection;\n      } else {\n        this.selectionStart = newSelection;\n      }\n    } else {\n      // newSelection is > selection start and end\n      if (end === start) {\n        this._selectionDirection = RIGHT;\n      } else if (this._selectionDirection === LEFT) {\n        this._selectionDirection = RIGHT;\n        this.selectionStart = end;\n      }\n      this.selectionEnd = newSelection;\n    }\n  }\n}\n","import { config } from '../../config';\nimport { getFabricDocument, getEnv } from '../../env';\nimport { capValue } from '../../util/misc/capValue';\nimport type { ITextEvents } from './ITextBehavior';\nimport { ITextBehavior } from './ITextBehavior';\nimport type { TKeyMapIText } from './constants';\nimport type { TOptions } from '../../typedefs';\nimport type { TextProps, SerializedTextProps } from '../Text/Text';\nimport { getDocumentFromElement } from '../../util/dom_misc';\nimport { CHANGED, LEFT, RIGHT } from '../../constants';\nimport type { IText } from './IText';\nimport type { TextStyleDeclaration } from '../Text/StyledText';\n\nexport abstract class ITextKeyBehavior<\n  Props extends TOptions<TextProps> = Partial<TextProps>,\n  SProps extends SerializedTextProps = SerializedTextProps,\n  EventSpec extends ITextEvents = ITextEvents,\n> extends ITextBehavior<Props, SProps, EventSpec> {\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behavior for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the IText or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = Object.assign({}, this.keysMap);\n   * The function must be in IText.prototype.myFunction And will receive event as args[0]\n   */\n  declare keysMap: TKeyMapIText;\n\n  declare keysMapRtl: TKeyMapIText;\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  declare ctrlKeysMapUp: TKeyMapIText;\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  declare ctrlKeysMapDown: TKeyMapIText;\n\n  declare hiddenTextarea: HTMLTextAreaElement | null;\n\n  /**\n   * DOM container to append the hiddenTextarea.\n   * An alternative to attaching to the document.body.\n   * Useful to reduce laggish redraw of the full document.body tree and\n   * also with modals event capturing that won't let the textarea take focus.\n   * @type HTMLElement\n   * @default\n   */\n  declare hiddenTextareaContainer?: HTMLElement | null;\n\n  private declare _clickHandlerInitialized: boolean;\n  private declare _copyDone: boolean;\n  private declare fromPaste: boolean;\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea() {\n    const doc =\n      (this.canvas && getDocumentFromElement(this.canvas.getElement())) ||\n      getFabricDocument();\n    const textarea = doc.createElement('textarea');\n    Object.entries({\n      autocapitalize: 'off',\n      autocorrect: 'off',\n      autocomplete: 'off',\n      spellcheck: 'false',\n      'data-fabric': 'textarea',\n      wrap: 'off',\n    }).map(([attribute, value]) => textarea.setAttribute(attribute, value));\n    const { top, left, fontSize } = this._calcTextareaPosition();\n    // line-height: 1px; was removed from the style to fix this:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\n    textarea.style.cssText = `position: absolute; top: ${top}; left: ${left}; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px; padding-top: ${fontSize};`;\n\n    (this.hiddenTextareaContainer || doc.body).appendChild(textarea);\n\n    Object.entries({\n      blur: 'blur',\n      keydown: 'onKeyDown',\n      keyup: 'onKeyUp',\n      input: 'onInput',\n      copy: 'copy',\n      cut: 'copy',\n      paste: 'paste',\n      compositionstart: 'onCompositionStart',\n      compositionupdate: 'onCompositionUpdate',\n      compositionend: 'onCompositionEnd',\n    } as Record<string, keyof this>).map(([eventName, handler]) =>\n      textarea.addEventListener(\n        eventName,\n        (this[handler] as EventListener).bind(this),\n      ),\n    );\n    this.hiddenTextarea = textarea;\n  }\n\n  /**\n   * Override this method to customize cursor behavior on textbox blur\n   */\n  blur() {\n    this.abortCursorAnimation();\n  }\n\n  /**\n   * Handles keydown event\n   * only used for arrows and combination of modifier keys.\n   * @param {KeyboardEvent} e Event object\n   */\n  onKeyDown(e: KeyboardEvent) {\n    if (!this.isEditing) {\n      return;\n    }\n    const keyMap = this.direction === 'rtl' ? this.keysMapRtl : this.keysMap;\n    if (e.keyCode in keyMap) {\n      (this[keyMap[e.keyCode] as keyof this] as (arg: KeyboardEvent) => void)(\n        e,\n      );\n    } else if (e.keyCode in this.ctrlKeysMapDown && (e.ctrlKey || e.metaKey)) {\n      (\n        this[this.ctrlKeysMapDown[e.keyCode] as keyof this] as (\n          arg: KeyboardEvent,\n        ) => void\n      )(e);\n    } else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.inCompositionMode = false;\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    } else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  }\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {KeyboardEvent} e Event object\n   */\n  onKeyUp(e: KeyboardEvent) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n    if (e.keyCode in this.ctrlKeysMapUp && (e.ctrlKey || e.metaKey)) {\n      (\n        this[this.ctrlKeysMapUp[e.keyCode] as keyof this] as (\n          arg: KeyboardEvent,\n        ) => void\n      )(e);\n    } else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  }\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput(this: this & { hiddenTextarea: HTMLTextAreaElement }, e: Event) {\n    const fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n    if (!this.isEditing) {\n      return;\n    }\n    const updateAndFire = () => {\n      this.updateFromTextArea();\n      this.fire(CHANGED);\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this as unknown as IText });\n        this.canvas.requestRenderAll();\n      }\n    };\n    if (this.hiddenTextarea.value === '') {\n      this.styles = {};\n      updateAndFire();\n      return;\n    }\n    // decisions about style changes.\n    const nextText = this._splitTextIntoLines(\n        this.hiddenTextarea.value,\n      ).graphemeText,\n      charCount = this._text.length,\n      nextCharCount = nextText.length,\n      selectionStart = this.selectionStart,\n      selectionEnd = this.selectionEnd,\n      selection = selectionStart !== selectionEnd;\n    let copiedStyle: TextStyleDeclaration[] | undefined,\n      removedText,\n      charDiff = nextCharCount - charCount,\n      removeFrom,\n      removeTo;\n\n    const textareaSelection = this.fromStringToGraphemeSelection(\n      this.hiddenTextarea.selectionStart,\n      this.hiddenTextarea.selectionEnd,\n      this.hiddenTextarea.value,\n    );\n    const backDelete = selectionStart > textareaSelection.selectionStart;\n\n    if (selection) {\n      removedText = this._text.slice(selectionStart, selectionEnd);\n      charDiff += selectionEnd - selectionStart;\n    } else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(selectionEnd + charDiff, selectionEnd);\n      } else {\n        removedText = this._text.slice(\n          selectionStart,\n          selectionStart - charDiff,\n        );\n      }\n    }\n    const insertedText = nextText.slice(\n      textareaSelection.selectionEnd - charDiff,\n      textareaSelection.selectionEnd,\n    );\n    if (removedText && removedText.length) {\n      if (insertedText.length) {\n        // let's copy some style before deleting.\n        // we want to copy the style before the cursor OR the style at the cursor if selection\n        // is bigger than 0.\n        copiedStyle = this.getSelectionStyles(\n          selectionStart,\n          selectionStart + 1,\n          false,\n        );\n        // now duplicate the style one for each inserted text.\n        copiedStyle = insertedText.map(\n          () =>\n            // this return an array of references, but that is fine since we are\n            // copying the style later.\n            copiedStyle![0],\n        );\n      }\n      if (selection) {\n        removeFrom = selectionStart;\n        removeTo = selectionEnd;\n      } else if (backDelete) {\n        // detect differences between forwardDelete and backDelete\n        removeFrom = selectionEnd - removedText.length;\n        removeTo = selectionEnd;\n      } else {\n        removeFrom = selectionEnd;\n        removeTo = selectionEnd + removedText.length;\n      }\n      this.removeStyleFromTo(removeFrom, removeTo);\n    }\n    if (insertedText.length) {\n      const { copyPasteData } = getEnv();\n      if (\n        fromPaste &&\n        insertedText.join('') === copyPasteData.copiedText &&\n        !config.disableStyleCopyPaste\n      ) {\n        copiedStyle = copyPasteData.copiedTextStyle;\n      }\n      this.insertNewStyleBlock(insertedText, selectionStart, copiedStyle);\n    }\n    updateAndFire();\n  }\n\n  /**\n   * Composition start\n   */\n  onCompositionStart() {\n    this.inCompositionMode = true;\n  }\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd() {\n    this.inCompositionMode = false;\n  }\n\n  onCompositionUpdate({ target }: CompositionEvent) {\n    const { selectionStart, selectionEnd } = target as HTMLTextAreaElement;\n    this.compositionStart = selectionStart;\n    this.compositionEnd = selectionEnd;\n    this.updateTextareaPosition();\n  }\n\n  /**\n   * Copies selected text\n   */\n  copy() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n    const { copyPasteData } = getEnv();\n    copyPasteData.copiedText = this.getSelectedText();\n    if (!config.disableStyleCopyPaste) {\n      copyPasteData.copiedTextStyle = this.getSelectionStyles(\n        this.selectionStart,\n        this.selectionEnd,\n        true,\n      );\n    } else {\n      copyPasteData.copiedTextStyle = undefined;\n    }\n    this._copyDone = true;\n  }\n\n  /**\n   * Pastes text\n   */\n  paste() {\n    this.fromPaste = true;\n  }\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor(lineIndex: number, charIndex: number): number {\n    let widthBeforeCursor = this._getLineLeftOffset(lineIndex),\n      bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n    return widthBeforeCursor;\n  }\n\n  /**\n   * Gets start offset of a selection\n   * @param {KeyboardEvent} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset(e: KeyboardEvent, isRight: boolean): number {\n    const selectionProp = this._getSelectionForOffset(e, isRight),\n      cursorLocation = this.get2DCursorLocation(selectionProp),\n      lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (\n      lineIndex === this._textLines.length - 1 ||\n      e.metaKey ||\n      e.keyCode === 34\n    ) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n    const charIndex = cursorLocation.charIndex,\n      widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n      indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n      textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n    return (\n      textAfterCursor.length +\n      indexOnOtherLine +\n      1 +\n      this.missingNewlineOffset(lineIndex)\n    );\n  }\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {KeyboardEvent} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset(e: KeyboardEvent, isRight: boolean): number {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    } else {\n      return this.selectionStart;\n    }\n  }\n\n  /**\n   * @param {KeyboardEvent} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset(e: KeyboardEvent, isRight: boolean): number {\n    const selectionProp = this._getSelectionForOffset(e, isRight),\n      cursorLocation = this.get2DCursorLocation(selectionProp),\n      lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    const charIndex = cursorLocation.charIndex,\n      widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n      indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n      textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n      missingNewlineOffset = this.missingNewlineOffset(lineIndex - 1);\n    // return a negative offset\n    return (\n      -this._textLines[lineIndex - 1].length +\n      indexOnOtherLine -\n      textBeforeCursor.length +\n      (1 - missingNewlineOffset)\n    );\n  }\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine(lineIndex: number, width: number) {\n    const line = this._textLines[lineIndex],\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    let widthOfCharsOnLine = lineLeftOffset,\n      indexOnLine = 0,\n      charWidth,\n      foundMatch;\n\n    for (let j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        const leftEdge = widthOfCharsOnLine - charWidth,\n          rightEdge = widthOfCharsOnLine,\n          offsetFromLeftEdge = Math.abs(leftEdge - width),\n          offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : j - 1;\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  }\n\n  /**\n   * Moves cursor down\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorDown(e: KeyboardEvent) {\n    if (\n      this.selectionStart >= this._text.length &&\n      this.selectionEnd >= this._text.length\n    ) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  }\n\n  /**\n   * Moves cursor up\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorUp(e: KeyboardEvent) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  }\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {KeyboardEvent} e Event object\n   */\n  _moveCursorUpOrDown(direction: 'Up' | 'Down', e: KeyboardEvent) {\n    const offset = this[`get${direction}CursorOffset`](\n      e,\n      this._selectionDirection === RIGHT,\n    );\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    } else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      const max = this.text.length;\n      this.selectionStart = capValue(0, this.selectionStart, max);\n      this.selectionEnd = capValue(0, this.selectionEnd, max);\n      // TODO fix: abort and init should be an alternative depending\n      // on selectionStart/End being equal or different\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  }\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift(offset: number) {\n    const newSelection =\n      this._selectionDirection === LEFT\n        ? this.selectionStart + offset\n        : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(\n      this.selectionStart,\n      this.selectionEnd,\n      newSelection,\n    );\n    return offset !== 0;\n  }\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift(offset: number) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    } else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  }\n\n  /**\n   * Moves cursor left\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorLeft(e: KeyboardEvent) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  }\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   *\n   * @todo refactor not to use method name composition\n   */\n  _move(\n    e: KeyboardEvent,\n    prop: 'selectionStart' | 'selectionEnd',\n    direction: 'Left' | 'Right',\n  ): boolean {\n    let newValue: number | undefined;\n    if (e.altKey) {\n      newValue = this[`findWordBoundary${direction}`](this[prop]);\n    } else if (e.metaKey || e.keyCode === 35 || e.keyCode === 36) {\n      newValue = this[`findLineBoundary${direction}`](this[prop]);\n    } else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== 'undefined' && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @private\n   */\n  _moveLeft(e: KeyboardEvent, prop: 'selectionStart' | 'selectionEnd') {\n    return this._move(e, prop, 'Left');\n  }\n\n  /**\n   * @private\n   */\n  _moveRight(e: KeyboardEvent, prop: 'selectionStart' | 'selectionEnd') {\n    return this._move(e, prop, 'Right');\n  }\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {KeyboardEvent} e\n   */\n  moveCursorLeftWithoutShift(e: KeyboardEvent) {\n    let change = true;\n    this._selectionDirection = LEFT;\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (\n      this.selectionEnd === this.selectionStart &&\n      this.selectionStart !== 0\n    ) {\n      change = this._moveLeft(e, 'selectionStart');\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  }\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {KeyboardEvent} e\n   */\n  moveCursorLeftWithShift(e: KeyboardEvent) {\n    if (\n      this._selectionDirection === RIGHT &&\n      this.selectionStart !== this.selectionEnd\n    ) {\n      return this._moveLeft(e, 'selectionEnd');\n    } else if (this.selectionStart !== 0) {\n      this._selectionDirection = LEFT;\n      return this._moveLeft(e, 'selectionStart');\n    }\n  }\n\n  /**\n   * Moves cursor right\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorRight(e: KeyboardEvent) {\n    if (\n      this.selectionStart >= this._text.length &&\n      this.selectionEnd >= this._text.length\n    ) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  }\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {KeyboardEvent} e Event object\n   */\n  _moveCursorLeftOrRight(direction: 'Left' | 'Right', e: KeyboardEvent) {\n    const actionName = `moveCursor${direction}${\n      e.shiftKey ? 'WithShift' : 'WithoutShift'\n    }` as const;\n    this._currentCursorOpacity = 1;\n    if (this[actionName](e)) {\n      // TODO fix: abort and init should be an alternative depending\n      // on selectionStart/End being equal or different\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  }\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {KeyboardEvent} e\n   */\n  moveCursorRightWithShift(e: KeyboardEvent) {\n    if (\n      this._selectionDirection === LEFT &&\n      this.selectionStart !== this.selectionEnd\n    ) {\n      return this._moveRight(e, 'selectionStart');\n    } else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = RIGHT;\n      return this._moveRight(e, 'selectionEnd');\n    }\n  }\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorRightWithoutShift(e: KeyboardEvent) {\n    let changed = true;\n    this._selectionDirection = RIGHT;\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    } else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  }\n}\n","import type { TPointerEvent, TPointerEventInfo } from '../../EventTypeDefs';\nimport type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport { stopEvent } from '../../util/dom_event';\nimport { invertTransform } from '../../util/misc/matrix';\nimport { DraggableTextDelegate } from './DraggableTextDelegate';\nimport type { ITextEvents } from './ITextBehavior';\nimport { ITextKeyBehavior } from './ITextKeyBehavior';\nimport type { TOptions } from '../../typedefs';\nimport type { TextProps, SerializedTextProps } from '../Text/Text';\nimport type { IText } from './IText';\n/**\n * `LEFT_CLICK === 0`\n */\nconst notALeftClick = (e: Event) => !!(e as MouseEvent).button;\n\nexport abstract class ITextClickBehavior<\n  Props extends TOptions<TextProps> = Partial<TextProps>,\n  SProps extends SerializedTextProps = SerializedTextProps,\n  EventSpec extends ITextEvents = ITextEvents,\n> extends ITextKeyBehavior<Props, SProps, EventSpec> {\n  private declare __lastSelected: boolean;\n  private declare __lastClickTime: number;\n  private declare __lastLastClickTime: number;\n  private declare __lastPointer: XY | Record<string, never>;\n  private declare __newClickTime: number;\n\n  protected draggableTextDelegate: DraggableTextDelegate;\n\n  initBehavior() {\n    // Initializes event handlers related to cursor or selection\n    this.on('mousedown', this._mouseDownHandler);\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\n    this.on('mouseup', this.mouseUpHandler);\n    this.on('mousedblclick', this.doubleClickHandler);\n    this.on('tripleclick', this.tripleClickHandler);\n\n    // Initializes \"dbclick\" event handler\n    this.__lastClickTime = +new Date();\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n    this.__lastPointer = {};\n    this.on('mousedown', this.onMouseDown);\n\n    this.draggableTextDelegate = new DraggableTextDelegate(\n      this as unknown as IText,\n    );\n\n    super.initBehavior();\n  }\n\n  /**\n   * If this method returns true a mouse move operation over a text selection\n   * will not prevent the native mouse event allowing the browser to start a drag operation.\n   * shouldStartDragging can be read 'do not prevent default for mouse move event'\n   * To prevent drag and drop between objects both shouldStartDragging and onDragStart should return false\n   * @returns\n   */\n  shouldStartDragging() {\n    return this.draggableTextDelegate.isActive();\n  }\n\n  /**\n   * @public override this method to control whether instance should/shouldn't become a drag source,\n   * @see also {@link DraggableTextDelegate#isActive}\n   * To prevent drag and drop between objects both shouldStartDragging and onDragStart should return false\n   * @returns {boolean} should handle event\n   */\n  onDragStart(e: DragEvent) {\n    return this.draggableTextDelegate.onDragStart(e);\n  }\n\n  /**\n   * @public override this method to control whether instance should/shouldn't become a drop target\n   */\n  canDrop(e: DragEvent) {\n    return this.draggableTextDelegate.canDrop(e);\n  }\n\n  /**\n   * Default event handler to simulate triple click\n   * @private\n   */\n  onMouseDown(options: TPointerEventInfo) {\n    if (!this.canvas) {\n      return;\n    }\n    this.__newClickTime = +new Date();\n    const newPointer = options.pointer;\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n      stopEvent(options.e);\n    }\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastSelected = this.selected && !this.getActiveControl();\n  }\n\n  isTripleClick(newPointer: XY) {\n    return (\n      this.__newClickTime - this.__lastClickTime < 500 &&\n      this.__lastClickTime - this.__lastLastClickTime < 500 &&\n      this.__lastPointer.x === newPointer.x &&\n      this.__lastPointer.y === newPointer.y\n    );\n  }\n\n  /**\n   * Default handler for double click, select a word\n   */\n  doubleClickHandler(options: TPointerEventInfo) {\n    if (!this.isEditing) {\n      return;\n    }\n    this.selectWord(this.getSelectionStartFromPointer(options.e));\n  }\n\n  /**\n   * Default handler for triple click, select a line\n   */\n  tripleClickHandler(options: TPointerEventInfo) {\n    if (!this.isEditing) {\n      return;\n    }\n    this.selectLine(this.getSelectionStartFromPointer(options.e));\n  }\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   * initializing a mousedDown on a text area will cancel fabricjs knowledge of\n   * current compositionMode. It will be set to false.\n   */\n  _mouseDownHandler({ e }: TPointerEventInfo) {\n    if (\n      !this.canvas ||\n      !this.editable ||\n      notALeftClick(e) ||\n      this.getActiveControl()\n    ) {\n      return;\n    }\n\n    if (this.draggableTextDelegate.start(e)) {\n      return;\n    }\n\n    this.canvas.textEditingManager.register(this);\n\n    if (this.selected) {\n      this.inCompositionMode = false;\n      this.setCursorByClick(e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n      this.renderCursorOrSelection();\n    }\n  }\n\n  /**\n   * Default event handler for the basic functionalities needed on mousedown:before\n   * can be overridden to do something different.\n   * Scope of this implementation is: verify the object is already selected when mousing down\n   */\n  _mouseDownHandlerBefore({ e }: TPointerEventInfo) {\n    if (!this.canvas || !this.editable || notALeftClick(e)) {\n      return;\n    }\n    // we want to avoid that an object that was selected and then becomes unselectable,\n    // may trigger editing mode in some way.\n    this.selected = this === this.canvas._activeObject;\n  }\n\n  /**\n   * standard handler for mouse up, overridable\n   * @private\n   */\n  mouseUpHandler({ e, transform }: TPointerEventInfo) {\n    const didDrag = this.draggableTextDelegate.end(e);\n    if (this.canvas) {\n      this.canvas.textEditingManager.unregister(this);\n\n      const activeObject = this.canvas._activeObject;\n      if (activeObject && activeObject !== this) {\n        // avoid running this logic when there is an active object\n        // this because is possible with shift click and fast clicks,\n        // to rapidly deselect and reselect this object and trigger an enterEdit\n        return;\n      }\n    }\n    if (\n      !this.editable ||\n      (this.group && !this.group.interactive) ||\n      (transform && transform.actionPerformed) ||\n      notALeftClick(e) ||\n      didDrag\n    ) {\n      return;\n    }\n\n    if (this.__lastSelected && !this.getActiveControl()) {\n      this.selected = false;\n      this.__lastSelected = false;\n      this.enterEditing(e);\n      if (this.selectionStart === this.selectionEnd) {\n        this.initDelayedCursor(true);\n      } else {\n        this.renderCursorOrSelection();\n      }\n    } else {\n      this.selected = true;\n    }\n  }\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {TPointerEvent} e Event object\n   */\n  setCursorByClick(e: TPointerEvent) {\n    const newSelection = this.getSelectionStartFromPointer(e),\n      start = this.selectionStart,\n      end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    } else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  }\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {TPointerEvent} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer(e: TPointerEvent): number {\n    const mouseOffset = this.canvas!.getScenePoint(e)\n      .transform(invertTransform(this.calcTransformMatrix()))\n      .add(new Point(-this._getLeftOffset(), -this._getTopOffset()));\n    let height = 0,\n      charIndex = 0,\n      lineIndex = 0;\n\n    for (let i = 0; i < this._textLines.length; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i);\n        lineIndex = i;\n        if (i > 0) {\n          charIndex +=\n            this._textLines[i - 1].length + this.missingNewlineOffset(i - 1);\n        }\n      } else {\n        break;\n      }\n    }\n    const lineLeftOffset = Math.abs(this._getLineLeftOffset(lineIndex));\n    let width = lineLeftOffset;\n    const charLength = this._textLines[lineIndex].length;\n    const chars = this.__charBounds[lineIndex];\n    for (let j = 0; j < charLength; j++) {\n      // i removed something about flipX here, check.\n      const charWidth = chars[j].kernedWidth;\n      const widthAfter = width + charWidth;\n      if (mouseOffset.x <= widthAfter) {\n        // if the pointer is closer to the end of the char we increment charIndex\n        // in order to position the cursor after the char\n        if (\n          Math.abs(mouseOffset.x - widthAfter) <=\n          Math.abs(mouseOffset.x - width)\n        ) {\n          charIndex++;\n        }\n        break;\n      }\n      width = widthAfter;\n      charIndex++;\n    }\n\n    return Math.min(\n      // if object is horizontally flipped, mirror cursor location from the end\n      this.flipX ? charLength - charIndex : charIndex,\n      this._text.length,\n    );\n  }\n}\n","export type TKeyMapIText = Record<\n  KeyboardEvent['keyCode'],\n  CursorHandlingMethods\n>;\n\nexport type CursorHandlingMethods =\n  | 'moveCursorUp'\n  | 'moveCursorDown'\n  | 'moveCursorLeft'\n  | 'moveCursorRight'\n  | 'exitEditing'\n  | 'copy'\n  | 'cut'\n  | 'selectAll';\n\nconst MOVE_CURSOR_UP: CursorHandlingMethods = 'moveCursorUp';\nconst MOVE_CURSOR_DOWN: CursorHandlingMethods = 'moveCursorDown';\nconst MOVE_CURSOR_LEFT: CursorHandlingMethods = 'moveCursorLeft';\nconst MOVE_CURSOR_RIGHT: CursorHandlingMethods = 'moveCursorRight';\nconst EXIT_EDITING: CursorHandlingMethods = 'exitEditing';\n\n// @TODO look into import { Key } from 'ts-key-enum';\n// and transition from keyCode to Key\n// also reduce string duplication\nexport const keysMap: TKeyMapIText = {\n  9: EXIT_EDITING,\n  27: EXIT_EDITING,\n  33: MOVE_CURSOR_UP,\n  34: MOVE_CURSOR_DOWN,\n  35: MOVE_CURSOR_RIGHT,\n  36: MOVE_CURSOR_LEFT,\n  37: MOVE_CURSOR_LEFT,\n  38: MOVE_CURSOR_UP,\n  39: MOVE_CURSOR_RIGHT,\n  40: MOVE_CURSOR_DOWN,\n};\n\nexport const keysMapRtl: TKeyMapIText = {\n  9: EXIT_EDITING,\n  27: EXIT_EDITING,\n  33: MOVE_CURSOR_UP,\n  34: MOVE_CURSOR_DOWN,\n  35: MOVE_CURSOR_LEFT,\n  36: MOVE_CURSOR_RIGHT,\n  37: MOVE_CURSOR_RIGHT,\n  38: MOVE_CURSOR_UP,\n  39: MOVE_CURSOR_LEFT,\n  40: MOVE_CURSOR_DOWN,\n};\n\n/**\n * For functionalities on keyUp + ctrl || cmd\n */\nexport const ctrlKeysMapUp: TKeyMapIText = {\n  67: 'copy',\n  // there was a reason this wasn't deleted. for now leave it here\n  88: 'cut',\n};\n\n/**\n * For functionalities on keyDown + ctrl || cmd\n */\nexport const ctrlKeysMapDown: TKeyMapIText = {\n  65: 'selectAll',\n};\n","import { Canvas } from '../../canvas/Canvas';\nimport type { ITextEvents } from './ITextBehavior';\nimport { ITextClickBehavior } from './ITextClickBehavior';\nimport {\n  ctrlKeysMapDown,\n  ctrlKeysMapUp,\n  keysMap,\n  keysMapRtl,\n} from './constants';\nimport type { TClassProperties, TFiller, TOptions } from '../../typedefs';\nimport { classRegistry } from '../../ClassRegistry';\nimport type { SerializedTextProps, TextProps } from '../Text/Text';\nimport {\n  JUSTIFY,\n  JUSTIFY_CENTER,\n  JUSTIFY_LEFT,\n  JUSTIFY_RIGHT,\n} from '../Text/constants';\nimport { CENTER, FILL, LEFT, RIGHT } from '../../constants';\nimport type { ObjectToCanvasElementOptions } from '../Object/Object';\n\nexport type CursorBoundaries = {\n  left: number;\n  top: number;\n  leftOffset: number;\n  topOffset: number;\n};\n\nexport type CursorRenderingData = {\n  color: string;\n  opacity: number;\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n};\n\n// Declare IText protected properties to workaround TS\nconst protectedDefaultValues = {\n  _selectionDirection: null,\n  _reSpace: /\\s|\\r?\\n/,\n  inCompositionMode: false,\n};\n\nexport const iTextDefaultValues: Partial<TClassProperties<IText>> = {\n  selectionStart: 0,\n  selectionEnd: 0,\n  selectionColor: 'rgba(17,119,255,0.3)',\n  isEditing: false,\n  editable: true,\n  editingBorderColor: 'rgba(102,153,255,0.25)',\n  cursorWidth: 2,\n  cursorColor: '',\n  cursorDelay: 1000,\n  cursorDuration: 600,\n  caching: true,\n  hiddenTextareaContainer: null,\n  keysMap,\n  keysMapRtl,\n  ctrlKeysMapDown,\n  ctrlKeysMapUp,\n  ...protectedDefaultValues,\n};\n\n// @TODO this is not complete\ninterface UniqueITextProps {\n  selectionStart: number;\n  selectionEnd: number;\n}\n\nexport interface SerializedITextProps\n  extends SerializedTextProps,\n    UniqueITextProps {}\n\nexport interface ITextProps extends TextProps, UniqueITextProps {}\n\n/**\n * @fires changed\n * @fires selection:changed\n * @fires editing:entered\n * @fires editing:exited\n * @fires dragstart\n * @fires drag drag event firing on the drag source\n * @fires dragend\n * @fires copy\n * @fires cut\n * @fires paste\n *\n * #### Supported key combinations\n * ```\n *   Move cursor:                    left, right, up, down\n *   Select character:               shift + left, shift + right\n *   Select text vertically:         shift + up, shift + down\n *   Move cursor by word:            alt + left, alt + right\n *   Select words:                   shift + alt + left, shift + alt + right\n *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n *   Jump to start/end of text:      cmd + up, cmd + down\n *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n *   Delete character:               backspace\n *   Delete word:                    alt + backspace\n *   Delete line:                    cmd + backspace\n *   Forward delete:                 delete\n *   Copy text:                      ctrl/cmd + c\n *   Paste text:                     ctrl/cmd + v\n *   Cut text:                       ctrl/cmd + x\n *   Select entire text:             ctrl/cmd + a\n *   Quit editing                    tab or esc\n * ```\n *\n * #### Supported mouse/touch combination\n * ```\n *   Position cursor:                click/touch\n *   Create selection:               click/touch & drag\n *   Create selection:               click & shift + click\n *   Select word:                    double click\n *   Select line:                    triple click\n * ```\n */\nexport class IText<\n    Props extends TOptions<ITextProps> = Partial<ITextProps>,\n    SProps extends SerializedITextProps = SerializedITextProps,\n    EventSpec extends ITextEvents = ITextEvents,\n  >\n  extends ITextClickBehavior<Props, SProps, EventSpec>\n  implements UniqueITextProps\n{\n  /**\n   * Index where text selection starts (or where cursor is when there is no selection)\n   * @type Number\n   * @default\n   */\n  declare selectionStart: number;\n\n  /**\n   * Index where text selection ends\n   * @type Number\n   * @default\n   */\n  declare selectionEnd: number;\n\n  declare compositionStart: number;\n\n  declare compositionEnd: number;\n\n  /**\n   * Color of text selection\n   * @type String\n   * @default\n   */\n  declare selectionColor: string;\n\n  /**\n   * Indicates whether text is in editing mode\n   * @type Boolean\n   * @default\n   */\n  declare isEditing: boolean;\n\n  /**\n   * Indicates whether a text can be edited\n   * @type Boolean\n   * @default\n   */\n  declare editable: boolean;\n\n  /**\n   * Border color of text object while it's in editing mode\n   * @type String\n   * @default\n   */\n  declare editingBorderColor: string;\n\n  /**\n   * Width of cursor (in px)\n   * @type Number\n   * @default\n   */\n  declare cursorWidth: number;\n\n  /**\n   * Color of text cursor color in editing mode.\n   * if not set (default) will take color from the text.\n   * if set to a color value that fabric can understand, it will\n   * be used instead of the color of the text at the current position.\n   * @type String\n   * @default\n   */\n  declare cursorColor: string;\n\n  /**\n   * Delay between cursor blink (in ms)\n   * @type Number\n   * @default\n   */\n  declare cursorDelay: number;\n\n  /**\n   * Duration of cursor fade in (in ms)\n   * @type Number\n   * @default\n   */\n  declare cursorDuration: number;\n\n  declare compositionColor: string;\n\n  /**\n   * Indicates whether internal text char widths can be cached\n   * @type Boolean\n   * @default\n   */\n  declare caching: boolean;\n\n  static ownDefaults = iTextDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...IText.ownDefaults };\n  }\n\n  static type = 'IText';\n\n  get type() {\n    const type = super.type;\n    // backward compatibility\n    return type === 'itext' ? 'i-text' : type;\n  }\n\n  /**\n   * Constructor\n   * @param {String} text Text string\n   * @param {Object} [options] Options object\n   */\n  constructor(text: string, options?: Props) {\n    super(text, { ...IText.ownDefaults, ...options } as Props);\n    this.initBehavior();\n  }\n\n  /**\n   * While editing handle differently\n   * @private\n   * @param {string} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    if (this.isEditing && this._savedProps && key in this._savedProps) {\n      // @ts-expect-error irritating TS\n      this._savedProps[key] = value;\n      return this;\n    }\n    if (key === 'canvas') {\n      this.canvas instanceof Canvas &&\n        this.canvas.textEditingManager.remove(this);\n      value instanceof Canvas && value.textEditingManager.add(this);\n    }\n    return super._set(key, value);\n  }\n\n  /**\n   * Sets selection start (left boundary of a selection)\n   * @param {Number} index Index to set selection start to\n   */\n  setSelectionStart(index: number) {\n    index = Math.max(index, 0);\n    this._updateAndFire('selectionStart', index);\n  }\n\n  /**\n   * Sets selection end (right boundary of a selection)\n   * @param {Number} index Index to set selection end to\n   */\n  setSelectionEnd(index: number) {\n    index = Math.min(index, this.text.length);\n    this._updateAndFire('selectionEnd', index);\n  }\n\n  /**\n   * @private\n   * @param {String} property 'selectionStart' or 'selectionEnd'\n   * @param {Number} index new position of property\n   */\n  protected _updateAndFire(\n    property: 'selectionStart' | 'selectionEnd',\n    index: number,\n  ) {\n    if (this[property] !== index) {\n      this._fireSelectionChanged();\n      this[property] = index;\n    }\n    this._updateTextarea();\n  }\n\n  /**\n   * Fires the even of selection changed\n   * @private\n   */\n  _fireSelectionChanged() {\n    this.fire('selection:changed');\n    this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n  }\n\n  /**\n   * Initialize text dimensions. Render all text on given context\n   * or on a offscreen canvas to get the text width with measureText.\n   * Updates this.width and this.height with the proper values.\n   * Does not return dimensions.\n   * @private\n   */\n  initDimensions() {\n    this.isEditing && this.initDelayedCursor();\n    super.initDimensions();\n  }\n\n  /**\n   * Gets style of a current selection/cursor (at the start position)\n   * if startIndex or endIndex are not provided, selectionStart or selectionEnd will be used.\n   * @param {Number} startIndex Start index to get styles at\n   * @param {Number} endIndex End index to get styles at, if not specified selectionEnd or startIndex + 1\n   * @param {Boolean} [complete] get full style or not\n   * @return {Array} styles an array with one, zero or more Style objects\n   */\n  getSelectionStyles(\n    startIndex: number = this.selectionStart || 0,\n    endIndex: number = this.selectionEnd,\n    complete?: boolean,\n  ) {\n    return super.getSelectionStyles(startIndex, endIndex, complete);\n  }\n\n  /**\n   * Sets style of a current selection, if no selection exist, do not set anything.\n   * @param {Object} [styles] Styles object\n   * @param {Number} [startIndex] Start index to get styles at\n   * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n   */\n  setSelectionStyles(\n    styles: object,\n    startIndex: number = this.selectionStart || 0,\n    endIndex: number = this.selectionEnd,\n  ) {\n    return super.setSelectionStyles(styles, startIndex, endIndex);\n  }\n\n  /**\n   * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n   * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n   * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. useful to manage styles.\n   */\n  get2DCursorLocation(\n    selectionStart = this.selectionStart,\n    skipWrapping?: boolean,\n  ) {\n    return super.get2DCursorLocation(selectionStart, skipWrapping);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    super.render(ctx);\n    // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n    // the correct position but not at every cursor animation.\n    this.cursorOffsetCache = {};\n    this.renderCursorOrSelection();\n  }\n\n  /**\n   * @override block cursor/selection logic while rendering the exported canvas\n   * @todo this workaround should be replaced with a more robust solution\n   */\n  toCanvasElement(options?: ObjectToCanvasElementOptions): HTMLCanvasElement {\n    const isEditing = this.isEditing;\n    this.isEditing = false;\n    const canvas = super.toCanvasElement(options);\n    this.isEditing = isEditing;\n    return canvas;\n  }\n\n  /**\n   * Renders cursor or selection (depending on what exists)\n   * it does on the contextTop. If contextTop is not available, do nothing.\n   */\n  renderCursorOrSelection() {\n    if (!this.isEditing) {\n      return;\n    }\n    const ctx = this.clearContextTop(true);\n    if (!ctx) {\n      return;\n    }\n    const boundaries = this._getCursorBoundaries();\n    if (this.selectionStart === this.selectionEnd && !this.inCompositionMode) {\n      this.renderCursor(ctx, boundaries);\n    } else {\n      this.renderSelection(ctx, boundaries);\n    }\n    this.canvas!.contextTopDirty = true;\n    ctx.restore();\n  }\n\n  /**\n   * Returns cursor boundaries (left, top, leftOffset, topOffset)\n   * left/top are left/top of entire text box\n   * leftOffset/topOffset are offset from that left/top point of a text box\n   * @private\n   * @param {number} [index] index from start\n   * @param {boolean} [skipCaching]\n   */\n  _getCursorBoundaries(\n    index: number = this.selectionStart,\n    skipCaching?: boolean,\n  ): CursorBoundaries {\n    const left = this._getLeftOffset(),\n      top = this._getTopOffset(),\n      offsets = this._getCursorBoundariesOffsets(index, skipCaching);\n    return {\n      left: left,\n      top: top,\n      leftOffset: offsets.left,\n      topOffset: offsets.top,\n    };\n  }\n\n  /**\n   * Caches and returns cursor left/top offset relative to instance's center point\n   * @private\n   * @param {number} index index from start\n   * @param {boolean} [skipCaching]\n   */\n  _getCursorBoundariesOffsets(\n    index: number,\n    skipCaching?: boolean,\n  ): { left: number; top: number } {\n    if (skipCaching) {\n      return this.__getCursorBoundariesOffsets(index);\n    }\n    if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n      return this.cursorOffsetCache as { left: number; top: number };\n    }\n    return (this.cursorOffsetCache = this.__getCursorBoundariesOffsets(index));\n  }\n\n  /**\n   * Calculates cursor left/top offset relative to instance's center point\n   * @private\n   * @param {number} index index from start\n   */\n  __getCursorBoundariesOffsets(index: number) {\n    let topOffset = 0,\n      leftOffset = 0;\n    const { charIndex, lineIndex } = this.get2DCursorLocation(index);\n\n    for (let i = 0; i < lineIndex; i++) {\n      topOffset += this.getHeightOfLine(i);\n    }\n    const lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    const bound = this.__charBounds[lineIndex][charIndex];\n    bound && (leftOffset = bound.left);\n    if (\n      this.charSpacing !== 0 &&\n      charIndex === this._textLines[lineIndex].length\n    ) {\n      leftOffset -= this._getWidthOfCharSpacing();\n    }\n    const boundaries = {\n      top: topOffset,\n      left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\n    };\n    if (this.direction === 'rtl') {\n      if (\n        this.textAlign === RIGHT ||\n        this.textAlign === JUSTIFY ||\n        this.textAlign === JUSTIFY_RIGHT\n      ) {\n        boundaries.left *= -1;\n      } else if (this.textAlign === LEFT || this.textAlign === JUSTIFY_LEFT) {\n        boundaries.left = lineLeftOffset - (leftOffset > 0 ? leftOffset : 0);\n      } else if (\n        this.textAlign === CENTER ||\n        this.textAlign === JUSTIFY_CENTER\n      ) {\n        boundaries.left = lineLeftOffset - (leftOffset > 0 ? leftOffset : 0);\n      }\n    }\n    return boundaries;\n  }\n\n  /**\n   * Renders cursor on context Top, outside the animation cycle, on request\n   * Used for the drag/drop effect.\n   * If contextTop is not available, do nothing.\n   */\n  renderCursorAt(selectionStart: number) {\n    this._renderCursor(\n      this.canvas!.contextTop,\n      this._getCursorBoundaries(selectionStart, true),\n      selectionStart,\n    );\n  }\n\n  /**\n   * Renders cursor\n   * @param {Object} boundaries\n   * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n   */\n  renderCursor(ctx: CanvasRenderingContext2D, boundaries: CursorBoundaries) {\n    this._renderCursor(ctx, boundaries, this.selectionStart);\n  }\n\n  /**\n   * Return the data needed to render the cursor for given selection start\n   * The left,top are relative to the object, while width and height are prescaled\n   * to look think with canvas zoom and object scaling,\n   * so they depend on canvas and object scaling\n   */\n  getCursorRenderingData(\n    selectionStart: number = this.selectionStart,\n    boundaries: CursorBoundaries = this._getCursorBoundaries(selectionStart),\n  ): CursorRenderingData {\n    const cursorLocation = this.get2DCursorLocation(selectionStart),\n      lineIndex = cursorLocation.lineIndex,\n      charIndex =\n        cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n      charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n      multiplier = this.getObjectScaling().x * this.canvas!.getZoom(),\n      cursorWidth = this.cursorWidth / multiplier,\n      dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY'),\n      topOffset =\n        boundaries.topOffset +\n        ((1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex)) /\n          this.lineHeight -\n        charHeight * (1 - this._fontSizeFraction);\n\n    return {\n      color:\n        this.cursorColor ||\n        (this.getValueOfPropertyAt(lineIndex, charIndex, 'fill') as string),\n      opacity: this._currentCursorOpacity,\n      left: boundaries.left + boundaries.leftOffset - cursorWidth / 2,\n      top: topOffset + boundaries.top + dy,\n      width: cursorWidth,\n      height: charHeight,\n    };\n  }\n\n  /**\n   * Render the cursor at the given selectionStart.\n   *\n   */\n  _renderCursor(\n    ctx: CanvasRenderingContext2D,\n    boundaries: CursorBoundaries,\n    selectionStart: number,\n  ) {\n    const { color, opacity, left, top, width, height } =\n      this.getCursorRenderingData(selectionStart, boundaries);\n    ctx.fillStyle = color;\n    ctx.globalAlpha = opacity;\n    ctx.fillRect(left, top, width, height);\n  }\n\n  /**\n   * Renders text selection\n   * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n   * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n   */\n  renderSelection(ctx: CanvasRenderingContext2D, boundaries: CursorBoundaries) {\n    const selection = {\n      selectionStart: this.inCompositionMode\n        ? this.hiddenTextarea!.selectionStart\n        : this.selectionStart,\n      selectionEnd: this.inCompositionMode\n        ? this.hiddenTextarea!.selectionEnd\n        : this.selectionEnd,\n    };\n    this._renderSelection(ctx, selection, boundaries);\n  }\n\n  /**\n   * Renders drag start text selection\n   */\n  renderDragSourceEffect() {\n    const dragStartSelection =\n      this.draggableTextDelegate.getDragStartSelection()!;\n    this._renderSelection(\n      this.canvas!.contextTop,\n      dragStartSelection,\n      this._getCursorBoundaries(dragStartSelection.selectionStart, true),\n    );\n  }\n\n  renderDropTargetEffect(e: DragEvent) {\n    const dragSelection = this.getSelectionStartFromPointer(e);\n    this.renderCursorAt(dragSelection);\n  }\n\n  /**\n   * Renders text selection\n   * @private\n   * @param {{ selectionStart: number, selectionEnd: number }} selection\n   * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n   * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n   */\n  _renderSelection(\n    ctx: CanvasRenderingContext2D,\n    selection: { selectionStart: number; selectionEnd: number },\n    boundaries: CursorBoundaries,\n  ) {\n    const selectionStart = selection.selectionStart,\n      selectionEnd = selection.selectionEnd,\n      isJustify = this.textAlign.includes(JUSTIFY),\n      start = this.get2DCursorLocation(selectionStart),\n      end = this.get2DCursorLocation(selectionEnd),\n      startLine = start.lineIndex,\n      endLine = end.lineIndex,\n      startChar = start.charIndex < 0 ? 0 : start.charIndex,\n      endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n    for (let i = startLine; i <= endLine; i++) {\n      const lineOffset = this._getLineLeftOffset(i) || 0;\n      let lineHeight = this.getHeightOfLine(i),\n        realLineHeight = 0,\n        boxStart = 0,\n        boxEnd = 0;\n\n      if (i === startLine) {\n        boxStart = this.__charBounds[startLine][startChar].left;\n      }\n      if (i >= startLine && i < endLine) {\n        boxEnd =\n          isJustify && !this.isEndOfWrapping(i)\n            ? this.width\n            : this.getLineWidth(i) || 5; // WTF is this 5?\n      } else if (i === endLine) {\n        if (endChar === 0) {\n          boxEnd = this.__charBounds[endLine][endChar].left;\n        } else {\n          const charSpacing = this._getWidthOfCharSpacing();\n          boxEnd =\n            this.__charBounds[endLine][endChar - 1].left +\n            this.__charBounds[endLine][endChar - 1].width -\n            charSpacing;\n        }\n      }\n      realLineHeight = lineHeight;\n      if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n        lineHeight /= this.lineHeight;\n      }\n      let drawStart = boundaries.left + lineOffset + boxStart,\n        drawHeight = lineHeight,\n        extraTop = 0;\n      const drawWidth = boxEnd - boxStart;\n      if (this.inCompositionMode) {\n        ctx.fillStyle = this.compositionColor || 'black';\n        drawHeight = 1;\n        extraTop = lineHeight;\n      } else {\n        ctx.fillStyle = this.selectionColor;\n      }\n      if (this.direction === 'rtl') {\n        if (\n          this.textAlign === RIGHT ||\n          this.textAlign === JUSTIFY ||\n          this.textAlign === JUSTIFY_RIGHT\n        ) {\n          drawStart = this.width - drawStart - drawWidth;\n        } else if (this.textAlign === LEFT || this.textAlign === JUSTIFY_LEFT) {\n          drawStart = boundaries.left + lineOffset - boxEnd;\n        } else if (\n          this.textAlign === CENTER ||\n          this.textAlign === JUSTIFY_CENTER\n        ) {\n          drawStart = boundaries.left + lineOffset - boxEnd;\n        }\n      }\n      ctx.fillRect(\n        drawStart,\n        boundaries.top + boundaries.topOffset + extraTop,\n        drawWidth,\n        drawHeight,\n      );\n      boundaries.topOffset += realLineHeight;\n    }\n  }\n\n  /**\n   * High level function to know the height of the cursor.\n   * the currentChar is the one that precedes the cursor\n   * Returns fontSize of char at the current cursor\n   * Unused from the library, is for the end user\n   * @return {Number} Character font size\n   */\n  getCurrentCharFontSize(): number {\n    const cp = this._getCurrentCharIndex();\n    return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n  }\n\n  /**\n   * High level function to know the color of the cursor.\n   * the currentChar is the one that precedes the cursor\n   * Returns color (fill) of char at the current cursor\n   * if the text object has a pattern or gradient for filler, it will return that.\n   * Unused by the library, is for the end user\n   * @return {String | TFiller} Character color (fill)\n   */\n  getCurrentCharColor(): string | TFiller | null {\n    const cp = this._getCurrentCharIndex();\n    return this.getValueOfPropertyAt(cp.l, cp.c, FILL);\n  }\n\n  /**\n   * Returns the cursor position for the getCurrent.. functions\n   * @private\n   */\n  _getCurrentCharIndex() {\n    const cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n      charIndex =\n        cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n    return { l: cursorPosition.lineIndex, c: charIndex };\n  }\n\n  dispose() {\n    this.exitEditingImpl();\n    this.draggableTextDelegate.dispose();\n    super.dispose();\n  }\n}\n\nclassRegistry.setClass(IText);\n// legacy\nclassRegistry.setClass(IText, 'i-text');\n","import type { TClassProperties, TOptions } from '../typedefs';\nimport { IText } from './IText/IText';\nimport { classRegistry } from '../ClassRegistry';\nimport { createTextboxDefaultControls } from '../controls/commonControls';\nimport { JUSTIFY } from './Text/constants';\nimport type { TextStyleDeclaration } from './Text/StyledText';\nimport type { SerializedITextProps, ITextProps } from './IText/IText';\nimport type { ITextEvents } from './IText/ITextBehavior';\nimport type { TextLinesInfo } from './Text/Text';\nimport type { Control } from '../controls/Control';\n\n// @TODO: Many things here are configuration related and shouldn't be on the class nor prototype\n// regexes, list of properties that are not suppose to change by instances, magic consts.\n// this will be a separated effort\nexport const textboxDefaultValues: Partial<TClassProperties<Textbox>> = {\n  minWidth: 20,\n  dynamicMinWidth: 2,\n  lockScalingFlip: true,\n  noScaleCache: false,\n  _wordJoiners: /[ \\t\\r]/,\n  splitByGrapheme: false,\n};\n\nexport type GraphemeData = {\n  wordsData: {\n    word: string[];\n    width: number;\n  }[][];\n  largestWordWidth: number;\n};\n\nexport type StyleMap = Record<string, { line: number; offset: number }>;\n\n// @TODO this is not complete\ninterface UniqueTextboxProps {\n  minWidth: number;\n  splitByGrapheme: boolean;\n  dynamicMinWidth: number;\n  _wordJoiners: RegExp;\n}\n\nexport interface SerializedTextboxProps\n  extends SerializedITextProps,\n    Pick<UniqueTextboxProps, 'minWidth' | 'splitByGrapheme'> {}\n\nexport interface TextboxProps extends ITextProps, UniqueTextboxProps {}\n\n/**\n * Textbox class, based on IText, allows the user to resize the text rectangle\n * and wraps lines automatically. Textboxes have their Y scaling locked, the\n * user can only change width. Height is adjusted automatically based on the\n * wrapping of lines.\n */\nexport class Textbox<\n    Props extends TOptions<TextboxProps> = Partial<TextboxProps>,\n    SProps extends SerializedTextboxProps = SerializedTextboxProps,\n    EventSpec extends ITextEvents = ITextEvents,\n  >\n  extends IText<Props, SProps, EventSpec>\n  implements UniqueTextboxProps\n{\n  /**\n   * Minimum width of textbox, in pixels.\n   * @type Number\n   * @default\n   */\n  declare minWidth: number;\n\n  /**\n   * Minimum calculated width of a textbox, in pixels.\n   * fixed to 2 so that an empty textbox cannot go to 0\n   * and is still selectable without text.\n   * @type Number\n   * @default\n   */\n  declare dynamicMinWidth: number;\n\n  /**\n   * Use this boolean property in order to split strings that have no white space concept.\n   * this is a cheap way to help with chinese/japanese\n   * @type Boolean\n   * @since 2.6.0\n   */\n  declare splitByGrapheme: boolean;\n\n  declare _wordJoiners: RegExp;\n\n  declare _styleMap: StyleMap;\n\n  declare isWrapping: boolean;\n\n  static type = 'Textbox';\n\n  static textLayoutProperties = [...IText.textLayoutProperties, 'width'];\n\n  static ownDefaults = textboxDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Textbox.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {String} text Text string\n   * @param {Object} [options] Options object\n   */\n  constructor(text: string, options?: Props) {\n    super(text, { ...Textbox.ownDefaults, ...options } as Props);\n  }\n\n  /**\n   * Creates the default control object.\n   * If you prefer to have on instance of controls shared among all objects\n   * make this function return an empty object and add controls to the ownDefaults object\n   */\n  static createControls(): { controls: Record<string, Control> } {\n    return { controls: createTextboxDefaultControls() };\n  }\n\n  /**\n   * Unlike superclass's version of this function, Textbox does not update\n   * its width.\n   * @private\n   * @override\n   */\n  initDimensions() {\n    if (!this.initialized) {\n      return;\n    }\n    this.isEditing && this.initDelayedCursor();\n    this._clearCache();\n    // clear dynamicMinWidth as it will be different after we re-wrap line\n    this.dynamicMinWidth = 0;\n    // wrap lines\n    this._styleMap = this._generateStyleMap(this._splitText());\n    // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n    if (this.dynamicMinWidth > this.width) {\n      this._set('width', this.dynamicMinWidth);\n    }\n    if (this.textAlign.includes(JUSTIFY)) {\n      // once text is measured we need to make space fatter to make justified text.\n      this.enlargeSpaces();\n    }\n    // clear cache and re-calculate height\n    this.height = this.calcTextHeight();\n  }\n\n  /**\n   * Generate an object that translates the style object so that it is\n   * broken up by visual lines (new lines and automatic wrapping).\n   * The original text styles object is broken up by actual lines (new lines only),\n   * which is only sufficient for Text / IText\n   * @private\n   */\n  _generateStyleMap(textInfo: TextLinesInfo): StyleMap {\n    let realLineCount = 0,\n      realLineCharCount = 0,\n      charCount = 0;\n    const map: StyleMap = {};\n\n    for (let i = 0; i < textInfo.graphemeLines.length; i++) {\n      if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n        realLineCharCount = 0;\n        charCount++;\n        realLineCount++;\n      } else if (\n        !this.splitByGrapheme &&\n        this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) &&\n        i > 0\n      ) {\n        // this case deals with space's that are removed from end of lines when wrapping\n        realLineCharCount++;\n        charCount++;\n      }\n\n      map[i] = { line: realLineCount, offset: realLineCharCount };\n\n      charCount += textInfo.graphemeLines[i].length;\n      realLineCharCount += textInfo.graphemeLines[i].length;\n    }\n\n    return map;\n  }\n\n  /**\n   * Returns true if object has a style property or has it on a specified line\n   * @param {Number} lineIndex\n   * @return {Boolean}\n   */\n  styleHas(property: keyof TextStyleDeclaration, lineIndex: number): boolean {\n    if (this._styleMap && !this.isWrapping) {\n      const map = this._styleMap[lineIndex];\n      if (map) {\n        lineIndex = map.line;\n      }\n    }\n    return super.styleHas(property, lineIndex);\n  }\n\n  /**\n   * Returns true if object has no styling or no styling in a line\n   * @param {Number} lineIndex , lineIndex is on wrapped lines.\n   * @return {Boolean}\n   */\n  isEmptyStyles(lineIndex: number): boolean {\n    if (!this.styles) {\n      return true;\n    }\n    let offset = 0,\n      nextLineIndex = lineIndex + 1,\n      nextOffset: number,\n      shouldLimit = false;\n    const map = this._styleMap[lineIndex],\n      mapNextLine = this._styleMap[lineIndex + 1];\n    if (map) {\n      lineIndex = map.line;\n      offset = map.offset;\n    }\n    if (mapNextLine) {\n      nextLineIndex = mapNextLine.line;\n      shouldLimit = nextLineIndex === lineIndex;\n      nextOffset = mapNextLine.offset;\n    }\n    const obj =\n      typeof lineIndex === 'undefined'\n        ? this.styles\n        : { line: this.styles[lineIndex] };\n    for (const p1 in obj) {\n      for (const p2 in obj[p1]) {\n        const p2Number = parseInt(p2, 10);\n        if (p2Number >= offset && (!shouldLimit || p2Number < nextOffset!)) {\n          // eslint-disable-next-line no-unused-vars\n          for (const p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @protected\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {TextStyleDeclaration} a style object reference to the existing one or a new empty object when undefined\n   */\n  _getStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n  ): TextStyleDeclaration {\n    if (this._styleMap && !this.isWrapping) {\n      const map = this._styleMap[lineIndex];\n      if (!map) {\n        return {};\n      }\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n    }\n    return super._getStyleDeclaration(lineIndex, charIndex);\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @param {Object} style\n   * @private\n   */\n  protected _setStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n    style: object,\n  ) {\n    const map = this._styleMap[lineIndex];\n    super._setStyleDeclaration(map.line, map.offset + charIndex, style);\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @private\n   */\n  protected _deleteStyleDeclaration(lineIndex: number, charIndex: number) {\n    const map = this._styleMap[lineIndex];\n    super._deleteStyleDeclaration(map.line, map.offset + charIndex);\n  }\n\n  /**\n   * probably broken need a fix\n   * Returns the real style line that correspond to the wrapped lineIndex line\n   * Used just to verify if the line does exist or not.\n   * @param {Number} lineIndex\n   * @returns {Boolean} if the line exists or not\n   * @private\n   */\n  protected _getLineStyle(lineIndex: number): boolean {\n    const map = this._styleMap[lineIndex];\n    return !!this.styles[map.line];\n  }\n\n  /**\n   * Set the line style to an empty object so that is initialized\n   * @param {Number} lineIndex\n   * @param {Object} style\n   * @private\n   */\n  protected _setLineStyle(lineIndex: number) {\n    const map = this._styleMap[lineIndex];\n    super._setLineStyle(map.line);\n  }\n\n  /**\n   * Wraps text using the 'width' property of Textbox. First this function\n   * splits text on newlines, so we preserve newlines entered by the user.\n   * Then it wraps each line using the width of the Textbox by calling\n   * _wrapLine().\n   * @param {Array} lines The string array of text that is split into lines\n   * @param {Number} desiredWidth width you want to wrap to\n   * @returns {Array} Array of lines\n   */\n  _wrapText(lines: string[], desiredWidth: number): string[][] {\n    this.isWrapping = true;\n    // extract all thewords and the widths to optimally wrap lines.\n    const data = this.getGraphemeDataForRender(lines);\n    const wrapped: string[][] = [];\n    for (let i = 0; i < data.wordsData.length; i++) {\n      wrapped.push(...this._wrapLine(i, desiredWidth, data));\n    }\n    this.isWrapping = false;\n    return wrapped;\n  }\n\n  /**\n   * For each line of text terminated by an hard line stop,\n   * measure each word width and extract the largest word from all.\n   * The returned words here are the one that at the end will be rendered.\n   * @param {string[]} lines the lines we need to measure\n   *\n   */\n  getGraphemeDataForRender(lines: string[]): GraphemeData {\n    const splitByGrapheme = this.splitByGrapheme,\n      infix = splitByGrapheme ? '' : ' ';\n\n    let largestWordWidth = 0;\n\n    const data = lines.map((line, lineIndex) => {\n      let offset = 0;\n      const wordsOrGraphemes = splitByGrapheme\n        ? this.graphemeSplit(line)\n        : this.wordSplit(line);\n\n      if (wordsOrGraphemes.length === 0) {\n        return [{ word: [], width: 0 }];\n      }\n\n      return wordsOrGraphemes.map((word: string) => {\n        // if using splitByGrapheme words are already in graphemes.\n        const graphemeArray = splitByGrapheme\n          ? [word]\n          : this.graphemeSplit(word);\n        const width = this._measureWord(graphemeArray, lineIndex, offset);\n        largestWordWidth = Math.max(width, largestWordWidth);\n        offset += graphemeArray.length + infix.length;\n        return { word: graphemeArray, width };\n      });\n    });\n\n    return {\n      wordsData: data,\n      largestWordWidth,\n    };\n  }\n\n  /**\n   * Helper function to measure a string of text, given its lineIndex and charIndex offset\n   * It gets called when charBounds are not available yet.\n   * Override if necessary\n   * Use with {@link Textbox#wordSplit}\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {String} text\n   * @param {number} lineIndex\n   * @param {number} charOffset\n   * @returns {number}\n   */\n  _measureWord(word: string[], lineIndex: number, charOffset = 0): number {\n    let width = 0,\n      prevGrapheme;\n    const skipLeft = true;\n    for (let i = 0, len = word.length; i < len; i++) {\n      const box = this._getGraphemeBox(\n        word[i],\n        lineIndex,\n        i + charOffset,\n        prevGrapheme,\n        skipLeft,\n      );\n      width += box.kernedWidth;\n      prevGrapheme = word[i];\n    }\n    return width;\n  }\n\n  /**\n   * Override this method to customize word splitting\n   * Use with {@link Textbox#_measureWord}\n   * @param {string} value\n   * @returns {string[]} array of words\n   */\n  wordSplit(value: string): string[] {\n    return value.split(this._wordJoiners);\n  }\n\n  /**\n   * Wraps a line of text using the width of the Textbox as desiredWidth\n   * and leveraging the known width o words from GraphemeData\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} desiredWidth width you want to wrap the line to\n   * @param {GraphemeData} graphemeData an object containing all the lines' words width.\n   * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\n   * @returns {Array} Array of line(s) into which the given text is wrapped\n   * to.\n   */\n  _wrapLine(\n    lineIndex: number,\n    desiredWidth: number,\n    { largestWordWidth, wordsData }: GraphemeData,\n    reservedSpace = 0,\n  ): string[][] {\n    const additionalSpace = this._getWidthOfCharSpacing(),\n      splitByGrapheme = this.splitByGrapheme,\n      graphemeLines = [],\n      infix = splitByGrapheme ? '' : ' ';\n\n    let lineWidth = 0,\n      line: string[] = [],\n      // spaces in different languages?\n      offset = 0,\n      infixWidth = 0,\n      lineJustStarted = true;\n\n    desiredWidth -= reservedSpace;\n\n    const maxWidth = Math.max(\n      desiredWidth,\n      largestWordWidth,\n      this.dynamicMinWidth,\n    );\n    // layout words\n    const data = wordsData[lineIndex];\n    offset = 0;\n    let i;\n    for (i = 0; i < data.length; i++) {\n      const { word, width: wordWidth } = data[i];\n      offset += word.length;\n\n      lineWidth += infixWidth + wordWidth - additionalSpace;\n      if (lineWidth > maxWidth && !lineJustStarted) {\n        graphemeLines.push(line);\n        line = [];\n        lineWidth = wordWidth;\n        lineJustStarted = true;\n      } else {\n        lineWidth += additionalSpace;\n      }\n\n      if (!lineJustStarted && !splitByGrapheme) {\n        line.push(infix);\n      }\n      line = line.concat(word);\n\n      infixWidth = splitByGrapheme\n        ? 0\n        : this._measureWord([infix], lineIndex, offset);\n      offset++;\n      lineJustStarted = false;\n    }\n\n    i && graphemeLines.push(line);\n\n    // TODO: this code is probably not necessary anymore.\n    // it can be moved out of this function since largestWordWidth is now\n    // known in advance\n    if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n      this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n    }\n    return graphemeLines;\n  }\n\n  /**\n   * Detect if the text line is ended with an hard break\n   * text and itext do not have wrapping, return false\n   * @param {Number} lineIndex text to split\n   * @return {Boolean}\n   */\n  isEndOfWrapping(lineIndex: number): boolean {\n    if (!this._styleMap[lineIndex + 1]) {\n      // is last line, return true;\n      return true;\n    }\n    if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n      // this is last line before a line break, return true;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Detect if a line has a linebreak and so we need to account for it when moving\n   * and counting style.\n   * This is important only for splitByGrapheme at the end of wrapping.\n   * If we are not wrapping the offset is always 1\n   * @return Number\n   */\n  missingNewlineOffset(lineIndex: number, skipWrapping?: boolean): 0 | 1 {\n    if (this.splitByGrapheme && !skipWrapping) {\n      return this.isEndOfWrapping(lineIndex) ? 1 : 0;\n    }\n    return 1;\n  }\n\n  /**\n   * Gets lines of text to render in the Textbox. This function calculates\n   * text wrapping on the fly every time it is called.\n   * @param {String} text text to split\n   * @returns {Array} Array of lines in the Textbox.\n   * @override\n   */\n  _splitTextIntoLines(text: string) {\n    const newText = super._splitTextIntoLines(text),\n      graphemeLines = this._wrapText(newText.lines, this.width),\n      lines = new Array(graphemeLines.length);\n    for (let i = 0; i < graphemeLines.length; i++) {\n      lines[i] = graphemeLines[i].join('');\n    }\n    newText.lines = lines;\n    newText.graphemeLines = graphemeLines;\n    return newText;\n  }\n\n  getMinWidth() {\n    return Math.max(this.minWidth, this.dynamicMinWidth);\n  }\n\n  _removeExtraneousStyles() {\n    const linesToKeep = new Map();\n    for (const prop in this._styleMap) {\n      const propNumber = parseInt(prop, 10);\n      if (this._textLines[propNumber]) {\n        const lineIndex = this._styleMap[prop].line;\n        linesToKeep.set(`${lineIndex}`, true);\n      }\n    }\n    for (const prop in this.styles) {\n      if (!linesToKeep.has(prop)) {\n        delete this.styles[prop];\n      }\n    }\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @method toObject\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject<T, K>([\n      'minWidth',\n      'splitByGrapheme',\n      ...propertiesToInclude,\n    ] as K[]) as Pick<T, K> & SProps;\n  }\n}\n\nclassRegistry.setClass(Textbox);\n","import { Point } from '../../Point';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { makeBoundingBoxFromPoints } from '../../util/misc/boundingBoxFromPoints';\nimport { sendPointToPlane } from '../../util/misc/planeChange';\nimport type { LayoutStrategyResult, StrictLayoutContext } from '../types';\nimport { LayoutStrategy } from './LayoutStrategy';\nimport { getObjectBounds } from './utils';\nimport { classRegistry } from '../../ClassRegistry';\n\n/**\n * Layout will adjust the bounding box to match the clip path bounding box.\n */\nexport class ClipPathLayout extends LayoutStrategy {\n  static readonly type = 'clip-path';\n\n  shouldPerformLayout(context: StrictLayoutContext): boolean {\n    return !!context.target.clipPath && super.shouldPerformLayout(context);\n  }\n\n  shouldLayoutClipPath() {\n    return false;\n  }\n\n  calcLayoutResult(\n    context: StrictLayoutContext,\n    objects: FabricObject[],\n  ): LayoutStrategyResult | undefined {\n    const { target } = context;\n    const { clipPath, group } = target;\n    if (!clipPath || !this.shouldPerformLayout(context)) {\n      return;\n    }\n    // TODO: remove stroke calculation from this case\n    const { width, height } = makeBoundingBoxFromPoints(\n      getObjectBounds(target, clipPath as FabricObject),\n    );\n    const size = new Point(width, height);\n    if (clipPath.absolutePositioned) {\n      //  we want the center point to exist in group's containing plane\n      const clipPathCenter = sendPointToPlane(\n        clipPath.getRelativeCenterPoint(),\n        undefined,\n        group ? group.calcTransformMatrix() : undefined,\n      );\n      return {\n        center: clipPathCenter,\n        size,\n      };\n    } else {\n      //  we want the center point to exist in group's containing plane, so we send it upwards\n      const clipPathCenter = clipPath\n        .getRelativeCenterPoint()\n        .transform(target.calcOwnMatrix(), true);\n      if (this.shouldPerformLayout(context)) {\n        // the clip path is positioned relative to the group's center which is affected by the bbox\n        // so we first calculate the bbox\n        const { center = new Point(), correction = new Point() } =\n          this.calcBoundingBox(objects, context) || {};\n        return {\n          center: center.add(clipPathCenter),\n          correction: correction.subtract(clipPathCenter),\n          size,\n        };\n      } else {\n        return {\n          center: target.getRelativeCenterPoint().add(clipPathCenter),\n          size,\n        };\n      }\n    }\n  }\n}\n\nclassRegistry.setClass(ClipPathLayout);\n","import { Point } from '../../Point';\nimport type {\n  InitializationLayoutContext,\n  LayoutStrategyResult,\n  StrictLayoutContext,\n} from '../types';\nimport { LayoutStrategy } from './LayoutStrategy';\nimport { classRegistry } from '../../ClassRegistry';\n\n/**\n * Layout will keep target's initial size.\n */\nexport class FixedLayout extends LayoutStrategy {\n  static readonly type = 'fixed';\n\n  /**\n   * @override respect target's initial size\n   */\n  getInitialSize(\n    { target }: StrictLayoutContext & InitializationLayoutContext,\n    { size }: Pick<LayoutStrategyResult, 'center' | 'size'>,\n  ): Point {\n    return new Point(target.width || size.x, target.height || size.y);\n  }\n}\n\nclassRegistry.setClass(FixedLayout);\n","import { LayoutManager } from './LayoutManager';\nimport type { RegistrationContext, StrictLayoutContext } from './types';\nimport type { Group } from '../shapes/Group';\n\n/**\n * Today the LayoutManager class also takes care of subscribing event handlers\n * to update the group layout when the group is interactive and a transform is applied\n * to a child object.\n * The ActiveSelection is never interactive, but it could contain objects from\n * groups that are.\n * The standard LayoutManager would subscribe the children of the activeSelection to\n * perform layout changes to the active selection itself, what we need instead is that\n * the transformation applied to the active selection will trigger changes to the\n * original group of the children ( the one referenced under the parent property )\n * This subclass of the LayoutManager has a single duty to fill the gap of this difference.`\n */\nexport class ActiveSelectionLayoutManager extends LayoutManager {\n  subscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ): void {\n    const activeSelection = context.target;\n    const parents = context.targets.reduce((parents, target) => {\n      target.parent && parents.add(target.parent);\n      return parents;\n    }, new Set<Group>());\n    parents.forEach((parent) => {\n      parent.layoutManager.subscribeTargets({\n        target: parent,\n        targets: [activeSelection],\n      });\n    });\n  }\n\n  /**\n   * unsubscribe from parent only if all its children were deselected\n   */\n  unsubscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ): void {\n    const activeSelection = context.target;\n    const selectedObjects = activeSelection.getObjects();\n    const parents = context.targets.reduce((parents, target) => {\n      target.parent && parents.add(target.parent);\n      return parents;\n    }, new Set<Group>());\n    parents.forEach((parent) => {\n      !selectedObjects.some((object) => object.parent === parent) &&\n        parent.layoutManager.unsubscribeTargets({\n          target: parent,\n          targets: [activeSelection],\n        });\n    });\n  }\n}\n","import type { ControlRenderingStyleOverride } from '../controls/controlRendering';\nimport { classRegistry } from '../ClassRegistry';\nimport type { GroupProps } from './Group';\nimport { Group } from './Group';\nimport type { FabricObject } from './Object/FabricObject';\nimport {\n  LAYOUT_TYPE_ADDED,\n  LAYOUT_TYPE_REMOVED,\n} from '../LayoutManager/constants';\nimport type { TClassProperties } from '../typedefs';\nimport { log } from '../util/internals/console';\nimport { ActiveSelectionLayoutManager } from '../LayoutManager/ActiveSelectionLayoutManager';\n\nexport type MultiSelectionStacking = 'canvas-stacking' | 'selection-order';\n\nexport interface ActiveSelectionOptions extends GroupProps {\n  multiSelectionStacking: MultiSelectionStacking;\n}\n\nconst activeSelectionDefaultValues: Partial<TClassProperties<ActiveSelection>> =\n  {\n    multiSelectionStacking: 'canvas-stacking',\n  };\n\n/**\n * Used by Canvas to manage selection.\n *\n * @example\n * class MyActiveSelection extends ActiveSelection {\n *   ...\n * }\n *\n * // override the default `ActiveSelection` class\n * classRegistry.setClass(MyActiveSelection)\n */\nexport class ActiveSelection extends Group {\n  static type = 'ActiveSelection';\n\n  static ownDefaults: Record<string, any> = activeSelectionDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...ActiveSelection.ownDefaults };\n  }\n\n  /**\n   * The ActiveSelection needs to use the ActiveSelectionLayoutManager\n   * or selections on interactive groups may be broken\n   */\n  declare layoutManager: ActiveSelectionLayoutManager;\n\n  /**\n   * controls how selected objects are added during a multiselection event\n   * - `canvas-stacking` adds the selected object to the active selection while respecting canvas object stacking order\n   * - `selection-order` adds the selected object to the top of the stack,\n   * meaning that the stack is ordered by the order in which objects were selected\n   * @default `canvas-stacking`\n   */\n  declare multiSelectionStacking: MultiSelectionStacking;\n\n  constructor(\n    objects: FabricObject[] = [],\n    options: Partial<ActiveSelectionOptions> = {},\n  ) {\n    super();\n    Object.assign(this, ActiveSelection.ownDefaults);\n    this.setOptions(options);\n    const { left, top, layoutManager } = options;\n    this.groupInit(objects, {\n      left,\n      top,\n      layoutManager: layoutManager ?? new ActiveSelectionLayoutManager(),\n    });\n  }\n\n  /**\n   * @private\n   */\n  _shouldSetNestedCoords() {\n    return true;\n  }\n\n  /**\n   * @private\n   * @override we don't want the selection monitor to be active\n   */\n  __objectSelectionMonitor() {\n    //  noop\n  }\n\n  /**\n   * Adds objects with respect to {@link multiSelectionStacking}\n   * @param targets object to add to selection\n   */\n  multiSelectAdd(...targets: FabricObject[]) {\n    if (this.multiSelectionStacking === 'selection-order') {\n      this.add(...targets);\n    } else {\n      //  respect object stacking as it is on canvas\n      //  perf enhancement for large ActiveSelection: consider a binary search of `isInFrontOf`\n      targets.forEach((target) => {\n        const index = this._objects.findIndex((obj) => obj.isInFrontOf(target));\n        const insertAt =\n          index === -1\n            ? //  `target` is in front of all other objects\n              this.size()\n            : index;\n        this.insertAt(insertAt, target);\n      });\n    }\n  }\n\n  /**\n   * @override block ancestors/descendants of selected objects from being selected to prevent a circular object tree\n   */\n  canEnterGroup(object: FabricObject) {\n    if (\n      this.getObjects().some(\n        (o) => o.isDescendantOf(object) || object.isDescendantOf(o),\n      )\n    ) {\n      //  prevent circular object tree\n      log(\n        'error',\n        'ActiveSelection: circular object trees are not supported, this call has no effect',\n      );\n      return false;\n    }\n\n    return super.canEnterGroup(object);\n  }\n\n  /**\n   * Change an object so that it can be part of an active selection.\n   * this method is called by multiselectAdd from canvas code.\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object is in canvas coordinate plane\n   */\n  enterGroup(object: FabricObject, removeParentTransform?: boolean) {\n    // This condition check that the object has currently a group, and the group\n    // is also its parent, meaning that is not in an active selection, but is\n    // in a normal group.\n    if (object.parent && object.parent === object.group) {\n      // Disconnect the object from the group functionalities, but keep the ref parent intact\n      // for later re-enter\n      object.parent._exitGroup(object);\n      // in this case the object is probably inside an active selection.\n    } else if (object.group && object.parent !== object.group) {\n      // in this case group.remove will also clear the old parent reference.\n      object.group.remove(object);\n    }\n    // enter the active selection from a render perspective\n    // the object will be in the objects array of both the ActiveSelection and the Group\n    // but referenced in the group's _activeObjects so that it won't be rendered twice.\n    this._enterGroup(object, removeParentTransform);\n  }\n\n  /**\n   * we want objects to retain their canvas ref when exiting instance\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  exitGroup(object: FabricObject, removeParentTransform?: boolean) {\n    this._exitGroup(object, removeParentTransform);\n    // return to parent\n    object.parent && object.parent._enterGroup(object, true);\n  }\n\n  /**\n   * @private\n   * @param {'added'|'removed'} type\n   * @param {FabricObject[]} targets\n   */\n  _onAfterObjectsChange(type: 'added' | 'removed', targets: FabricObject[]) {\n    super._onAfterObjectsChange(type, targets);\n    const groups = new Set<Group>();\n    targets.forEach((object) => {\n      const { parent } = object;\n      parent && groups.add(parent);\n    });\n    if (type === LAYOUT_TYPE_REMOVED) {\n      //  invalidate groups' layout and mark as dirty\n      groups.forEach((group) => {\n        group._onAfterObjectsChange(LAYOUT_TYPE_ADDED, targets);\n      });\n    } else {\n      //  mark groups as dirty\n      groups.forEach((group) => {\n        group._set('dirty', true);\n      });\n    }\n  }\n\n  /**\n   * @override remove all objects\n   */\n  onDeselect() {\n    this.removeAll();\n    return false;\n  }\n\n  /**\n   * Returns string representation of a group\n   * @return {String}\n   */\n  toString() {\n    return `#<ActiveSelection: (${this.complexity()})>`;\n  }\n\n  /**\n   * Decide if the object should cache or not. Create its own cache level\n   * objectCaching is a global flag, wins over everything\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step. None of the fabric classes requires it.\n   * Generally you do not cache objects in groups because the group outside is cached.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    return false;\n  }\n\n  /**\n   * Check if this group or its parent group are caching, recursively up\n   * @return {Boolean}\n   */\n  isOnACache() {\n    return false;\n  }\n\n  /**\n   * Renders controls and borders for the object\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Object} [styleOverride] properties to override the object style\n   * @param {Object} [childrenOverride] properties to override the children overrides\n   */\n  _renderControls(\n    ctx: CanvasRenderingContext2D,\n    styleOverride?: ControlRenderingStyleOverride,\n    childrenOverride?: ControlRenderingStyleOverride,\n  ) {\n    ctx.save();\n    ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n    const options = {\n      hasControls: false,\n      ...childrenOverride,\n      forActiveSelection: true,\n    };\n    for (let i = 0; i < this._objects.length; i++) {\n      this._objects[i]._renderControls(ctx, options);\n    }\n    super._renderControls(ctx, styleOverride);\n    ctx.restore();\n  }\n}\n\nclassRegistry.setClass(ActiveSelection);\nclassRegistry.setClass(ActiveSelection, 'activeSelection');\n","/**\n * Canvas 2D filter backend.\n */\nimport type { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TPipelineResources } from './typedefs';\n\nexport class Canvas2dFilterBackend {\n  /**\n   * Experimental. This object is a sort of repository of help layers used to avoid\n   * of recreating them during frequent filtering. If you are previewing a filter with\n   * a slider you probably do not want to create help layers every filter step.\n   * in this object there will be appended some canvases, created once, resized sometimes\n   * cleared never. Clearing is left to the developer.\n   **/\n  resources: TPipelineResources = {};\n\n  /**\n   * Apply a set of filters against a source image and draw the filtered output\n   * to the provided destination canvas.\n   *\n   * @param {EnhancedFilter} filters The filter to apply.\n   * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n   * @param {Number} sourceWidth The width of the source input.\n   * @param {Number} sourceHeight The height of the source input.\n   * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n   */\n  applyFilters(\n    filters: BaseFilter<string, Record<string, any>>[],\n    sourceElement: CanvasImageSource,\n    sourceWidth: number,\n    sourceHeight: number,\n    targetCanvas: HTMLCanvasElement,\n  ): T2DPipelineState | void {\n    const ctx = targetCanvas.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n    ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n    const imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n    const originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n    const pipelineState: T2DPipelineState = {\n      sourceWidth,\n      sourceHeight,\n      imageData,\n      originalEl: sourceElement,\n      originalImageData,\n      canvasEl: targetCanvas,\n      ctx,\n      filterBackend: this,\n    };\n    filters.forEach((filter) => {\n      filter.applyTo(pipelineState);\n    });\n    const { imageData: imageDataPostFilter } = pipelineState;\n    if (\n      imageDataPostFilter.width !== sourceWidth ||\n      imageDataPostFilter.height !== sourceHeight\n    ) {\n      targetCanvas.width = imageDataPostFilter.width;\n      targetCanvas.height = imageDataPostFilter.height;\n    }\n    ctx.putImageData(imageDataPostFilter, 0, 0);\n    return pipelineState;\n  }\n}\n","import { config } from '../config';\nimport { createCanvasElementFor } from '../util/misc/dom';\nimport type {\n  TWebGLPipelineState,\n  TProgramCache,\n  TTextureCache,\n  TPipelineResources,\n} from './typedefs';\nimport type { BaseFilter } from './BaseFilter';\n\nexport class WebGLFilterBackend {\n  declare tileSize: number;\n\n  /**\n   * Define ...\n   **/\n  aPosition: Float32Array = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n\n  /**\n   * If GLPut data is the fastest operation, or if forced, this buffer will be used\n   * to transfer the data back in the 2d logic\n   **/\n  declare imageBuffer?: ArrayBuffer;\n\n  declare canvas: HTMLCanvasElement;\n\n  /**\n   * The Webgl context that will execute the operations for filtering\n   **/\n  declare gl: WebGLRenderingContext;\n\n  /**\n   * Keyed map for shader cache\n   **/\n  declare programCache: TProgramCache;\n\n  /**\n   * Keyed map for texture cache\n   **/\n  declare textureCache: TTextureCache;\n\n  /**\n   * Contains GPU info for debug\n   **/\n  declare gpuInfo: any;\n\n  /**\n   * Experimental. This object is a sort of repository of help layers used to avoid\n   * of recreating them during frequent filtering. If you are previewing a filter with\n   * a slider you probably do not want to create help layers every filter step.\n   * in this object there will be appended some canvases, created once, resized sometimes\n   * cleared never. Clearing is left to the developer.\n   **/\n  resources: TPipelineResources = {};\n\n  constructor({ tileSize = config.textureSize } = {}) {\n    this.tileSize = tileSize;\n    this.setupGLContext(tileSize, tileSize);\n    this.captureGPUInfo();\n  }\n\n  /**\n   * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n   */\n  setupGLContext(width: number, height: number): void {\n    this.dispose();\n    this.createWebGLCanvas(width, height);\n  }\n\n  /**\n   * Create a canvas element and associated WebGL context and attaches them as\n   * class properties to the GLFilterBackend class.\n   */\n  createWebGLCanvas(width: number, height: number): void {\n    const canvas = createCanvasElementFor({ width, height });\n    const glOptions = {\n        alpha: true,\n        premultipliedAlpha: false,\n        depth: false,\n        stencil: false,\n        antialias: false,\n      },\n      gl = canvas.getContext('webgl', glOptions) as WebGLRenderingContext;\n\n    if (!gl) {\n      return;\n    }\n    gl.clearColor(0, 0, 0, 0);\n    // this canvas can fire webglcontextlost and webglcontextrestored\n    this.canvas = canvas;\n    this.gl = gl;\n  }\n\n  /**\n   * Attempts to apply the requested filters to the source provided, drawing the filtered output\n   * to the provided target canvas.\n   *\n   * @param {Array} filters The filters to apply.\n   * @param {TexImageSource} source The source to be filtered.\n   * @param {Number} width The width of the source input.\n   * @param {Number} height The height of the source input.\n   * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n   * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n   * omitted, caching will be skipped.\n   */\n  applyFilters(\n    filters: BaseFilter<string, Record<string, any>>[],\n    source: TexImageSource,\n    width: number,\n    height: number,\n    targetCanvas: HTMLCanvasElement,\n    cacheKey?: string,\n  ): TWebGLPipelineState | undefined {\n    const gl = this.gl;\n    const ctx = targetCanvas.getContext('2d');\n    if (!gl || !ctx) {\n      return;\n    }\n    let cachedTexture;\n    if (cacheKey) {\n      cachedTexture = this.getCachedTexture(cacheKey, source);\n    }\n    const pipelineState: TWebGLPipelineState = {\n      originalWidth:\n        (source as HTMLImageElement).width ||\n        (source as HTMLImageElement).naturalWidth ||\n        0,\n      originalHeight:\n        (source as HTMLImageElement).height ||\n        (source as HTMLImageElement).naturalHeight ||\n        0,\n      sourceWidth: width,\n      sourceHeight: height,\n      destinationWidth: width,\n      destinationHeight: height,\n      context: gl,\n      sourceTexture: this.createTexture(\n        gl,\n        width,\n        height,\n        !cachedTexture ? source : undefined,\n      ),\n      targetTexture: this.createTexture(gl, width, height),\n      originalTexture:\n        cachedTexture ||\n        this.createTexture(\n          gl,\n          width,\n          height,\n          !cachedTexture ? source : undefined,\n        )!,\n      passes: filters.length,\n      webgl: true,\n      aPosition: this.aPosition,\n      programCache: this.programCache,\n      pass: 0,\n      filterBackend: this,\n      targetCanvas: targetCanvas,\n    };\n    const tempFbo = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n    filters.forEach((filter: any) => {\n      filter && filter.applyTo(pipelineState);\n    });\n    resizeCanvasIfNeeded(pipelineState);\n    this.copyGLTo2D(gl, pipelineState);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.deleteTexture(pipelineState.sourceTexture);\n    gl.deleteTexture(pipelineState.targetTexture);\n    gl.deleteFramebuffer(tempFbo);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    return pipelineState;\n  }\n\n  /**\n   * Detach event listeners, remove references, and clean up caches.\n   */\n  dispose() {\n    if (this.canvas) {\n      // we are disposing, we don't care about the fact\n      // that the canvas shouldn't be null.\n      // @ts-expect-error disposing\n      this.canvas = null;\n      // @ts-expect-error disposing\n      this.gl = null;\n    }\n    this.clearWebGLCaches();\n  }\n\n  /**\n   * Wipe out WebGL-related caches.\n   */\n  clearWebGLCaches() {\n    this.programCache = {};\n    this.textureCache = {};\n  }\n\n  /**\n   * Create a WebGL texture object.\n   *\n   * Accepts specific dimensions to initialize the texture to or a source image.\n   *\n   * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n   * @param {number} width The width to initialize the texture at.\n   * @param {number} height The height to initialize the texture.\n   * @param {TexImageSource} textureImageSource A source for the texture data.\n   * @param {number} filter gl.NEAREST default or gl.LINEAR filters for the texture.\n   * This filter is very useful for LUTs filters. If you need interpolation use gl.LINEAR\n   * @returns {WebGLTexture}\n   */\n  createTexture(\n    gl: WebGLRenderingContext,\n    width: number,\n    height: number,\n    textureImageSource?: TexImageSource,\n    filter?:\n      | WebGLRenderingContextBase['NEAREST']\n      | WebGLRenderingContextBase['LINEAR'],\n  ) {\n    const {\n      NEAREST,\n      TEXTURE_2D,\n      RGBA,\n      UNSIGNED_BYTE,\n      CLAMP_TO_EDGE,\n      TEXTURE_MAG_FILTER,\n      TEXTURE_MIN_FILTER,\n      TEXTURE_WRAP_S,\n      TEXTURE_WRAP_T,\n    } = gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(TEXTURE_2D, texture);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_MAG_FILTER, filter || NEAREST);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_MIN_FILTER, filter || NEAREST);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S, CLAMP_TO_EDGE);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T, CLAMP_TO_EDGE);\n    if (textureImageSource) {\n      gl.texImage2D(\n        TEXTURE_2D,\n        0,\n        RGBA,\n        RGBA,\n        UNSIGNED_BYTE,\n        textureImageSource,\n      );\n    } else {\n      gl.texImage2D(\n        TEXTURE_2D,\n        0,\n        RGBA,\n        width,\n        height,\n        0,\n        RGBA,\n        UNSIGNED_BYTE,\n        null,\n      );\n    }\n    return texture;\n  }\n\n  /**\n   * Can be optionally used to get a texture from the cache array\n   *\n   * If an existing texture is not found, a new texture is created and cached.\n   *\n   * @param {String} uniqueId A cache key to use to find an existing texture.\n   * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n   * texture cache entry if one does not already exist.\n   */\n  getCachedTexture(\n    uniqueId: string,\n    textureImageSource: TexImageSource,\n    filter?:\n      | WebGLRenderingContextBase['NEAREST']\n      | WebGLRenderingContextBase['LINEAR'],\n  ): WebGLTexture | null {\n    const { textureCache } = this;\n    if (textureCache[uniqueId]) {\n      return textureCache[uniqueId];\n    } else {\n      const texture = this.createTexture(\n        this.gl,\n        (textureImageSource as HTMLImageElement).width,\n        (textureImageSource as HTMLImageElement).height,\n        textureImageSource,\n        filter,\n      );\n      if (texture) {\n        textureCache[uniqueId] = texture;\n      }\n      return texture;\n    }\n  }\n\n  /**\n   * Clear out cached resources related to a source image that has been\n   * filtered previously.\n   *\n   * @param {String} cacheKey The cache key provided when the source image was filtered.\n   */\n  evictCachesForKey(cacheKey: string) {\n    if (this.textureCache[cacheKey]) {\n      this.gl.deleteTexture(this.textureCache[cacheKey]);\n      delete this.textureCache[cacheKey];\n    }\n  }\n\n  /**\n   * Copy an input WebGL canvas on to an output 2D canvas.\n   *\n   * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n   * desired output image appearing in the bottom-left corner of the WebGL canvas.\n   *\n   * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n   * @param {Object} pipelineState The 2D target canvas to copy on to.\n   */\n  copyGLTo2D(gl: WebGLRenderingContext, pipelineState: TWebGLPipelineState) {\n    const glCanvas = gl.canvas,\n      targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n    ctx.translate(0, targetCanvas.height); // move it down again\n    ctx.scale(1, -1); // vertical flip\n    // where is my image on the big glcanvas?\n    const sourceY = glCanvas.height - targetCanvas.height;\n    ctx.drawImage(\n      glCanvas,\n      0,\n      sourceY,\n      targetCanvas.width,\n      targetCanvas.height,\n      0,\n      0,\n      targetCanvas.width,\n      targetCanvas.height,\n    );\n  }\n\n  /**\n   * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n   * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n   *\n   * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n   * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n   * @param {Object} pipelineState The 2D target canvas to copy on to.\n   */\n  copyGLTo2DPutImageData(\n    this: Required<WebGLFilterBackend>,\n    gl: WebGLRenderingContext,\n    pipelineState: TWebGLPipelineState,\n  ) {\n    const targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4;\n    if (!ctx) {\n      return;\n    }\n    const u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n    const u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n\n    gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n    const imgData = new ImageData(u8Clamped, dWidth, dHeight);\n    ctx.putImageData(imgData, 0, 0);\n  }\n\n  /**\n   * Attempt to extract GPU information strings from a WebGL context.\n   *\n   * Useful information when debugging or blacklisting specific GPUs.\n   *\n   * @returns {Object} A GPU info object with renderer and vendor strings.\n   */\n  captureGPUInfo() {\n    if (this.gpuInfo) {\n      return this.gpuInfo;\n    }\n    const gl = this.gl,\n      gpuInfo = { renderer: '', vendor: '' };\n    if (!gl) {\n      return gpuInfo;\n    }\n    const ext = gl.getExtension('WEBGL_debug_renderer_info');\n    if (ext) {\n      const renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n      const vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n      if (renderer) {\n        gpuInfo.renderer = renderer.toLowerCase();\n      }\n      if (vendor) {\n        gpuInfo.vendor = vendor.toLowerCase();\n      }\n    }\n    this.gpuInfo = gpuInfo;\n    return gpuInfo;\n  }\n}\n\nfunction resizeCanvasIfNeeded(pipelineState: TWebGLPipelineState): void {\n  const targetCanvas = pipelineState.targetCanvas,\n    width = targetCanvas.width,\n    height = targetCanvas.height,\n    dWidth = pipelineState.destinationWidth,\n    dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n","import { config } from '../config';\nimport { getEnv } from '../env';\nimport { createCanvasElement } from '../util/misc/dom';\nimport { Canvas2dFilterBackend } from './Canvas2dFilterBackend';\nimport { WebGLFilterBackend } from './WebGLFilterBackend';\n\nexport type FilterBackend = WebGLFilterBackend | Canvas2dFilterBackend;\n\nlet filterBackend: FilterBackend;\n\n/**\n * Verifies if it is possible to initialize webgl or fallback on a canvas2d filtering backend\n */\nexport function initFilterBackend(): FilterBackend {\n  const { WebGLProbe } = getEnv();\n  WebGLProbe.queryWebGL(createCanvasElement());\n  if (config.enableGLFiltering && WebGLProbe.isSupported(config.textureSize)) {\n    return new WebGLFilterBackend({ tileSize: config.textureSize });\n  } else {\n    return new Canvas2dFilterBackend();\n  }\n}\n\n/**\n * Get the current fabricJS filter backend  or initialize one if not available yet\n * @param [strict] pass `true` to create the backend if it wasn't created yet (default behavior),\n * pass `false` to get the backend ref without mutating it\n */\nexport function getFilterBackend(strict = true): FilterBackend {\n  if (!filterBackend && strict) {\n    filterBackend = initFilterBackend();\n  }\n  return filterBackend;\n}\n\nexport function setFilterBackend(backend: FilterBackend) {\n  filterBackend = backend;\n}\n","import { getFabricDocument, getEnv } from '../env';\nimport type { BaseFilter } from '../filters/BaseFilter';\nimport { getFilterBackend } from '../filters/FilterBackend';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type {\n  TClassProperties,\n  TCrossOrigin,\n  TSize,\n  Abortable,\n  TOptions,\n} from '../typedefs';\nimport { uid } from '../util/internals/uid';\nimport { createCanvasElementFor } from '../util/misc/dom';\nimport { findScaleToCover, findScaleToFit } from '../util/misc/findScaleTo';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\nimport {\n  enlivenObjectEnlivables,\n  enlivenObjects,\n  loadImage,\n} from '../util/misc/objectEnlive';\nimport { parsePreserveAspectRatioAttribute } from '../util/misc/svgParsing';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport { WebGLFilterBackend } from '../filters/WebGLFilterBackend';\nimport { FILL, NONE } from '../constants';\nimport { getDocumentFromElement } from '../util/dom_misc';\nimport type { CSSRules } from '../parser/typedefs';\nimport type { Resize } from '../filters/Resize';\nimport type { TCachedFabricObject } from './Object/Object';\nimport { log } from '../util/internals/console';\n\n// @todo Would be nice to have filtering code not imported directly.\n\nexport type ImageSource =\n  | HTMLImageElement\n  | HTMLVideoElement\n  | HTMLCanvasElement;\n\ninterface UniqueImageProps {\n  srcFromAttribute: boolean;\n  minimumScaleTrigger: number;\n  cropX: number;\n  cropY: number;\n  imageSmoothing: boolean;\n  filters: BaseFilter<string, Record<string, any>>[];\n  resizeFilter?: Resize;\n}\n\nexport const imageDefaultValues: Partial<TClassProperties<FabricImage>> = {\n  strokeWidth: 0,\n  srcFromAttribute: false,\n  minimumScaleTrigger: 0.5,\n  cropX: 0,\n  cropY: 0,\n  imageSmoothing: true,\n};\n\nexport interface SerializedImageProps extends SerializedObjectProps {\n  src: string;\n  crossOrigin: TCrossOrigin;\n  filters: any[];\n  resizeFilter?: any;\n  cropX: number;\n  cropY: number;\n}\n\nexport interface ImageProps extends FabricObjectProps, UniqueImageProps {}\n\nconst IMAGE_PROPS = ['cropX', 'cropY'] as const;\n\n/**\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n */\nexport class FabricImage<\n    Props extends TOptions<ImageProps> = Partial<ImageProps>,\n    SProps extends SerializedImageProps = SerializedImageProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements ImageProps\n{\n  /**\n   * When calling {@link FabricImage.getSrc}, return value from element src with `element.getAttribute('src')`.\n   * This allows for relative urls as image src.\n   * @since 2.7.0\n   * @type Boolean\n   * @default false\n   */\n  declare srcFromAttribute: boolean;\n\n  /**\n   * private\n   * contains last value of scaleX to detect\n   * if the Image got resized after the last Render\n   * @type Number\n   */\n  protected _lastScaleX = 1;\n\n  /**\n   * private\n   * contains last value of scaleY to detect\n   * if the Image got resized after the last Render\n   * @type Number\n   */\n  protected _lastScaleY = 1;\n\n  /**\n   * private\n   * contains last value of scaling applied by the apply filter chain\n   * @type Number\n   */\n  protected _filterScalingX = 1;\n\n  /**\n   * private\n   * contains last value of scaling applied by the apply filter chain\n   * @type Number\n   */\n  protected _filterScalingY = 1;\n\n  /**\n   * minimum scale factor under which any resizeFilter is triggered to resize the image\n   * 0 will disable the automatic resize. 1 will trigger automatically always.\n   * number bigger than 1 are not implemented yet.\n   * @type Number\n   */\n  declare minimumScaleTrigger: number;\n\n  /**\n   * key used to retrieve the texture representing this image\n   * @since 2.0.0\n   * @type String\n   * @default\n   */\n  declare cacheKey: string;\n\n  /**\n   * Image crop in pixels from original image size.\n   * @since 2.0.0\n   * @type Number\n   * @default\n   */\n  declare cropX: number;\n\n  /**\n   * Image crop in pixels from original image size.\n   * @since 2.0.0\n   * @type Number\n   * @default\n   */\n  declare cropY: number;\n\n  /**\n   * Indicates whether this canvas will use image smoothing when painting this image.\n   * Also influence if the cacheCanvas for this image uses imageSmoothing\n   * @since 4.0.0-beta.11\n   * @type Boolean\n   * @default\n   */\n  declare imageSmoothing: boolean;\n\n  declare preserveAspectRatio: string;\n\n  protected declare src: string;\n\n  declare filters: BaseFilter<string, Record<string, any>>[];\n  declare resizeFilter: Resize;\n\n  declare _element: ImageSource;\n  declare _filteredEl?: HTMLCanvasElement;\n  declare _originalElement: ImageSource;\n\n  static type = 'Image';\n\n  static cacheProperties = [...cacheProperties, ...IMAGE_PROPS];\n\n  static ownDefaults = imageDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...FabricImage.ownDefaults,\n    };\n  }\n  /**\n   * Constructor\n   * Image can be initialized with any canvas drawable or a string.\n   * The string should be a url and will be loaded as an image.\n   * Canvas and Image element work out of the box, while videos require extra code to work.\n   * Please check video element events for seeking.\n   * @param {ImageSource | string} element Image element\n   * @param {Object} [options] Options object\n   */\n  constructor(elementId: string, options?: Props);\n  constructor(element: ImageSource, options?: Props);\n  constructor(arg0: ImageSource | string, options?: Props) {\n    super();\n    this.filters = [];\n    Object.assign(this, FabricImage.ownDefaults);\n    this.setOptions(options);\n    this.cacheKey = `texture${uid()}`;\n    this.setElement(\n      typeof arg0 === 'string'\n        ? ((\n            (this.canvas && getDocumentFromElement(this.canvas.getElement())) ||\n            getFabricDocument()\n          ).getElementById(arg0) as ImageSource)\n        : arg0,\n      options,\n    );\n  }\n\n  /**\n   * Returns image element which this instance if based on\n   */\n  getElement() {\n    return this._element;\n  }\n\n  /**\n   * Sets image element for this instance to a specified one.\n   * If filters defined they are applied to new image.\n   * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n   * @param {HTMLImageElement} element\n   * @param {Partial<TSize>} [size] Options object\n   */\n  setElement(element: ImageSource, size: Partial<TSize> = {}) {\n    this.removeTexture(this.cacheKey);\n    this.removeTexture(`${this.cacheKey}_filtered`);\n    this._element = element;\n    this._originalElement = element;\n    this._setWidthHeight(size);\n    element.classList.add(FabricImage.CSS_CANVAS);\n    if (this.filters.length !== 0) {\n      this.applyFilters();\n    }\n    // resizeFilters work on the already filtered copy.\n    // we need to apply resizeFilters AFTER normal filters.\n    // applyResizeFilters is run more often than normal filters\n    // and is triggered by user interactions rather than dev code\n    if (this.resizeFilter) {\n      this.applyResizeFilters();\n    }\n  }\n\n  /**\n   * Delete a single texture if in webgl mode\n   */\n  removeTexture(key: string) {\n    const backend = getFilterBackend(false);\n    if (backend instanceof WebGLFilterBackend) {\n      backend.evictCachesForKey(key);\n    }\n  }\n\n  /**\n   * Delete textures, reference to elements and eventually JSDOM cleanup\n   */\n  dispose() {\n    super.dispose();\n    this.removeTexture(this.cacheKey);\n    this.removeTexture(`${this.cacheKey}_filtered`);\n    this._cacheContext = null;\n    (\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'] as const\n    ).forEach((elementKey) => {\n      const el = this[elementKey];\n      el && getEnv().dispose(el);\n      // @ts-expect-error disposing\n      this[elementKey] = undefined;\n    });\n  }\n\n  /**\n   * Get the crossOrigin value (of the corresponding image element)\n   */\n  getCrossOrigin(): string | null {\n    return (\n      this._originalElement &&\n      ((this._originalElement as any).crossOrigin || null)\n    );\n  }\n\n  /**\n   * Returns original size of an image\n   */\n  getOriginalSize() {\n    const element = this.getElement() as any;\n    if (!element) {\n      return {\n        width: 0,\n        height: 0,\n      };\n    }\n    return {\n      width: element.naturalWidth || element.width,\n      height: element.naturalHeight || element.height,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _stroke(ctx: CanvasRenderingContext2D) {\n    if (!this.stroke || this.strokeWidth === 0) {\n      return;\n    }\n    const w = this.width / 2,\n      h = this.height / 2;\n    ctx.beginPath();\n    ctx.moveTo(-w, -h);\n    ctx.lineTo(w, -h);\n    ctx.lineTo(w, h);\n    ctx.lineTo(-w, h);\n    ctx.lineTo(-w, -h);\n    ctx.closePath();\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    const filters: Record<string, any>[] = [];\n    this.filters.forEach((filterObj) => {\n      filterObj && filters.push(filterObj.toObject());\n    });\n    return {\n      ...super.toObject([...IMAGE_PROPS, ...propertiesToInclude]),\n      src: this.getSrc(),\n      crossOrigin: this.getCrossOrigin(),\n      filters,\n      ...(this.resizeFilter\n        ? { resizeFilter: this.resizeFilter.toObject() }\n        : {}),\n    };\n  }\n\n  /**\n   * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,height.\n   * @return {Boolean}\n   */\n  hasCrop() {\n    return (\n      !!this.cropX ||\n      !!this.cropY ||\n      this.width < this._element.width ||\n      this.height < this._element.height\n    );\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {string[]} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const imageMarkup: string[] = [],\n      element = this._element,\n      x = -this.width / 2,\n      y = -this.height / 2;\n    let svgString: string[] = [],\n      strokeSvg: string[] = [],\n      clipPath = '',\n      imageRendering = '';\n    if (!element) {\n      return [];\n    }\n    if (this.hasCrop()) {\n      const clipPathId = uid();\n      svgString.push(\n        '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\n        '\\t<rect x=\"' +\n          x +\n          '\" y=\"' +\n          y +\n          '\" width=\"' +\n          this.width +\n          '\" height=\"' +\n          this.height +\n          '\" />\\n',\n        '</clipPath>\\n',\n      );\n      clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n    }\n    if (!this.imageSmoothing) {\n      imageRendering = ' image-rendering=\"optimizeSpeed\"';\n    }\n    imageMarkup.push(\n      '\\t<image ',\n      'COMMON_PARTS',\n      `xlink:href=\"${this.getSvgSrc(true)}\" x=\"${x - this.cropX}\" y=\"${\n        y - this.cropY\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n      }\" width=\"${\n        element.width || (element as HTMLImageElement).naturalWidth\n      }\" height=\"${\n        element.height || (element as HTMLImageElement).naturalHeight\n      }\"${imageRendering}${clipPath}></image>\\n`,\n    );\n\n    if (this.stroke || this.strokeDashArray) {\n      const origFill = this.fill;\n      this.fill = null;\n      strokeSvg = [\n        `\\t<rect x=\"${x}\" y=\"${y}\" width=\"${this.width}\" height=\"${\n          this.height\n        }\" style=\"${this.getSvgStyles()}\" />\\n`,\n      ];\n      this.fill = origFill;\n    }\n    if (this.paintFirst !== FILL) {\n      svgString = svgString.concat(strokeSvg, imageMarkup);\n    } else {\n      svgString = svgString.concat(imageMarkup, strokeSvg);\n    }\n    return svgString;\n  }\n\n  /**\n   * Returns source of an image\n   * @param {Boolean} filtered indicates if the src is needed for svg\n   * @return {String} Source of an image\n   */\n  getSrc(filtered?: boolean): string {\n    const element = filtered ? this._element : this._originalElement;\n    if (element) {\n      if ((element as HTMLCanvasElement).toDataURL) {\n        return (element as HTMLCanvasElement).toDataURL();\n      }\n\n      if (this.srcFromAttribute) {\n        return element.getAttribute('src') || '';\n      } else {\n        return (element as HTMLImageElement).src;\n      }\n    } else {\n      return this.src || '';\n    }\n  }\n\n  /**\n   * Alias for getSrc\n   * @param filtered\n   * @deprecated\n   */\n  getSvgSrc(filtered?: boolean) {\n    return this.getSrc(filtered);\n  }\n\n  /**\n   * Loads and sets source of an image\\\n   * **IMPORTANT**: It is recommended to abort loading tasks before calling this method to prevent race conditions and unnecessary networking\n   * @param {String} src Source string (URL)\n   * @param {LoadImageOptions} [options] Options object\n   */\n  setSrc(src: string, { crossOrigin, signal }: LoadImageOptions = {}) {\n    return loadImage(src, { crossOrigin, signal }).then((img) => {\n      typeof crossOrigin !== 'undefined' && this.set({ crossOrigin });\n      this.setElement(img);\n    });\n  }\n\n  /**\n   * Returns string representation of an instance\n   * @return {String} String representation of an instance\n   */\n  toString() {\n    return `#<Image: { src: \"${this.getSrc()}\" }>`;\n  }\n\n  applyResizeFilters() {\n    const filter = this.resizeFilter,\n      minimumScale = this.minimumScaleTrigger,\n      objectScale = this.getTotalObjectScaling(),\n      scaleX = objectScale.x,\n      scaleY = objectScale.y,\n      elementToFilter = this._filteredEl || this._originalElement;\n    if (this.group) {\n      this.set('dirty', true);\n    }\n    if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n      this._element = elementToFilter;\n      this._filterScalingX = 1;\n      this._filterScalingY = 1;\n      this._lastScaleX = scaleX;\n      this._lastScaleY = scaleY;\n      return;\n    }\n    const canvasEl = createCanvasElementFor(elementToFilter),\n      { width, height } = elementToFilter;\n    this._element = canvasEl;\n    this._lastScaleX = filter.scaleX = scaleX;\n    this._lastScaleY = filter.scaleY = scaleY;\n    getFilterBackend().applyFilters(\n      [filter],\n      elementToFilter,\n      width,\n      height,\n      this._element,\n    );\n    this._filterScalingX = canvasEl.width / this._originalElement.width;\n    this._filterScalingY = canvasEl.height / this._originalElement.height;\n  }\n\n  /**\n   * Applies filters assigned to this image (from \"filters\" array) or from filter param\n   * @method applyFilters\n   * @param {Array} filters to be applied\n   * @param {Boolean} forResizing specify if the filter operation is a resize operation\n   */\n  applyFilters(\n    filters: BaseFilter<string, Record<string, any>>[] = this.filters || [],\n  ) {\n    filters = filters.filter((filter) => filter && !filter.isNeutralState());\n    this.set('dirty', true);\n\n    // needs to clear out or WEBGL will not resize correctly\n    this.removeTexture(`${this.cacheKey}_filtered`);\n\n    if (filters.length === 0) {\n      this._element = this._originalElement;\n      // this is unsafe and needs to be rethinkend\n      this._filteredEl = undefined;\n      this._filterScalingX = 1;\n      this._filterScalingY = 1;\n      return;\n    }\n\n    const imgElement = this._originalElement,\n      sourceWidth =\n        (imgElement as HTMLImageElement).naturalWidth || imgElement.width,\n      sourceHeight =\n        (imgElement as HTMLImageElement).naturalHeight || imgElement.height;\n\n    if (this._element === this._originalElement) {\n      // if the _element a reference to _originalElement\n      // we need to create a new element to host the filtered pixels\n      const canvasEl = createCanvasElementFor({\n        width: sourceWidth,\n        height: sourceHeight,\n      });\n      this._element = canvasEl;\n      this._filteredEl = canvasEl;\n    } else if (this._filteredEl) {\n      // if the _element is it own element,\n      // and we also have a _filteredEl, then we clean up _filteredEl\n      // and we assign it to _element.\n      // in this way we invalidate the eventual old resize filtered element\n      this._element = this._filteredEl;\n      this._filteredEl\n        .getContext('2d')!\n        .clearRect(0, 0, sourceWidth, sourceHeight);\n      // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\n      this._lastScaleX = 1;\n      this._lastScaleY = 1;\n    }\n    getFilterBackend().applyFilters(\n      filters,\n      this._originalElement,\n      sourceWidth,\n      sourceHeight,\n      this._element as HTMLCanvasElement,\n    );\n    if (\n      this._originalElement.width !== this._element.width ||\n      this._originalElement.height !== this._element.height\n    ) {\n      this._filterScalingX = this._element.width / this._originalElement.width;\n      this._filterScalingY =\n        this._element.height / this._originalElement.height;\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.imageSmoothingEnabled = this.imageSmoothing;\n    if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\n      this.applyResizeFilters();\n    }\n    this._stroke(ctx);\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Paint the cached copy of the object on the target context.\n   * it will set the imageSmoothing for the draw operation\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawCacheOnCanvas(\n    this: TCachedFabricObject<FabricImage>,\n    ctx: CanvasRenderingContext2D,\n  ) {\n    ctx.imageSmoothingEnabled = this.imageSmoothing;\n    super.drawCacheOnCanvas(ctx);\n  }\n\n  /**\n   * Decide if the object should cache or not. Create its own cache level\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step. None of the fabric classes requires it.\n   * Generally you do not cache objects in groups because the group outside is cached.\n   * This is the special image version where we would like to avoid caching where possible.\n   * Essentially images do not benefit from caching. They may require caching, and in that\n   * case we do it. Also caching an image usually ends in a loss of details.\n   * A full performance audit should be done.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    return this.needsItsOwnCache();\n  }\n\n  _renderFill(ctx: CanvasRenderingContext2D) {\n    const elementToDraw = this._element;\n    if (!elementToDraw) {\n      return;\n    }\n    const scaleX = this._filterScalingX,\n      scaleY = this._filterScalingY,\n      w = this.width,\n      h = this.height,\n      // crop values cannot be lesser than 0.\n      cropX = Math.max(this.cropX, 0),\n      cropY = Math.max(this.cropY, 0),\n      elWidth =\n        (elementToDraw as HTMLImageElement).naturalWidth || elementToDraw.width,\n      elHeight =\n        (elementToDraw as HTMLImageElement).naturalHeight ||\n        elementToDraw.height,\n      sX = cropX * scaleX,\n      sY = cropY * scaleY,\n      // the width height cannot exceed element width/height, starting from the crop offset.\n      sW = Math.min(w * scaleX, elWidth - sX),\n      sH = Math.min(h * scaleY, elHeight - sY),\n      x = -w / 2,\n      y = -h / 2,\n      maxDestW = Math.min(w, elWidth / scaleX - cropX),\n      maxDestH = Math.min(h, elHeight / scaleY - cropY);\n\n    elementToDraw &&\n      ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, maxDestW, maxDestH);\n  }\n\n  /**\n   * needed to check if image needs resize\n   * @private\n   */\n  _needsResize() {\n    const scale = this.getTotalObjectScaling();\n    return scale.x !== this._lastScaleX || scale.y !== this._lastScaleY;\n  }\n\n  /**\n   * @private\n   * @deprecated unused\n   */\n  _resetWidthHeight() {\n    this.set(this.getOriginalSize());\n  }\n\n  /**\n   * @private\n   * Set the width and the height of the image object, using the element or the\n   * options.\n   */\n  _setWidthHeight({ width, height }: Partial<TSize> = {}) {\n    const size = this.getOriginalSize();\n    this.width = width || size.width;\n    this.height = height || size.height;\n  }\n\n  /**\n   * Calculate offset for center and scale factor for the image in order to respect\n   * the preserveAspectRatio attribute\n   * @private\n   */\n  parsePreserveAspectRatioAttribute() {\n    const pAR = parsePreserveAspectRatioAttribute(\n        this.preserveAspectRatio || '',\n      ),\n      pWidth = this.width,\n      pHeight = this.height,\n      parsedAttributes = { width: pWidth, height: pHeight };\n    let rWidth = this._element.width,\n      rHeight = this._element.height,\n      scaleX = 1,\n      scaleY = 1,\n      offsetLeft = 0,\n      offsetTop = 0,\n      cropX = 0,\n      cropY = 0,\n      offset;\n\n    if (pAR && (pAR.alignX !== NONE || pAR.alignY !== NONE)) {\n      if (pAR.meetOrSlice === 'meet') {\n        scaleX = scaleY = findScaleToFit(this._element, parsedAttributes);\n        offset = (pWidth - rWidth * scaleX) / 2;\n        if (pAR.alignX === 'Min') {\n          offsetLeft = -offset;\n        }\n        if (pAR.alignX === 'Max') {\n          offsetLeft = offset;\n        }\n        offset = (pHeight - rHeight * scaleY) / 2;\n        if (pAR.alignY === 'Min') {\n          offsetTop = -offset;\n        }\n        if (pAR.alignY === 'Max') {\n          offsetTop = offset;\n        }\n      }\n      if (pAR.meetOrSlice === 'slice') {\n        scaleX = scaleY = findScaleToCover(this._element, parsedAttributes);\n        offset = rWidth - pWidth / scaleX;\n        if (pAR.alignX === 'Mid') {\n          cropX = offset / 2;\n        }\n        if (pAR.alignX === 'Max') {\n          cropX = offset;\n        }\n        offset = rHeight - pHeight / scaleY;\n        if (pAR.alignY === 'Mid') {\n          cropY = offset / 2;\n        }\n        if (pAR.alignY === 'Max') {\n          cropY = offset;\n        }\n        rWidth = pWidth / scaleX;\n        rHeight = pHeight / scaleY;\n      }\n    } else {\n      scaleX = pWidth / rWidth;\n      scaleY = pHeight / rHeight;\n    }\n    return {\n      width: rWidth,\n      height: rHeight,\n      scaleX,\n      scaleY,\n      offsetLeft,\n      offsetTop,\n      cropX,\n      cropY,\n    };\n  }\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  static CSS_CANVAS = 'canvas-img';\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link FabricImage.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  static ATTRIBUTE_NAMES = [\n    ...SHARED_ATTRIBUTES,\n    'x',\n    'y',\n    'width',\n    'height',\n    'preserveAspectRatio',\n    'xlink:href',\n    'crossOrigin',\n    'image-rendering',\n  ];\n\n  /**\n   * Creates an instance of FabricImage from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {object} [options] Options object\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<FabricImage>}\n   */\n  static fromObject<T extends TOptions<SerializedImageProps>>(\n    { filters: f, resizeFilter: rf, src, crossOrigin, type, ...object }: T,\n    options?: Abortable,\n  ) {\n    return Promise.all([\n      loadImage(src!, { ...options, crossOrigin }),\n      f && enlivenObjects<BaseFilter<string>>(f, options),\n      // TODO: redundant - handled by enlivenObjectEnlivables\n      rf && enlivenObjects<BaseFilter<'Resize'>>([rf], options),\n      enlivenObjectEnlivables(object, options),\n    ]).then(([el, filters = [], [resizeFilter] = [], hydratedProps = {}]) => {\n      return new this(el, {\n        ...object,\n        // TODO: this creates a difference between image creation and restoring from JSON\n        src,\n        filters,\n        resizeFilter,\n        ...hydratedProps,\n      });\n    });\n  }\n\n  /**\n   * Creates an instance of Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {LoadImageOptions} [options] Options object\n   * @returns {Promise<FabricImage>}\n   */\n  static fromURL<T extends TOptions<ImageProps>>(\n    url: string,\n    { crossOrigin = null, signal }: LoadImageOptions = {},\n    imageOptions?: T,\n  ): Promise<FabricImage> {\n    return loadImage(url, { crossOrigin, signal }).then(\n      (img) => new this(img, imageOptions),\n    );\n  }\n\n  /**\n   * Returns {@link FabricImage} instance from an SVG element\n   * @static\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @param {Function} callback Callback to execute when Image object is created\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable = {},\n    cssRules?: CSSRules,\n  ) {\n    const parsedAttributes = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules,\n    );\n    return this.fromURL(\n      parsedAttributes['xlink:href'],\n      options,\n      parsedAttributes,\n    ).catch((err) => {\n      log('log', 'Unable to parse Image', err);\n      return null;\n    });\n  }\n}\n\nclassRegistry.setClass(FabricImage);\nclassRegistry.setSVGClass(FabricImage);\n","import { svgNS } from './constants';\nimport {\n  parsePreserveAspectRatioAttribute,\n  parseUnit,\n} from '../util/misc/svgParsing';\nimport { svgViewBoxElementsRegEx, reViewBoxAttrValue } from './constants';\nimport { NONE } from '../constants';\n\nexport type ParsedViewboxTransform = Partial<{\n  width: number;\n  height: number;\n  minX: number;\n  minY: number;\n  viewBoxWidth: number;\n  viewBoxHeight: number;\n}>;\n\n/**\n * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n */\nexport function applyViewboxTransform(\n  element: Element,\n): ParsedViewboxTransform {\n  if (!svgViewBoxElementsRegEx.test(element.nodeName)) {\n    return {};\n  }\n  const viewBoxAttr: string | null = element.getAttribute('viewBox');\n  let scaleX = 1;\n  let scaleY = 1;\n  let minX = 0;\n  let minY = 0;\n  let matrix;\n  let el;\n  const widthAttr = element.getAttribute('width');\n  const heightAttr = element.getAttribute('height');\n  const x = element.getAttribute('x') || 0;\n  const y = element.getAttribute('y') || 0;\n  const goodViewbox = viewBoxAttr && reViewBoxAttrValue.test(viewBoxAttr);\n  const missingViewBox = !goodViewbox;\n  const missingDimAttr =\n    !widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%';\n\n  let translateMatrix = '';\n  let widthDiff = 0;\n  let heightDiff = 0;\n\n  if (missingViewBox) {\n    if (\n      (x || y) &&\n      element.parentNode &&\n      element.parentNode.nodeName !== '#document'\n    ) {\n      translateMatrix =\n        ' translate(' + parseUnit(x || '0') + ' ' + parseUnit(y || '0') + ') ';\n      matrix = (element.getAttribute('transform') || '') + translateMatrix;\n      element.setAttribute('transform', matrix);\n      element.removeAttribute('x');\n      element.removeAttribute('y');\n    }\n  }\n\n  if (missingViewBox && missingDimAttr) {\n    return {\n      width: 0,\n      height: 0,\n    };\n  }\n\n  const parsedDim: ParsedViewboxTransform = {\n    width: 0,\n    height: 0,\n  };\n\n  if (missingViewBox) {\n    parsedDim.width = parseUnit(widthAttr!);\n    parsedDim.height = parseUnit(heightAttr!);\n    // set a transform for elements that have x y and are inner(only) SVGs\n    return parsedDim;\n  }\n\n  const pasedViewBox = viewBoxAttr.match(reViewBoxAttrValue)!;\n  minX = -parseFloat(pasedViewBox[1]);\n  minY = -parseFloat(pasedViewBox[2]);\n  const viewBoxWidth = parseFloat(pasedViewBox[3]);\n  const viewBoxHeight = parseFloat(pasedViewBox[4]);\n  parsedDim.minX = minX;\n  parsedDim.minY = minY;\n  parsedDim.viewBoxWidth = viewBoxWidth;\n  parsedDim.viewBoxHeight = viewBoxHeight;\n  if (!missingDimAttr) {\n    parsedDim.width = parseUnit(widthAttr);\n    parsedDim.height = parseUnit(heightAttr);\n    scaleX = parsedDim.width / viewBoxWidth;\n    scaleY = parsedDim.height / viewBoxHeight;\n  } else {\n    parsedDim.width = viewBoxWidth;\n    parsedDim.height = viewBoxHeight;\n  }\n\n  // default is to preserve aspect ratio\n  const preserveAspectRatio = parsePreserveAspectRatioAttribute(\n    element.getAttribute('preserveAspectRatio') || '',\n  );\n  if (preserveAspectRatio.alignX !== NONE) {\n    //translate all container for the effect of Mid, Min, Max\n    if (preserveAspectRatio.meetOrSlice === 'meet') {\n      scaleY = scaleX = scaleX > scaleY ? scaleY : scaleX;\n      // calculate additional translation to move the viewbox\n    }\n    if (preserveAspectRatio.meetOrSlice === 'slice') {\n      scaleY = scaleX = scaleX > scaleY ? scaleX : scaleY;\n      // calculate additional translation to move the viewbox\n    }\n    widthDiff = parsedDim.width - viewBoxWidth * scaleX;\n    heightDiff = parsedDim.height - viewBoxHeight * scaleX;\n    if (preserveAspectRatio.alignX === 'Mid') {\n      widthDiff /= 2;\n    }\n    if (preserveAspectRatio.alignY === 'Mid') {\n      heightDiff /= 2;\n    }\n    if (preserveAspectRatio.alignX === 'Min') {\n      widthDiff = 0;\n    }\n    if (preserveAspectRatio.alignY === 'Min') {\n      heightDiff = 0;\n    }\n  }\n\n  if (\n    scaleX === 1 &&\n    scaleY === 1 &&\n    minX === 0 &&\n    minY === 0 &&\n    x === 0 &&\n    y === 0\n  ) {\n    return parsedDim;\n  }\n  if ((x || y) && element.parentNode!.nodeName !== '#document') {\n    translateMatrix =\n      ' translate(' + parseUnit(x || '0') + ' ' + parseUnit(y || '0') + ') ';\n  }\n\n  matrix =\n    translateMatrix +\n    ' matrix(' +\n    scaleX +\n    ' 0' +\n    ' 0 ' +\n    scaleY +\n    ' ' +\n    (minX * scaleX + widthDiff) +\n    ' ' +\n    (minY * scaleY + heightDiff) +\n    ') ';\n  // seems unused.\n  // parsedDim.viewboxTransform = parseTransformAttribute(matrix);\n  if (element.nodeName === 'svg') {\n    el = element.ownerDocument.createElementNS(svgNS, 'g');\n    // element.firstChild != null\n    while (element.firstChild) {\n      el.appendChild(element.firstChild);\n    }\n    element.appendChild(el);\n  } else {\n    el = element;\n    el.removeAttribute('x');\n    el.removeAttribute('y');\n    matrix = el.getAttribute('transform') + matrix;\n  }\n  el.setAttribute('transform', matrix);\n  return parsedDim;\n}\n","export const getTagName = (node: Element) => node.tagName.replace('svg:', '');\n","import { svgInvalidAncestors } from './constants';\nimport { getSvgRegex } from './getSvgRegex';\nimport { getTagName } from './getTagName';\n\nconst svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n\nexport function hasInvalidAncestor(element: Element) {\n  let _element: Element | null = element;\n  while (_element && (_element = _element.parentElement)) {\n    if (\n      _element &&\n      _element.nodeName &&\n      svgInvalidAncestorsRegEx.test(getTagName(_element)) &&\n      !_element.getAttribute('instantiated_by_use')\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n","export function getMultipleNodes(\n  doc: Document,\n  nodeNames: string[],\n): Element[] {\n  let nodeName,\n    nodeArray: Element[] = [],\n    nodeList,\n    i,\n    len;\n  for (i = 0, len = nodeNames.length; i < len; i++) {\n    nodeName = nodeNames[i];\n    nodeList = doc.getElementsByTagNameNS(\n      'http://www.w3.org/2000/svg',\n      nodeName,\n    );\n    nodeArray = nodeArray.concat(Array.from(nodeList));\n  }\n  return nodeArray;\n}\n","const gradientsAttrs = [\n  'gradientTransform',\n  'x1',\n  'x2',\n  'y1',\n  'y2',\n  'gradientUnits',\n  'cx',\n  'cy',\n  'r',\n  'fx',\n  'fy',\n];\nconst xlinkAttr = 'xlink:href';\n\nexport function recursivelyParseGradientsXlink(\n  doc: Document,\n  gradient: Element,\n) {\n  const xLink = gradient.getAttribute(xlinkAttr)?.slice(1) || '',\n    referencedGradient = doc.getElementById(xLink);\n  if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\n    recursivelyParseGradientsXlink(doc, referencedGradient as Element);\n  }\n  if (referencedGradient) {\n    gradientsAttrs.forEach((attr) => {\n      const value = referencedGradient.getAttribute(attr);\n      if (!gradient.hasAttribute(attr) && value) {\n        gradient.setAttribute(attr, value);\n      }\n    });\n    if (!gradient.children.length) {\n      const referenceClone = referencedGradient.cloneNode(true);\n      while (referenceClone.firstChild) {\n        gradient.appendChild(referenceClone.firstChild);\n      }\n    }\n  }\n  gradient.removeAttribute(xlinkAttr);\n}\n","import { getMultipleNodes } from './getMultipleNodes';\nimport { recursivelyParseGradientsXlink } from './recursivelyParseGradientsXlink';\n\nconst tagArray = [\n  'linearGradient',\n  'radialGradient',\n  'svg:linearGradient',\n  'svg:radialGradient',\n];\n\n/**\n * Parses an SVG document, returning all of the gradient declarations found in it\n * @param {SVGDocument} doc SVG document to parse\n * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n */\nexport function getGradientDefs(\n  doc: Document,\n): Record<string, SVGGradientElement> {\n  const elList = getMultipleNodes(doc, tagArray);\n  const gradientDefs: Record<string, SVGGradientElement> = {};\n  let j = elList.length;\n  while (j--) {\n    const el = elList[j];\n    if (el.getAttribute('xlink:href')) {\n      recursivelyParseGradientsXlink(doc, el);\n    }\n    const id = el.getAttribute('id');\n    if (id) {\n      gradientDefs[id] = el as SVGGradientElement;\n    }\n  }\n  return gradientDefs;\n}\n","import type { CSSRules } from './typedefs';\n\n/**\n * Returns CSS rules for a given SVG document\n * @param {HTMLElement} doc SVG document to parse\n * @return {Object} CSS rules of this document\n */\nexport function getCSSRules(doc: Document) {\n  const styles = doc.getElementsByTagName('style');\n  let i;\n  let len;\n  const allRules: CSSRules = {};\n\n  // very crude parsing of style contents\n  for (i = 0, len = styles.length; i < len; i++) {\n    const styleContents = (styles[i].textContent || '').replace(\n      // remove comments\n      /\\/\\*[\\s\\S]*?\\*\\//g,\n      '',\n    );\n\n    if (styleContents.trim() === '') {\n      continue;\n    }\n    // recovers all the rule in this form `body { style code... }`\n    // rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n    styleContents\n      .split('}')\n      // remove empty rules and remove everything if we didn't split in at least 2 pieces\n      .filter((rule, index, array) => array.length > 1 && rule.trim())\n      // at this point we have hopefully an array of rules `body { style code... `\n      .forEach((rule) => {\n        // if there is more than one opening bracket and the rule starts with '@', it is likely\n        // a nested at-rule like @media, @supports, @scope, etc. Ignore these as the code below\n        // can not handle it.\n        if (\n          (rule.match(/{/g) || []).length > 1 &&\n          rule.trim().startsWith('@')\n        ) {\n          return;\n        }\n\n        const match = rule.split('{'),\n          ruleObj: Record<string, string> = {},\n          declaration = match[1].trim(),\n          propertyValuePairs = declaration.split(';').filter(function (pair) {\n            return pair.trim();\n          });\n\n        for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n          const pair = propertyValuePairs[i].split(':'),\n            property = pair[0].trim(),\n            value = pair[1].trim();\n          ruleObj[property] = value;\n        }\n        rule = match[0].trim();\n        rule.split(',').forEach((_rule) => {\n          _rule = _rule.replace(/^svg/i, '').trim();\n          if (_rule === '') {\n            return;\n          }\n          allRules[_rule] = {\n            ...(allRules[_rule] || {}),\n            ...ruleObj,\n          };\n        });\n      });\n  }\n  return allRules;\n}\n","import { Gradient } from '../gradient/Gradient';\nimport { Group } from '../shapes/Group';\nimport { FabricImage } from '../shapes/Image';\nimport { classRegistry } from '../ClassRegistry';\nimport {\n  invertTransform,\n  multiplyTransformMatrices,\n  qrDecompose,\n} from '../util/misc/matrix';\nimport { removeTransformMatrixForSvgParsing } from '../util/transform_matrix_removal';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport { Point } from '../Point';\nimport { CENTER, FILL, STROKE } from '../constants';\nimport { getGradientDefs } from './getGradientDefs';\nimport { getCSSRules } from './getCSSRules';\nimport type { LoadImageOptions } from '../util';\nimport type { CSSRules, TSvgReviverCallback } from './typedefs';\nimport type { ParsedViewboxTransform } from './applyViewboxTransform';\nimport type { SVGOptions } from '../gradient';\nimport { getTagName } from './getTagName';\nimport { parseTransformAttribute } from './parseTransformAttribute';\n\nconst findTag = (el: Element) =>\n  classRegistry.getSVGClass(getTagName(el).toLowerCase());\n\ntype StorageType = {\n  fill: SVGGradientElement;\n  stroke: SVGGradientElement;\n  clipPath: Element[];\n};\n\ntype NotParsedFabricObject = FabricObject & {\n  fill: string;\n  stroke: string;\n  clipPath?: string;\n  clipRule?: CanvasFillRule;\n};\n\nexport class ElementsParser {\n  declare elements: Element[];\n  declare options: LoadImageOptions & ParsedViewboxTransform;\n  declare reviver?: TSvgReviverCallback;\n  declare regexUrl: RegExp;\n  declare doc: Document;\n  declare clipPaths: Record<string, Element[]>;\n  declare gradientDefs: Record<string, SVGGradientElement>;\n  declare cssRules: CSSRules;\n\n  constructor(\n    elements: Element[],\n    options: LoadImageOptions & ParsedViewboxTransform,\n    reviver: TSvgReviverCallback | undefined,\n    doc: Document,\n    clipPaths: Record<string, Element[]>,\n  ) {\n    this.elements = elements;\n    this.options = options;\n    this.reviver = reviver;\n    this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n    this.doc = doc;\n    this.clipPaths = clipPaths;\n    this.gradientDefs = getGradientDefs(doc);\n    this.cssRules = getCSSRules(doc);\n  }\n\n  parse(): Promise<Array<FabricObject | null>> {\n    return Promise.all(\n      this.elements.map((element) => this.createObject(element)),\n    );\n  }\n\n  async createObject(el: Element): Promise<FabricObject | null> {\n    const klass = findTag(el);\n    if (klass) {\n      const obj: NotParsedFabricObject = await klass.fromElement(\n        el,\n        this.options,\n        this.cssRules,\n      );\n      this.resolveGradient(obj, el, FILL);\n      this.resolveGradient(obj, el, STROKE);\n      if (obj instanceof FabricImage && obj._originalElement) {\n        removeTransformMatrixForSvgParsing(\n          obj,\n          obj.parsePreserveAspectRatioAttribute(),\n        );\n      } else {\n        removeTransformMatrixForSvgParsing(obj);\n      }\n      await this.resolveClipPath(obj, el);\n      this.reviver && this.reviver(el, obj);\n      return obj;\n    }\n    return null;\n  }\n\n  extractPropertyDefinition(\n    obj: NotParsedFabricObject,\n    property: 'fill' | 'stroke' | 'clipPath',\n    storage: Record<string, StorageType[typeof property]>,\n  ): StorageType[typeof property] | undefined {\n    const value = obj[property]!,\n      regex = this.regexUrl;\n    if (!regex.test(value)) {\n      return undefined;\n    }\n    // verify: can we remove the 'g' flag? and remove lastIndex changes?\n    regex.lastIndex = 0;\n    // we passed the regex test, so we know is not null;\n    const id = regex.exec(value)![1];\n    regex.lastIndex = 0;\n    // @todo fix this\n    return storage[id];\n  }\n\n  resolveGradient(\n    obj: NotParsedFabricObject,\n    el: Element,\n    property: 'fill' | 'stroke',\n  ) {\n    const gradientDef = this.extractPropertyDefinition(\n      obj,\n      property,\n      this.gradientDefs,\n    ) as SVGGradientElement;\n    if (gradientDef) {\n      const opacityAttr = el.getAttribute(property + '-opacity');\n      const gradient = Gradient.fromElement(gradientDef, obj, {\n        ...this.options,\n        opacity: opacityAttr,\n      } as SVGOptions);\n      obj.set(property, gradient);\n    }\n  }\n\n  // TODO: resolveClipPath could be run once per clippath with minor work per object.\n  // is a refactor that i m not sure is worth on this code\n  async resolveClipPath(\n    obj: NotParsedFabricObject,\n    usingElement: Element,\n    exactOwner?: Element,\n  ) {\n    const clipPathElements = this.extractPropertyDefinition(\n      obj,\n      'clipPath',\n      this.clipPaths,\n    ) as Element[];\n    if (clipPathElements) {\n      const objTransformInv = invertTransform(obj.calcTransformMatrix());\n      const clipPathTag = clipPathElements[0].parentElement!;\n      let clipPathOwner = usingElement;\n      while (\n        !exactOwner &&\n        clipPathOwner.parentElement &&\n        clipPathOwner.getAttribute('clip-path') !== obj.clipPath\n      ) {\n        clipPathOwner = clipPathOwner.parentElement;\n      }\n      // move the clipPath tag as sibling to the real element that is using it\n      clipPathOwner.parentElement!.appendChild(clipPathTag!);\n\n      // this multiplication order could be opposite.\n      // but i don't have an svg to test it\n      // at the first SVG that has a transform on both places and is misplaced\n      // try to invert this multiplication order\n      const finalTransform = parseTransformAttribute(\n        `${clipPathOwner.getAttribute('transform') || ''} ${\n          clipPathTag.getAttribute('originalTransform') || ''\n        }`,\n      );\n\n      clipPathTag.setAttribute(\n        'transform',\n        `matrix(${finalTransform.join(',')})`,\n      );\n\n      const container = await Promise.all(\n        clipPathElements.map((clipPathElement) => {\n          return findTag(clipPathElement)\n            .fromElement(clipPathElement, this.options, this.cssRules)\n            .then((enlivedClippath: NotParsedFabricObject) => {\n              removeTransformMatrixForSvgParsing(enlivedClippath);\n              enlivedClippath.fillRule = enlivedClippath.clipRule!;\n              delete enlivedClippath.clipRule;\n              return enlivedClippath;\n            });\n        }),\n      );\n      const clipPath =\n        container.length === 1 ? container[0] : new Group(container);\n      const gTransform = multiplyTransformMatrices(\n        objTransformInv,\n        clipPath.calcTransformMatrix(),\n      );\n      if (clipPath.clipPath) {\n        await this.resolveClipPath(\n          clipPath,\n          clipPathOwner,\n          // this is tricky.\n          // it tries to differentiate from when clipPaths are inherited by outside groups\n          // or when are really clipPaths referencing other clipPaths\n          clipPathTag.getAttribute('clip-path') ? clipPathOwner : undefined,\n        );\n      }\n      const { scaleX, scaleY, angle, skewX, translateX, translateY } =\n        qrDecompose(gTransform);\n      clipPath.set({\n        flipX: false,\n        flipY: false,\n      });\n      clipPath.set({\n        scaleX,\n        scaleY,\n        angle,\n        skewX,\n        skewY: 0,\n      });\n      clipPath.setPositionByOrigin(\n        new Point(translateX, translateY),\n        CENTER,\n        CENTER,\n      );\n      obj.clipPath = clipPath;\n    } else {\n      // if clip-path does not resolve to any element, delete the property.\n      delete obj.clipPath;\n      return;\n    }\n  }\n}\n","import { applyViewboxTransform } from './applyViewboxTransform';\nimport { svgValidTagNamesRegEx } from './constants';\nimport { hasInvalidAncestor } from './hasInvalidAncestor';\nimport { parseUseDirectives } from './parseUseDirectives';\nimport type { SVGParsingOutput, TSvgReviverCallback } from './typedefs';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\nimport { ElementsParser } from './elements_parser';\nimport { log, SignalAbortedError } from '../util/internals/console';\nimport { getTagName } from './getTagName';\n\nconst isValidSvgTag = (el: Element) =>\n  svgValidTagNamesRegEx.test(getTagName(el));\n\nexport const createEmptyResponse = (): SVGParsingOutput => ({\n  objects: [],\n  elements: [],\n  options: {},\n  allElements: [],\n});\n\n/**\n * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n * @static\n * @function\n * @memberOf fabric\n * @param {HTMLElement} doc SVG document to parse\n * @param {TSvgParsedCallback} callback Invoked when the parsing is done, with null if parsing wasn't possible with the list of svg nodes.\n * @param {TSvgReviverCallback} [reviver] Extra callback for further parsing of SVG elements, called after each fabric object has been created.\n * Takes as input the original svg element and the generated `FabricObject` as arguments. Used to inspect extra properties not parsed by fabric,\n * or extra custom manipulation\n * @param {Object} [options] Object containing options for parsing\n * @param {String} [options.crossOrigin] crossOrigin setting to use for external resources\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @return {SVGParsingOutput}\n * {@link SVGParsingOutput} also receives `allElements` array as the last argument. This is the full list of svg nodes available in the document.\n * You may want to use it if you are trying to regroup the objects as they were originally grouped in the SVG. ( This was the reason why it was added )\n */\nexport async function parseSVGDocument(\n  doc: Document,\n  reviver?: TSvgReviverCallback,\n  { crossOrigin, signal }: LoadImageOptions = {},\n): Promise<SVGParsingOutput> {\n  if (signal && signal.aborted) {\n    log('log', new SignalAbortedError('parseSVGDocument'));\n    // this is an unhappy path, we dont care about speed\n    return createEmptyResponse();\n  }\n  const documentElement = doc.documentElement;\n  parseUseDirectives(doc);\n\n  const descendants = Array.from(documentElement.getElementsByTagName('*')),\n    options = {\n      ...applyViewboxTransform(documentElement),\n      crossOrigin,\n      signal,\n    };\n  const elements = descendants.filter((el) => {\n    applyViewboxTransform(el);\n    return isValidSvgTag(el) && !hasInvalidAncestor(el); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n  });\n  if (!elements || (elements && !elements.length)) {\n    return {\n      ...createEmptyResponse(),\n      options,\n      allElements: descendants,\n    };\n  }\n  const localClipPaths: Record<string, Element[]> = {};\n  descendants\n    .filter((el) => getTagName(el) === 'clipPath')\n    .forEach((el) => {\n      el.setAttribute('originalTransform', el.getAttribute('transform') || '');\n      const id = el.getAttribute('id')!;\n      localClipPaths[id] = Array.from(el.getElementsByTagName('*')).filter(\n        (el) => isValidSvgTag(el),\n      );\n    });\n\n  // Precedence of rules:   style > class > attribute\n  const elementParser = new ElementsParser(\n    elements,\n    options,\n    reviver,\n    doc,\n    localClipPaths,\n  );\n\n  const instances = await elementParser.parse();\n\n  return {\n    objects: instances,\n    elements,\n    options,\n    allElements: descendants,\n  };\n}\n","import { svgNS } from './constants';\nimport { getMultipleNodes } from './getMultipleNodes';\nimport { applyViewboxTransform } from './applyViewboxTransform';\nimport { parseStyleString } from './parseStyleString';\n\nexport function parseUseDirectives(doc: Document) {\n  const nodelist = getMultipleNodes(doc, ['use', 'svg:use']);\n  const skipAttributes = ['x', 'y', 'xlink:href', 'href', 'transform'];\n\n  for (const useElement of nodelist) {\n    const useAttributes: NamedNodeMap = useElement.attributes;\n\n    const useAttrMap: Record<string, string> = {};\n    for (const attr of useAttributes) {\n      attr.value && (useAttrMap[attr.name] = attr.value);\n    }\n\n    const xlink = (useAttrMap['xlink:href'] || useAttrMap.href || '').slice(1);\n\n    if (xlink === '') {\n      return;\n    }\n    const referencedElement = doc.getElementById(xlink);\n    if (referencedElement === null) {\n      // if we can't find the target of the xlink, consider this use tag bad, similar to no xlink\n      return;\n    }\n    let clonedOriginal = referencedElement.cloneNode(true) as Element;\n\n    const originalAttributes: NamedNodeMap = clonedOriginal.attributes;\n\n    const originalAttrMap: Record<string, string> = {};\n    for (const attr of originalAttributes) {\n      attr.value && (originalAttrMap[attr.name] = attr.value);\n    }\n\n    // Transform attribute needs to be merged in a particular way\n    const { x = 0, y = 0, transform = '' } = useAttrMap;\n    const currentTrans = `${transform} ${\n      originalAttrMap.transform || ''\n    } translate(${x}, ${y})`;\n\n    applyViewboxTransform(clonedOriginal);\n\n    if (/^svg$/i.test(clonedOriginal.nodeName)) {\n      // if is an SVG, create a group and apply all the attributes on top of it\n      const el3 = clonedOriginal.ownerDocument.createElementNS(svgNS, 'g');\n      Object.entries(originalAttrMap).forEach(([name, value]) =>\n        el3.setAttributeNS(svgNS, name, value),\n      );\n      el3.append(...clonedOriginal.childNodes);\n      clonedOriginal = el3;\n    }\n\n    for (const attr of useAttributes) {\n      if (!attr) {\n        continue;\n      }\n      const { name, value } = attr;\n      if (skipAttributes.includes(name)) {\n        continue;\n      }\n\n      if (name === 'style') {\n        // when use has a style, merge the two styles, with the ref being priority (not use)\n        // priority is by feature. an attribute for fill on the original element\n        // will overwrite the fill in style or attribute for tha use\n        const styleRecord: Record<string, any> = {};\n        parseStyleString(value!, styleRecord);\n        // cleanup styleRecord from attributes of original\n        Object.entries(originalAttrMap).forEach(([name, value]) => {\n          styleRecord[name] = value;\n        });\n        // now we can put in the style of the original that will overwrite the original attributes\n        parseStyleString(originalAttrMap.style || '', styleRecord);\n        const mergedStyles = Object.entries(styleRecord)\n          .map((entry) => entry.join(':'))\n          .join(';');\n        clonedOriginal.setAttribute(name, mergedStyles);\n      } else {\n        // set the attribute from use element only if the original does not have it already\n        !originalAttrMap[name] && clonedOriginal.setAttribute(name, value!);\n      }\n    }\n\n    clonedOriginal.setAttribute('transform', currentTrans);\n    clonedOriginal.setAttribute('instantiated_by_use', '1');\n    clonedOriginal.removeAttribute('id');\n    useElement.parentNode!.replaceChild(clonedOriginal, useElement);\n  }\n}\n","import { getFabricWindow } from '../env';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\nimport { parseSVGDocument } from './parseSVGDocument';\nimport type { SVGParsingOutput, TSvgReviverCallback } from './typedefs';\n\n/**\n * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n * @memberOf fabric\n * @param {String} string representing the svg\n * @param {TSvgParsedCallback} callback Invoked when the parsing is done, with null if parsing wasn't possible with the list of svg nodes.\n * {@link TSvgParsedCallback} also receives `allElements` array as the last argument. This is the full list of svg nodes available in the document.\n * You may want to use it if you are trying to regroup the objects as they were originally grouped in the SVG. ( This was the reason why it was added )\n * @param {TSvgReviverCallback} [reviver] Extra callback for further parsing of SVG elements, called after each fabric object has been created.\n * Takes as input the original svg element and the generated `FabricObject` as arguments. Used to inspect extra properties not parsed by fabric,\n * or extra custom manipulation\n * @param {Object} [options] Object containing options for parsing\n * @param {String} [options.crossOrigin] crossOrigin setting to use for external resources\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n */\nexport function loadSVGFromString(\n  string: string,\n  reviver?: TSvgReviverCallback,\n  options?: LoadImageOptions,\n): Promise<SVGParsingOutput> {\n  const parser = new (getFabricWindow().DOMParser)(),\n    // should we use `image/svg+xml` here?\n    doc = parser.parseFromString(string.trim(), 'text/xml');\n  return parseSVGDocument(doc, reviver, options);\n}\n","import { request } from '../util/internals/dom_request';\nimport { parseSVGDocument, createEmptyResponse } from './parseSVGDocument';\nimport type { SVGParsingOutput, TSvgReviverCallback } from './typedefs';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\n\n/**\n * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n * @memberOf fabric\n * @param {string} url where the SVG is\n * @param {TSvgParsedCallback} callback Invoked when the parsing is done, with null if parsing wasn't possible with the list of svg nodes.\n * {@link TSvgParsedCallback} also receives `allElements` array as the last argument. This is the full list of svg nodes available in the document.\n * You may want to use it if you are trying to regroup the objects as they were originally grouped in the SVG. ( This was the reason why it was added )\n * @param {TSvgReviverCallback} [reviver] Extra callback for further parsing of SVG elements, called after each fabric object has been created.\n * Takes as input the original svg element and the generated `FabricObject` as arguments. Used to inspect extra properties not parsed by fabric,\n * or extra custom manipulation\n * @param {Object} [options] Object containing options for parsing\n * @param {String} [options.crossOrigin] crossOrigin setting to use for external resources\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n */\nexport function loadSVGFromURL(\n  url: string,\n  reviver?: TSvgReviverCallback,\n  options: LoadImageOptions = {},\n): Promise<SVGParsingOutput> {\n  // need to handle error properly\n  return new Promise<Document>((resolve, reject) => {\n    const onComplete = (r: XMLHttpRequest) => {\n      const xml = r.responseXML;\n      if (xml) {\n        resolve(xml);\n      }\n      reject();\n    };\n\n    request(url.replace(/^\\n\\s*/, '').trim(), {\n      onComplete,\n      signal: options.signal,\n    });\n  })\n    .then((parsedDoc) => parseSVGDocument(parsedDoc, reviver, options))\n    .catch(() => {\n      // this is an unhappy path, we dont care about speed\n      return createEmptyResponse();\n    });\n}\n","import { Point } from '../Point';\nimport { Control } from './Control';\nimport type { TMat2D } from '../typedefs';\nimport type { Polyline } from '../shapes/Polyline';\nimport { multiplyTransformMatrices } from '../util/misc/matrix';\nimport type {\n  TModificationEvents,\n  TPointerEvent,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { sendPointToPlane } from '../util/misc/planeChange';\nimport { MODIFY_POLY } from '../constants';\n\nconst ACTION_NAME: TModificationEvents = MODIFY_POLY;\n\ntype TTransformAnchor = Transform & { pointIndex: number };\n\n/**\n * This function locates the controls.\n * It'll be used both for drawing and for interaction.\n */\nexport const createPolyPositionHandler = (pointIndex: number) => {\n  return function (dim: Point, finalMatrix: TMat2D, polyObject: Polyline) {\n    const { points, pathOffset } = polyObject;\n    return new Point(points[pointIndex])\n      .subtract(pathOffset)\n      .transform(\n        multiplyTransformMatrices(\n          polyObject.getViewportTransform(),\n          polyObject.calcTransformMatrix(),\n        ),\n      );\n  };\n};\n\n/**\n * This function defines what the control does.\n * It'll be called on every mouse move after a control has been clicked and is being dragged.\n * The function receives as argument the mouse event, the current transform object\n * and the current position in canvas coordinate `transform.target` is a reference to the\n * current object being transformed.\n */\nexport const polyActionHandler = (\n  eventData: TPointerEvent,\n  transform: TTransformAnchor,\n  x: number,\n  y: number,\n) => {\n  const { target, pointIndex } = transform;\n  const poly = target as Polyline;\n  const mouseLocalPosition = sendPointToPlane(\n    new Point(x, y),\n    undefined,\n    poly.calcOwnMatrix(),\n  );\n\n  poly.points[pointIndex] = mouseLocalPosition.add(poly.pathOffset);\n  poly.setDimensions();\n\n  return true;\n};\n\n/**\n * Keep the polygon in the same position when we change its `width`/`height`/`top`/`left`.\n */\nexport const factoryPolyActionHandler = (\n  pointIndex: number,\n  fn: TransformActionHandler<TTransformAnchor>,\n) => {\n  return function (\n    eventData: TPointerEvent,\n    transform: Transform,\n    x: number,\n    y: number,\n  ) {\n    const poly = transform.target as Polyline,\n      anchorPoint = new Point(\n        poly.points[(pointIndex > 0 ? pointIndex : poly.points.length) - 1],\n      ),\n      anchorPointInParentPlane = anchorPoint\n        .subtract(poly.pathOffset)\n        .transform(poly.calcOwnMatrix()),\n      actionPerformed = fn(eventData, { ...transform, pointIndex }, x, y);\n\n    const newAnchorPointInParentPlane = anchorPoint\n      .subtract(poly.pathOffset)\n      .transform(poly.calcOwnMatrix());\n\n    const diff = newAnchorPointInParentPlane.subtract(anchorPointInParentPlane);\n    poly.left -= diff.x;\n    poly.top -= diff.y;\n\n    return actionPerformed;\n  };\n};\n\nexport const createPolyActionHandler = (pointIndex: number) =>\n  wrapWithFireEvent(\n    ACTION_NAME,\n    factoryPolyActionHandler(pointIndex, polyActionHandler),\n  );\n\nexport function createPolyControls(\n  poly: Polyline,\n  options?: Partial<Control>,\n): Record<string, Control>;\nexport function createPolyControls(\n  numOfControls: number,\n  options?: Partial<Control>,\n): Record<string, Control>;\nexport function createPolyControls(\n  arg0: number | Polyline,\n  options: Partial<Control> = {},\n) {\n  const controls = {} as Record<string, Control>;\n  for (\n    let idx = 0;\n    idx < (typeof arg0 === 'number' ? arg0 : arg0.points.length);\n    idx++\n  ) {\n    controls[`p${idx}`] = new Control({\n      actionName: ACTION_NAME,\n      positionHandler: createPolyPositionHandler(idx),\n      actionHandler: createPolyActionHandler(idx),\n      ...options,\n    });\n  }\n  return controls;\n}\n","import { Point } from '../Point';\nimport { Control } from './Control';\nimport type { TMat2D } from '../typedefs';\nimport type { Path } from '../shapes/Path';\nimport { multiplyTransformMatrices } from '../util/misc/matrix';\nimport type {\n  TModificationEvents,\n  TPointerEvent,\n  Transform,\n} from '../EventTypeDefs';\nimport { sendPointToPlane } from '../util/misc/planeChange';\nimport type { TSimpleParseCommandType } from '../util/path/typedefs';\nimport type { ControlRenderingStyleOverride } from './controlRendering';\nimport { fireEvent } from './fireEvent';\nimport { commonEventInfo } from './util';\n\nconst ACTION_NAME: TModificationEvents = 'modifyPath' as const;\n\ntype TTransformAnchor = Transform;\n\nexport type PathPointControlStyle = {\n  controlFill?: string;\n  controlStroke?: string;\n  connectionDashArray?: number[];\n};\n\nconst calcPathPointPosition = (\n  pathObject: Path,\n  commandIndex: number,\n  pointIndex: number,\n) => {\n  const { path, pathOffset } = pathObject;\n  const command = path[commandIndex];\n  return new Point(\n    (command[pointIndex] as number) - pathOffset.x,\n    (command[pointIndex + 1] as number) - pathOffset.y,\n  ).transform(\n    multiplyTransformMatrices(\n      pathObject.getViewportTransform(),\n      pathObject.calcTransformMatrix(),\n    ),\n  );\n};\n\nconst movePathPoint = (\n  pathObject: Path,\n  x: number,\n  y: number,\n  commandIndex: number,\n  pointIndex: number,\n) => {\n  const { path, pathOffset } = pathObject;\n\n  const anchorCommand =\n    path[(commandIndex > 0 ? commandIndex : path.length) - 1];\n  const anchorPoint = new Point(\n    anchorCommand[pointIndex] as number,\n    anchorCommand[pointIndex + 1] as number,\n  );\n\n  const anchorPointInParentPlane = anchorPoint\n    .subtract(pathOffset)\n    .transform(pathObject.calcOwnMatrix());\n\n  const mouseLocalPosition = sendPointToPlane(\n    new Point(x, y),\n    undefined,\n    pathObject.calcOwnMatrix(),\n  );\n\n  path[commandIndex][pointIndex] = mouseLocalPosition.x + pathOffset.x;\n  path[commandIndex][pointIndex + 1] = mouseLocalPosition.y + pathOffset.y;\n  pathObject.setDimensions();\n\n  const newAnchorPointInParentPlane = anchorPoint\n    .subtract(pathObject.pathOffset)\n    .transform(pathObject.calcOwnMatrix());\n\n  const diff = newAnchorPointInParentPlane.subtract(anchorPointInParentPlane);\n  pathObject.left -= diff.x;\n  pathObject.top -= diff.y;\n  pathObject.set('dirty', true);\n  return true;\n};\n\n/**\n * This function locates the controls.\n * It'll be used both for drawing and for interaction.\n */\nfunction pathPositionHandler(\n  this: PathPointControl,\n  dim: Point,\n  finalMatrix: TMat2D,\n  pathObject: Path,\n) {\n  const { commandIndex, pointIndex } = this;\n  return calcPathPointPosition(pathObject, commandIndex, pointIndex);\n}\n\n/**\n * This function defines what the control does.\n * It'll be called on every mouse move after a control has been clicked and is being dragged.\n * The function receives as argument the mouse event, the current transform object\n * and the current position in canvas coordinate `transform.target` is a reference to the\n * current object being transformed.\n */\nfunction pathActionHandler(\n  this: PathPointControl,\n  eventData: TPointerEvent,\n  transform: TTransformAnchor,\n  x: number,\n  y: number,\n) {\n  const { target } = transform;\n  const { commandIndex, pointIndex } = this;\n  const actionPerformed = movePathPoint(\n    target as Path,\n    x,\n    y,\n    commandIndex,\n    pointIndex,\n  );\n  if (actionPerformed) {\n    fireEvent(this.actionName as TModificationEvents, {\n      ...commonEventInfo(eventData, transform, x, y),\n      commandIndex,\n      pointIndex,\n    });\n  }\n  return actionPerformed;\n}\n\nconst indexFromPrevCommand = (previousCommandType: TSimpleParseCommandType) =>\n  previousCommandType === 'C' ? 5 : previousCommandType === 'Q' ? 3 : 1;\n\nclass PathPointControl extends Control {\n  declare commandIndex: number;\n  declare pointIndex: number;\n  declare controlFill: string;\n  declare controlStroke: string;\n  constructor(options?: Partial<PathPointControl>) {\n    super(options);\n  }\n\n  render(\n    ctx: CanvasRenderingContext2D,\n    left: number,\n    top: number,\n    styleOverride: ControlRenderingStyleOverride | undefined,\n    fabricObject: Path,\n  ) {\n    const overrides: ControlRenderingStyleOverride = {\n      ...styleOverride,\n      cornerColor: this.controlFill,\n      cornerStrokeColor: this.controlStroke,\n      transparentCorners: !this.controlFill,\n    };\n    super.render(ctx, left, top, overrides, fabricObject);\n  }\n}\n\nclass PathControlPointControl extends PathPointControl {\n  declare connectionDashArray?: number[];\n  declare connectToCommandIndex: number;\n  declare connectToPointIndex: number;\n  constructor(options?: Partial<PathControlPointControl>) {\n    super(options);\n  }\n\n  render(\n    this: PathControlPointControl,\n    ctx: CanvasRenderingContext2D,\n    left: number,\n    top: number,\n    styleOverride: ControlRenderingStyleOverride | undefined,\n    fabricObject: Path,\n  ) {\n    const { path } = fabricObject;\n    const {\n      commandIndex,\n      pointIndex,\n      connectToCommandIndex,\n      connectToPointIndex,\n    } = this;\n    ctx.save();\n    ctx.strokeStyle = this.controlStroke;\n    if (this.connectionDashArray) {\n      ctx.setLineDash(this.connectionDashArray);\n    }\n    const [commandType] = path[commandIndex];\n    const point = calcPathPointPosition(\n      fabricObject,\n      connectToCommandIndex,\n      connectToPointIndex,\n    );\n\n    if (commandType === 'Q') {\n      // one control point connects to 2 points\n      const point2 = calcPathPointPosition(\n        fabricObject,\n        commandIndex,\n        pointIndex + 2,\n      );\n      ctx.moveTo(point2.x, point2.y);\n      ctx.lineTo(left, top);\n    } else {\n      ctx.moveTo(left, top);\n    }\n    ctx.lineTo(point.x, point.y);\n    ctx.stroke();\n    ctx.restore();\n\n    super.render(ctx, left, top, styleOverride, fabricObject);\n  }\n}\n\nconst createControl = (\n  commandIndexPos: number,\n  pointIndexPos: number,\n  isControlPoint: boolean,\n  options: Partial<Control> & {\n    controlPointStyle?: PathPointControlStyle;\n    pointStyle?: PathPointControlStyle;\n  },\n  connectToCommandIndex?: number,\n  connectToPointIndex?: number,\n) =>\n  new (isControlPoint ? PathControlPointControl : PathPointControl)({\n    commandIndex: commandIndexPos,\n    pointIndex: pointIndexPos,\n    actionName: ACTION_NAME,\n    positionHandler: pathPositionHandler,\n    actionHandler: pathActionHandler,\n    connectToCommandIndex,\n    connectToPointIndex,\n    ...options,\n    ...(isControlPoint ? options.controlPointStyle : options.pointStyle),\n  } as Partial<PathControlPointControl>);\n\nexport function createPathControls(\n  path: Path,\n  options: Partial<Control> & {\n    controlPointStyle?: PathPointControlStyle;\n    pointStyle?: PathPointControlStyle;\n  } = {},\n): Record<string, Control> {\n  const controls = {} as Record<string, Control>;\n  let previousCommandType: TSimpleParseCommandType = 'M';\n  path.path.forEach((command, commandIndex) => {\n    const commandType = command[0];\n\n    if (commandType !== 'Z') {\n      controls[`c_${commandIndex}_${commandType}`] = createControl(\n        commandIndex,\n        command.length - 2,\n        false,\n        options,\n      );\n    }\n    switch (commandType) {\n      case 'C':\n        controls[`c_${commandIndex}_C_CP_1`] = createControl(\n          commandIndex,\n          1,\n          true,\n          options,\n          commandIndex - 1,\n          indexFromPrevCommand(previousCommandType),\n        );\n        controls[`c_${commandIndex}_C_CP_2`] = createControl(\n          commandIndex,\n          3,\n          true,\n          options,\n          commandIndex,\n          5,\n        );\n        break;\n      case 'Q':\n        controls[`c_${commandIndex}_Q_CP_1`] = createControl(\n          commandIndex,\n          1,\n          true,\n          options,\n          commandIndex,\n          3,\n        );\n        break;\n    }\n    previousCommandType = commandType;\n  });\n  return controls;\n}\n","import { getFabricWindow } from '../env';\nimport { createCanvasElement, createCanvasElementFor } from '../util/misc/dom';\nimport { WebGLFilterBackend } from './WebGLFilterBackend';\nimport type { TWebGLPipelineState, T2DPipelineState } from './typedefs';\n\nexport const isWebGLPipelineState = (\n  options: TWebGLPipelineState | T2DPipelineState,\n): options is TWebGLPipelineState => {\n  return (options as TWebGLPipelineState).webgl !== undefined;\n};\n\n/**\n * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n * drawImage should be faster, but is also bugged for a small combination of old hardware\n * and drivers.\n * putImageData is faster than drawImage for that specific operation.\n */\nexport const isPutImageFaster = (width: number, height: number): boolean => {\n  const targetCanvas = createCanvasElementFor({ width, height });\n  const sourceCanvas = createCanvasElement();\n  const gl = sourceCanvas.getContext('webgl')!;\n  // eslint-disable-next-line no-undef\n  const imageBuffer = new ArrayBuffer(width * height * 4);\n\n  const testContext = {\n    imageBuffer: imageBuffer,\n  } as unknown as Required<WebGLFilterBackend>;\n  const testPipelineState = {\n    destinationWidth: width,\n    destinationHeight: height,\n    targetCanvas: targetCanvas,\n  } as unknown as TWebGLPipelineState;\n  let startTime;\n\n  startTime = getFabricWindow().performance.now();\n  WebGLFilterBackend.prototype.copyGLTo2D.call(\n    testContext,\n    gl,\n    testPipelineState,\n  );\n  const drawImageTime = getFabricWindow().performance.now() - startTime;\n\n  startTime = getFabricWindow().performance.now();\n  WebGLFilterBackend.prototype.copyGLTo2DPutImageData.call(\n    testContext,\n    gl,\n    testPipelineState,\n  );\n  const putImageDataTime = getFabricWindow().performance.now() - startTime;\n\n  return drawImageTime > putImageDataTime;\n};\n","export const highPsourceCode = `precision highp float`;\n\nexport const identityFragmentShader = `\n    ${highPsourceCode};\n    varying vec2 vTexCoord;\n    uniform sampler2D uTexture;\n    void main() {\n      gl_FragColor = texture2D(uTexture, vTexCoord);\n    }`;\n\nexport const vertexSource = `\n    attribute vec2 aPosition;\n    varying vec2 vTexCoord;\n    void main() {\n      vTexCoord = aPosition;\n      gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\n    }`;\n","import { getEnv } from '../env';\nimport type {\n  T2DPipelineState,\n  TWebGLAttributeLocationMap,\n  TWebGLPipelineState,\n  TWebGLProgramCacheItem,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport {\n  highPsourceCode,\n  identityFragmentShader,\n  vertexSource,\n} from './shaders/baseFilter';\nimport type { Abortable } from '../typedefs';\nimport { FabricError } from '../util/internals/console';\nimport { createCanvasElementFor } from '../util/misc/dom';\n\nconst regex = new RegExp(highPsourceCode, 'g');\n\nexport class BaseFilter<\n  Name extends string,\n  OwnProps extends Record<string, any> = object,\n  SerializedProps extends Record<string, any> = OwnProps,\n> {\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  get type(): Name {\n    return (this.constructor as typeof BaseFilter).type as Name;\n  }\n\n  /**\n   * The class type. Used to identify which class this is.\n   * This is used for serialization purposes and internally it can be used\n   * to identify classes. As a developer you could use `instance of Class`\n   * but to avoid importing all the code and blocking tree shaking we try\n   * to avoid doing that.\n   */\n  static type = 'BaseFilter';\n\n  /**\n   * Contains the uniform locations for the fragment shader.\n   * uStepW and uStepH are handled by the BaseFilter, each filter class\n   * needs to specify all the one that are needed\n   */\n  static uniformLocations: string[] = [];\n\n  declare static defaults: Record<string, unknown>;\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor({\n    type,\n    ...options\n  }: { type?: never } & Partial<OwnProps> & Record<string, any> = {}) {\n    Object.assign(\n      this,\n      (this.constructor as typeof BaseFilter).defaults,\n      options,\n    );\n  }\n\n  protected getFragmentSource(): string {\n    return identityFragmentShader;\n  }\n\n  getVertexSource(): string {\n    return vertexSource;\n  }\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram(\n    gl: WebGLRenderingContext,\n    fragmentSource: string = this.getFragmentSource(),\n    vertexSource: string = this.getVertexSource(),\n  ) {\n    const {\n      WebGLProbe: { GLPrecision = 'highp' },\n    } = getEnv();\n    if (GLPrecision !== 'highp') {\n      fragmentSource = fragmentSource.replace(\n        regex,\n        highPsourceCode.replace('highp', GLPrecision),\n      );\n    }\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    const program = gl.createProgram();\n\n    if (!vertexShader || !fragmentShader || !program) {\n      throw new FabricError(\n        'Vertex, fragment shader or program creation error',\n      );\n    }\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new FabricError(\n        `Vertex shader compile error for ${this.type}: ${gl.getShaderInfoLog(\n          vertexShader,\n        )}`,\n      );\n    }\n\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new FabricError(\n        `Fragment shader compile error for ${this.type}: ${gl.getShaderInfoLog(\n          fragmentShader,\n        )}`,\n      );\n    }\n\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new FabricError(\n        `Shader link error for \"${this.type}\" ${gl.getProgramInfoLog(program)}`,\n      );\n    }\n\n    const uniformLocations = this.getUniformLocations(gl, program) || {};\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n\n    return {\n      program,\n      attributeLocations: this.getAttributeLocations(gl, program),\n      uniformLocations,\n    };\n  }\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram,\n  ): TWebGLAttributeLocationMap {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\n    };\n  }\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram,\n  ): TWebGLUniformLocationMap {\n    const locations = (this.constructor as unknown as typeof BaseFilter<string>)\n      .uniformLocations;\n\n    const uniformLocations: Record<string, WebGLUniformLocation | null> = {};\n    for (let i = 0; i < locations.length; i++) {\n      uniformLocations[locations[i]] = gl.getUniformLocation(\n        program,\n        locations[i],\n      );\n    }\n    return uniformLocations;\n  }\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData(\n    gl: WebGLRenderingContext,\n    attributeLocations: Record<string, number>,\n    aPositionData: Float32Array,\n  ) {\n    const attributeLocation = attributeLocations.aPosition;\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  }\n\n  _setupFrameBuffer(options: TWebGLPipelineState) {\n    const gl = options.context;\n    if (options.passes > 1) {\n      const width = options.destinationWidth;\n      const height = options.destinationHeight;\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(\n          gl,\n          width,\n          height,\n        );\n      }\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        options.targetTexture,\n        0,\n      );\n    } else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  }\n\n  _swapTextures(options: TWebGLPipelineState) {\n    options.passes--;\n    options.pass++;\n    const temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  }\n\n  /**\n   * Generic isNeutral implementation for one parameter based filters.\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )\n   * @param {Object} options\n   **/\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  isNeutralState(options?: any): boolean {\n    return false;\n  }\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      this._setupFrameBuffer(options);\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    } else {\n      this.applyTo2d(options);\n    }\n  }\n\n  applyTo2d(_options: T2DPipelineState): void {\n    // override by subclass\n  }\n\n  /**\n   * Returns a string that represent the current selected shader code for the filter.\n   * Used to force recompilation when parameters change or to retrieve the shader from cache\n   * @type string\n   **/\n  getCacheKey(): string {\n    return this.type;\n  }\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   * @return {WebGLProgram} the compiled program shader\n   */\n  retrieveShader(options: TWebGLPipelineState): TWebGLProgramCacheItem {\n    const key = this.getCacheKey();\n    if (!options.programCache[key]) {\n      options.programCache[key] = this.createProgram(options.context);\n    }\n    return options.programCache[key];\n  }\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL(options: TWebGLPipelineState) {\n    const gl = options.context;\n    const shader = this.retrieveShader(options);\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    } else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  bindAdditionalTexture(\n    gl: WebGLRenderingContext,\n    texture: WebGLTexture,\n    textureUnit: number,\n  ) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // reset active texture to 0 as usual\n    gl.activeTexture(gl.TEXTURE0);\n  }\n\n  unbindAdditionalTexture(gl: WebGLRenderingContext, textureUnit: number) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  }\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} _gl The canvas context used to compile the shader program.\n   * @param {Object} _uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData(\n    _gl: WebGLRenderingContext,\n    _uniformLocations: TWebGLUniformLocationMap,\n  ): void {\n    // override by subclass\n  }\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer(options: T2DPipelineState) {\n    if (!options.helpLayer) {\n      const { sourceWidth, sourceHeight } = options;\n      const helpLayer = createCanvasElementFor({\n        width: sourceWidth,\n        height: sourceHeight,\n      });\n      options.helpLayer = helpLayer;\n    }\n  }\n\n  /**\n   * Returns object representation of an instance\n   * It will automatically export the default values of a filter,\n   * stored in the static defaults property.\n   * @return {Object} Object representation of an instance\n   */\n  toObject(): { type: Name } & SerializedProps {\n    const defaultKeys = Object.keys(\n      (this.constructor as typeof BaseFilter).defaults || {},\n    ) as (keyof SerializedProps)[];\n\n    return {\n      type: this.type,\n      ...defaultKeys.reduce<SerializedProps>((acc, key) => {\n        acc[key] = this[\n          key as keyof this\n        ] as unknown as (typeof acc)[typeof key];\n        return acc;\n      }, {} as SerializedProps),\n    };\n  }\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON() {\n    // delegate, not alias\n    return this.toObject();\n  }\n\n  static async fromObject(\n    { type, ...filterOptions }: Record<string, any>,\n    _options: Abortable,\n  ): Promise<BaseFilter<string, object>> {\n    return new this(filterOptions);\n  }\n}\n","export const blendColorFragmentSource = {\n  multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\n  screen:\n    'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\n  add: 'gl_FragColor.rgb += uColor.rgb;\\n',\n  difference: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\n  subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\n  lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\n  darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\n  exclusion:\n    'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\n  overlay: `\n    if (uColor.r < 0.5) {\n      gl_FragColor.r *= 2.0 * uColor.r;\n    } else {\n      gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\n    }\n    if (uColor.g < 0.5) {\n      gl_FragColor.g *= 2.0 * uColor.g;\n    } else {\n      gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\n    }\n    if (uColor.b < 0.5) {\n      gl_FragColor.b *= 2.0 * uColor.b;\n    } else {\n      gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\n    }\n    `,\n  tint: `\n    gl_FragColor.rgb *= (1.0 - uColor.a);\n    gl_FragColor.rgb += uColor.rgb;\n    `,\n} as const;\n","import { Color } from '../color/Color';\nimport { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { blendColorFragmentSource } from './shaders/blendColor';\n\nexport type TBlendMode =\n  | 'multiply'\n  | 'add'\n  | 'difference'\n  | 'screen'\n  | 'subtract'\n  | 'darken'\n  | 'lighten'\n  | 'overlay'\n  | 'exclusion'\n  | 'tint';\n\ntype BlendColorOwnProps = {\n  color: string;\n  mode: TBlendMode;\n  alpha: number;\n};\n\nexport const blendColorDefaultValues: BlendColorOwnProps = {\n  color: '#F95C63',\n  mode: 'multiply',\n  alpha: 1,\n};\n\n/**\n * Color Blend filter class\n * @example\n * const filter = new BlendColor({\n *  color: '#000',\n *  mode: 'multiply'\n * });\n *\n * const filter = new BlendImage({\n *  image: fabricImageObject,\n *  mode: 'multiply'\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class BlendColor extends BaseFilter<'BlendColor', BlendColorOwnProps> {\n  /**\n   * Color to make the blend operation with. default to a reddish color since black or white\n   * gives always strong result.\n   * @type String\n   * @default\n   **/\n  declare color: BlendColorOwnProps['color'];\n\n  /**\n   * Blend mode for the filter: one of multiply, add, difference, screen, subtract,\n   * darken, lighten, overlay, exclusion, tint.\n   * @type String\n   * @default\n   **/\n  declare mode: BlendColorOwnProps['mode'];\n  /**\n   * alpha value. represent the strength of the blend color operation.\n   * @type Number\n   * @default\n   **/\n  declare alpha: BlendColorOwnProps['alpha'];\n\n  static defaults = blendColorDefaultValues;\n\n  static type = 'BlendColor';\n\n  static uniformLocations = ['uColor'];\n\n  getCacheKey() {\n    return `${this.type}_${this.mode}`;\n  }\n\n  protected getFragmentSource(): string {\n    return `\n      precision highp float;\n      uniform sampler2D uTexture;\n      uniform vec4 uColor;\n      varying vec2 vTexCoord;\n      void main() {\n        vec4 color = texture2D(uTexture, vTexCoord);\n        gl_FragColor = color;\n        if (color.a > 0.0) {\n          ${blendColorFragmentSource[this.mode]}\n        }\n      }\n      `;\n  }\n\n  /**\n   * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const source = new Color(this.color).getSource();\n    const alpha = this.alpha;\n    const tr = source[0] * alpha;\n    const tg = source[1] * alpha;\n    const tb = source[2] * alpha;\n    const alpha1 = 1 - alpha;\n\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      let oR, oG, oB;\n      switch (this.mode) {\n        case 'multiply':\n          oR = (r * tr) / 255;\n          oG = (g * tg) / 255;\n          oB = (b * tb) / 255;\n          break;\n        case 'screen':\n          oR = 255 - ((255 - r) * (255 - tr)) / 255;\n          oG = 255 - ((255 - g) * (255 - tg)) / 255;\n          oB = 255 - ((255 - b) * (255 - tb)) / 255;\n          break;\n        case 'add':\n          oR = r + tr;\n          oG = g + tg;\n          oB = b + tb;\n          break;\n        case 'difference':\n          oR = Math.abs(r - tr);\n          oG = Math.abs(g - tg);\n          oB = Math.abs(b - tb);\n          break;\n        case 'subtract':\n          oR = r - tr;\n          oG = g - tg;\n          oB = b - tb;\n          break;\n        case 'darken':\n          oR = Math.min(r, tr);\n          oG = Math.min(g, tg);\n          oB = Math.min(b, tb);\n          break;\n        case 'lighten':\n          oR = Math.max(r, tr);\n          oG = Math.max(g, tg);\n          oB = Math.max(b, tb);\n          break;\n        case 'overlay':\n          oR =\n            tr < 128\n              ? (2 * r * tr) / 255\n              : 255 - (2 * (255 - r) * (255 - tr)) / 255;\n          oG =\n            tg < 128\n              ? (2 * g * tg) / 255\n              : 255 - (2 * (255 - g) * (255 - tg)) / 255;\n          oB =\n            tb < 128\n              ? (2 * b * tb) / 255\n              : 255 - (2 * (255 - b) * (255 - tb)) / 255;\n          break;\n        case 'exclusion':\n          oR = tr + r - (2 * tr * r) / 255;\n          oG = tg + g - (2 * tg * g) / 255;\n          oB = tb + b - (2 * tb * b) / 255;\n          break;\n        case 'tint':\n          oR = tr + r * alpha1;\n          oG = tg + g * alpha1;\n          oB = tb + b * alpha1;\n      }\n      data[i] = oR;\n      data[i + 1] = oG;\n      data[i + 2] = oB;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const source = new Color(this.color).getSource();\n    source[0] = (this.alpha * source[0]) / 255;\n    source[1] = (this.alpha * source[1]) / 255;\n    source[2] = (this.alpha * source[2]) / 255;\n    source[3] = this.alpha;\n    gl.uniform4fv(uniformLocations.uColor, source);\n  }\n}\n\nclassRegistry.setClass(BlendColor);\n","import type { TBlendImageMode } from '../BlendImage';\n\nexport const fragmentSource: Record<TBlendImageMode, string> = {\n  multiply: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform sampler2D uImage;\n    uniform vec4 uColor;\n    varying vec2 vTexCoord;\n    varying vec2 vTexCoord2;\n    void main() {\n      vec4 color = texture2D(uTexture, vTexCoord);\n      vec4 color2 = texture2D(uImage, vTexCoord2);\n      color.rgba *= color2.rgba;\n      gl_FragColor = color;\n    }\n    `,\n  mask: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform sampler2D uImage;\n    uniform vec4 uColor;\n    varying vec2 vTexCoord;\n    varying vec2 vTexCoord2;\n    void main() {\n      vec4 color = texture2D(uTexture, vTexCoord);\n      vec4 color2 = texture2D(uImage, vTexCoord2);\n      color.a = color2.a;\n      gl_FragColor = color;\n    }\n    `,\n} as const;\n\nexport const vertexSource = `\n    attribute vec2 aPosition;\n    varying vec2 vTexCoord;\n    varying vec2 vTexCoord2;\n    uniform mat3 uTransformMatrix;\n    void main() {\n      vTexCoord = aPosition;\n      vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\n      gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\n    }\n    ` as const;\n","import { FabricImage } from '../shapes/Image';\nimport { createCanvasElement } from '../util/misc/dom';\nimport { BaseFilter } from './BaseFilter';\nimport type {\n  T2DPipelineState,\n  TWebGLPipelineState,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport type { WebGLFilterBackend } from './WebGLFilterBackend';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource, vertexSource } from './shaders/blendImage';\n\nexport type TBlendImageMode = 'multiply' | 'mask';\n\ntype BlendImageOwnProps = {\n  mode: TBlendImageMode;\n  alpha: number;\n};\n\nexport const blendImageDefaultValues: BlendImageOwnProps = {\n  mode: 'multiply',\n  alpha: 1,\n};\n\n/**\n * Image Blend filter class\n * @example\n * const filter = new filters.BlendColor({\n *  color: '#000',\n *  mode: 'multiply'\n * });\n *\n * const filter = new BlendImage({\n *  image: fabricImageObject,\n *  mode: 'multiply'\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class BlendImage extends BaseFilter<'BlendImage', BlendImageOwnProps> {\n  /**\n   * Image to make the blend operation with.\n   **/\n  declare image: FabricImage;\n\n  /**\n   * Blend mode for the filter: either 'multiply' or 'mask'. 'multiply' will\n   * multiply the values of each channel (R, G, B, and A) of the filter image by\n   * their corresponding values in the base image. 'mask' will only look at the\n   * alpha channel of the filter image, and apply those values to the base\n   * image's alpha channel.\n   * @type String\n   * @default\n   **/\n  declare mode: BlendImageOwnProps['mode'];\n\n  /**\n   * alpha value. represent the strength of the blend image operation.\n   * not implemented.\n   **/\n  declare alpha: BlendImageOwnProps['alpha'];\n\n  static type = 'BlendImage';\n\n  static defaults = blendImageDefaultValues;\n\n  static uniformLocations = ['uTransformMatrix', 'uImage'];\n\n  getCacheKey() {\n    return `${this.type}_${this.mode}`;\n  }\n\n  getFragmentSource(): string {\n    return fragmentSource[this.mode];\n  }\n\n  getVertexSource(): string {\n    return vertexSource;\n  }\n\n  applyToWebGL(options: TWebGLPipelineState) {\n    const gl = options.context,\n      texture = this.createTexture(options.filterBackend, this.image);\n    this.bindAdditionalTexture(gl, texture!, gl.TEXTURE1);\n    super.applyToWebGL(options);\n    this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n  }\n\n  createTexture(backend: WebGLFilterBackend, image: FabricImage) {\n    return backend.getCachedTexture(image.cacheKey, image.getElement());\n  }\n\n  /**\n   * Calculate a transformMatrix to adapt the image to blend over\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  calculateMatrix() {\n    const image = this.image,\n      { width, height } = image.getElement();\n    return [\n      1 / image.scaleX,\n      0,\n      0,\n      0,\n      1 / image.scaleY,\n      0,\n      -image.left / width,\n      -image.top / height,\n      1,\n    ];\n  }\n\n  /**\n   * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({\n    imageData: { data, width, height },\n    filterBackend: { resources },\n  }: T2DPipelineState) {\n    const image = this.image;\n    if (!resources.blendImage) {\n      resources.blendImage = createCanvasElement();\n    }\n    const canvas1 = resources.blendImage;\n    const context = canvas1.getContext('2d')!;\n    if (canvas1.width !== width || canvas1.height !== height) {\n      canvas1.width = width;\n      canvas1.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n    context.setTransform(\n      image.scaleX,\n      0,\n      0,\n      image.scaleY,\n      image.left,\n      image.top,\n    );\n    context.drawImage(image.getElement(), 0, 0, width, height);\n    const blendData = context.getImageData(0, 0, width, height).data;\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      const a = data[i + 3];\n\n      const tr = blendData[i];\n      const tg = blendData[i + 1];\n      const tb = blendData[i + 2];\n      const ta = blendData[i + 3];\n\n      switch (this.mode) {\n        case 'multiply':\n          data[i] = (r * tr) / 255;\n          data[i + 1] = (g * tg) / 255;\n          data[i + 2] = (b * tb) / 255;\n          data[i + 3] = (a * ta) / 255;\n          break;\n        case 'mask':\n          data[i + 3] = ta;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const matrix = this.calculateMatrix();\n    gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n    gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * TODO: Handle the possibility of missing image better.\n   * As of now a BlendImage filter without image can't be used with fromObject\n   * @return {Object} Object representation of an instance\n   */\n  toObject(): {\n    type: 'BlendImage';\n    image: ReturnType<FabricImage['toObject']>;\n  } & BlendImageOwnProps {\n    return {\n      ...super.toObject(),\n      image: this.image && this.image.toObject(),\n    };\n  }\n\n  /**\n   * Create filter instance from an object representation\n   * @static\n   * @param {object} object Object to create an instance from\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] handle aborting image loading, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<BlendImage>}\n   */\n  static async fromObject(\n    { type, image, ...filterOptions }: Record<string, any>,\n    options: { signal: AbortSignal },\n  ): Promise<BaseFilter<'BlendImage', BlendImageOwnProps>> {\n    return FabricImage.fromObject(image, options).then(\n      (enlivedImage) =>\n        new this({ ...filterOptions, image: enlivedImage }) as BlendImage,\n    );\n  }\n}\n\nclassRegistry.setClass(BlendImage);\n","import { createCanvasElement } from '../util/misc/dom';\nimport { BaseFilter } from './BaseFilter';\nimport type {\n  TWebGLPipelineState,\n  T2DPipelineState,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/blur';\n\ntype BlurOwnProps = {\n  blur: number;\n};\n\nexport const blurDefaultValues: BlurOwnProps = {\n  blur: 0,\n};\n\n/**\n * Blur filter class\n * @example\n * const filter = new Blur({\n *   blur: 0.5\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class Blur extends BaseFilter<'Blur', BlurOwnProps> {\n  /**\n   * blur value, in percentage of image dimensions.\n   * specific to keep the image blur constant at different resolutions\n   * range between 0 and 1.\n   * @type Number\n   * @default\n   */\n  declare blur: BlurOwnProps['blur'];\n\n  declare horizontal: boolean;\n  declare aspectRatio: number;\n\n  static type = 'Blur';\n\n  static defaults = blurDefaultValues;\n\n  static uniformLocations = ['uDelta'];\n\n  getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      // this aspectRatio is used to give the same blur to vertical and horizontal\n      this.aspectRatio = options.sourceWidth / options.sourceHeight;\n      options.passes++;\n      this._setupFrameBuffer(options);\n      this.horizontal = true;\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n      this._setupFrameBuffer(options);\n      this.horizontal = false;\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    } else {\n      this.applyTo2d(options);\n    }\n  }\n\n  applyTo2d(options: T2DPipelineState) {\n    options.imageData = this.simpleBlur(options);\n  }\n\n  simpleBlur({\n    ctx,\n    imageData,\n    filterBackend: { resources },\n  }: T2DPipelineState) {\n    const { width, height } = imageData;\n    if (!resources.blurLayer1) {\n      resources.blurLayer1 = createCanvasElement();\n      resources.blurLayer2 = createCanvasElement();\n    }\n    const canvas1 = resources.blurLayer1!;\n    const canvas2 = resources.blurLayer2!;\n    if (canvas1.width !== width || canvas1.height !== height) {\n      canvas2.width = canvas1.width = width;\n      canvas2.height = canvas1.height = height;\n    }\n    const ctx1 = canvas1.getContext('2d')!,\n      ctx2 = canvas2.getContext('2d')!,\n      nSamples = 15,\n      blur = this.blur * 0.06 * 0.5;\n    let random, percent, j, i;\n\n    // load first canvas\n    ctx1.putImageData(imageData, 0, 0);\n    ctx2.clearRect(0, 0, width, height);\n\n    for (i = -nSamples; i <= nSamples; i++) {\n      random = (Math.random() - 0.5) / 4;\n      percent = i / nSamples;\n      j = blur * percent * width + random;\n      ctx2.globalAlpha = 1 - Math.abs(percent);\n      ctx2.drawImage(canvas1, j, random);\n      ctx1.drawImage(canvas2, 0, 0);\n      ctx2.globalAlpha = 1;\n      ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n    }\n    for (i = -nSamples; i <= nSamples; i++) {\n      random = (Math.random() - 0.5) / 4;\n      percent = i / nSamples;\n      j = blur * percent * height + random;\n      ctx2.globalAlpha = 1 - Math.abs(percent);\n      ctx2.drawImage(canvas1, random, j);\n      ctx1.drawImage(canvas2, 0, 0);\n      ctx2.globalAlpha = 1;\n      ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n    }\n    ctx.drawImage(canvas1, 0, 0);\n    const newImageData = ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n    ctx1.globalAlpha = 1;\n    ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n    return newImageData;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const delta = this.chooseRightDelta();\n    gl.uniform2fv(uniformLocations.uDelta, delta);\n  }\n\n  isNeutralState() {\n    return this.blur === 0;\n  }\n\n  /**\n   * choose right value of image percentage to blur with\n   * @returns {Array} a numeric array with delta values\n   */\n  chooseRightDelta() {\n    let blurScale = 1;\n    const delta = [0, 0];\n    if (this.horizontal) {\n      if (this.aspectRatio > 1) {\n        // image is wide, i want to shrink radius horizontal\n        blurScale = 1 / this.aspectRatio;\n      }\n    } else {\n      if (this.aspectRatio < 1) {\n        // image is tall, i want to shrink radius vertical\n        blurScale = this.aspectRatio;\n      }\n    }\n    const blur = blurScale * this.blur * 0.12;\n    if (this.horizontal) {\n      delta[0] = blur;\n    } else {\n      delta[1] = blur;\n    }\n    return delta;\n  }\n}\n\nclassRegistry.setClass(Blur);\n","export const fragmentSource = `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform vec2 uDelta;\n    varying vec2 vTexCoord;\n    const float nSamples = 15.0;\n    vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\n    float random(vec3 scale) {\n      /* use the fragment position for a different seed per-pixel */\n      return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\n    }\n    void main() {\n      vec4 color = vec4(0.0);\n      float total = 0.0;\n      float offset = random(v3offset);\n      for (float t = -nSamples; t <= nSamples; t++) {\n        float percent = (t + offset - 0.5) / nSamples;\n        float weight = 1.0 - abs(percent);\n        color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\n        total += weight;\n      }\n      gl_FragColor = color / total;\n    }\n  ` as const;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/brightness';\n\ntype BrightnessOwnProps = {\n  brightness: number;\n};\n\nexport const brightnessDefaultValues: BrightnessOwnProps = {\n  brightness: 0,\n};\n\n/**\n * Brightness filter class\n * @example\n * const filter = new Brightness({\n *   brightness: 0.05\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Brightness extends BaseFilter<'Brightness', BrightnessOwnProps> {\n  /**\n   * Brightness value, from -1 to 1.\n   * translated to -255 to 255 for 2d\n   * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n   * @param {Number} brightness\n   * @default\n   */\n  declare brightness: BrightnessOwnProps['brightness'];\n\n  static type = 'Brightness';\n\n  static defaults = brightnessDefaultValues;\n\n  static uniformLocations = ['uBrightness'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const brightness = Math.round(this.brightness * 255);\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] += brightness;\n      data[i + 1] += brightness;\n      data[i + 2] += brightness;\n    }\n  }\n\n  isNeutralState() {\n    return this.brightness === 0;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n  }\n}\n\nclassRegistry.setClass(Brightness);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uBrightness;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    color.rgb += uBrightness;\n    gl_FragColor = color;\n  }\n`;\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  varying vec2 vTexCoord;\n  uniform mat4 uColorMatrix;\n  uniform vec4 uConstants;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    color *= uColorMatrix;\n    color += uConstants;\n    gl_FragColor = color;\n  }`;\n","import { BaseFilter } from './BaseFilter';\nimport type {\n  T2DPipelineState,\n  TMatColorMatrix,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/colorMatrix';\n\nexport type ColorMatrixOwnProps = {\n  matrix: TMatColorMatrix;\n  colorsOnly: boolean;\n};\n\nexport const colorMatrixDefaultValues: ColorMatrixOwnProps = {\n  matrix: [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],\n  colorsOnly: true,\n};\n\n/**\n   * Color Matrix filter class\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl demo}\n   * @example <caption>Kodachrome filter</caption>\n   * const filter = new ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\nexport class ColorMatrix<\n  Name extends string = 'ColorMatrix',\n  OwnProps extends object = ColorMatrixOwnProps,\n  SerializedProps extends object = ColorMatrixOwnProps,\n> extends BaseFilter<Name, OwnProps, SerializedProps> {\n  /**\n   * Colormatrix for pixels.\n   * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n   * outside the -1, 1 range.\n   * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n   * @param {Array} matrix array of 20 numbers.\n   * @default\n   */\n  declare matrix: ColorMatrixOwnProps['matrix'];\n\n  /**\n   * Lock the colormatrix on the color part, skipping alpha, mainly for non webgl scenario\n   * to save some calculation\n   * @type Boolean\n   * @default true\n   */\n  declare colorsOnly: ColorMatrixOwnProps['colorsOnly'];\n\n  static type = 'ColorMatrix';\n\n  static defaults = colorMatrixDefaultValues;\n\n  static uniformLocations = ['uColorMatrix', 'uConstants'];\n\n  getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d(options: T2DPipelineState) {\n    const imageData = options.imageData,\n      data = imageData.data,\n      m = this.matrix,\n      colorsOnly = this.colorsOnly;\n\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n\n      data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n      data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n      data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n      if (!colorsOnly) {\n        const a = data[i + 3];\n        data[i] += a * m[3];\n        data[i + 1] += a * m[8];\n        data[i + 2] += a * m[13];\n        data[i + 3] =\n          r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n      }\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const m = this.matrix,\n      matrix = [\n        m[0],\n        m[1],\n        m[2],\n        m[3],\n        m[5],\n        m[6],\n        m[7],\n        m[8],\n        m[10],\n        m[11],\n        m[12],\n        m[13],\n        m[15],\n        m[16],\n        m[17],\n        m[18],\n      ],\n      constants = [m[4], m[9], m[14], m[19]];\n    gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n    gl.uniform4fv(uniformLocations.uConstants, constants);\n  }\n\n  toObject(): { type: Name } & SerializedProps {\n    return {\n      ...super.toObject(),\n      matrix: [...this.matrix] as TMatColorMatrix,\n    };\n  }\n}\n\nclassRegistry.setClass(ColorMatrix);\n","import { ColorMatrix } from './ColorMatrix';\nimport { classRegistry } from '../ClassRegistry';\nimport type { TMatColorMatrix } from './typedefs';\n\ntype FixedFiltersOwnProps = {\n  colorsOnly: boolean;\n};\n\nexport function createColorMatrixFilter(key: string, matrix: TMatColorMatrix) {\n  const newClass = class extends ColorMatrix<\n    typeof key,\n    FixedFiltersOwnProps,\n    FixedFiltersOwnProps\n  > {\n    static type = key;\n\n    static defaults = {\n      colorsOnly: false,\n      matrix,\n    };\n\n    toObject(): { type: string } & FixedFiltersOwnProps {\n      return { type: this.type, colorsOnly: this.colorsOnly };\n    }\n  };\n  classRegistry.setClass(newClass, key);\n  return newClass as typeof ColorMatrix<typeof key, FixedFiltersOwnProps>;\n}\n\nexport const Brownie = createColorMatrixFilter(\n  'Brownie',\n  [\n    0.5997, 0.34553, -0.27082, 0, 0.186, -0.0377, 0.86095, 0.15059, 0, -0.1449,\n    0.24113, -0.07441, 0.44972, 0, -0.02965, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Vintage = createColorMatrixFilter(\n  'Vintage',\n  [\n    0.62793, 0.32021, -0.03965, 0, 0.03784, 0.02578, 0.64411, 0.03259, 0,\n    0.02926, 0.0466, -0.08512, 0.52416, 0, 0.02023, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Kodachrome = createColorMatrixFilter(\n  'Kodachrome',\n  [\n    1.12855, -0.39673, -0.03992, 0, 0.24991, -0.16404, 1.08352, -0.05498, 0,\n    0.09698, -0.16786, -0.56034, 1.60148, 0, 0.13972, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Technicolor = createColorMatrixFilter(\n  'Technicolor',\n  [\n    1.91252, -0.85453, -0.09155, 0, 0.04624, -0.30878, 1.76589, -0.10601, 0,\n    -0.27589, -0.2311, -0.75018, 1.84759, 0, 0.12137, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Polaroid = createColorMatrixFilter(\n  'Polaroid',\n  [\n    1.438, -0.062, -0.062, 0, 0, -0.122, 1.378, -0.122, 0, 0, -0.016, -0.016,\n    1.483, 0, 0, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Sepia = createColorMatrixFilter(\n  'Sepia',\n  [\n    0.393, 0.769, 0.189, 0, 0, 0.349, 0.686, 0.168, 0, 0, 0.272, 0.534, 0.131,\n    0, 0, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const BlackWhite = createColorMatrixFilter(\n  'BlackWhite',\n  [\n    1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 0, 0, 0,\n    1, 0,\n  ],\n);\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLPipelineState } from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport { classRegistry } from '../ClassRegistry';\n\ntype ComposedOwnProps = {\n  subFilters: BaseFilter<string, object, object>[];\n};\n\ntype ComposedSerializedProps = {\n  subFilters: Record<string, unknown>[];\n};\n\n/**\n * A container class that knows how to apply a sequence of filters to an input image.\n */\nexport class Composed extends BaseFilter<\n  'Composed',\n  ComposedOwnProps,\n  ComposedSerializedProps\n> {\n  /**\n   * A non sparse array of filters to apply\n   */\n  declare subFilters: ComposedOwnProps['subFilters'];\n\n  static type = 'Composed';\n\n  constructor(\n    options: { subFilters?: BaseFilter<string, object>[] } & Record<\n      string,\n      any\n    > = {},\n  ) {\n    super(options);\n    this.subFilters = options.subFilters || [];\n  }\n\n  /**\n   * Apply this container's filters to the input image provided.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be applied.\n   */\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      options.passes += this.subFilters.length - 1;\n    }\n    this.subFilters.forEach((filter) => {\n      filter.applyTo(options);\n    });\n  }\n\n  /**\n   * Serialize this filter into JSON.\n   * @returns {Object} A JSON representation of this filter.\n   */\n  toObject() {\n    return {\n      type: this.type,\n      subFilters: this.subFilters.map((filter) => filter.toObject()),\n    };\n  }\n\n  isNeutralState() {\n    return !this.subFilters.some((filter) => !filter.isNeutralState());\n  }\n\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   * @static\n   * @param {oject} object Object to create an instance from\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] handle aborting `BlendImage` filter loading, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<Composed>}\n   */\n  static fromObject(\n    object: Record<string, any>,\n    options: { signal: AbortSignal },\n  ): Promise<Composed> {\n    return Promise.all(\n      ((object.subFilters || []) as BaseFilter<string, object>[]).map(\n        (filter) =>\n          classRegistry\n            .getClass<typeof BaseFilter>(filter.type)\n            .fromObject(filter, options),\n      ),\n    ).then(\n      (enlivedFilters) => new this({ subFilters: enlivedFilters }) as Composed,\n    );\n  }\n}\n\nclassRegistry.setClass(Composed);\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/constrast';\n\ntype ContrastOwnProps = {\n  contrast: number;\n};\n\nexport const contrastDefaultValues: ContrastOwnProps = {\n  contrast: 0,\n};\n\n/**\n * Contrast filter class\n * @example\n * const filter = new Contrast({\n *   contrast: 0.25\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Contrast extends BaseFilter<'Contrast', ContrastOwnProps> {\n  /**\n   * contrast value, range from -1 to 1.\n   * @param {Number} contrast\n   * @default 0\n   */\n  declare contrast: ContrastOwnProps['contrast'];\n\n  static type = 'Contrast';\n\n  static defaults = contrastDefaultValues;\n\n  static uniformLocations = ['uContrast'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  isNeutralState() {\n    return this.contrast === 0;\n  }\n\n  /**\n   * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const contrast = Math.floor(this.contrast * 255),\n      contrastF = (259 * (contrast + 255)) / (255 * (259 - contrast));\n\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = contrastF * (data[i] - 128) + 128;\n      data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n      data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uContrast, this.contrast);\n  }\n}\n\nclassRegistry.setClass(Contrast);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uContrast;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\n    color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\n    gl_FragColor = color;\n  }`;\n","export const fragmentSource = {\n  Convolute_3_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[9];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 3.0; h+=1.0) {\n        for (float w = 0.0; w < 3.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_3_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[9];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 3.0; h+=1.0) {\n        for (float w = 0.0; w < 3.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n  Convolute_5_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[25];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 5.0; h+=1.0) {\n        for (float w = 0.0; w < 5.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_5_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[25];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 5.0; h+=1.0) {\n        for (float w = 0.0; w < 5.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n  Convolute_7_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[49];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 7.0; h+=1.0) {\n        for (float w = 0.0; w < 7.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_7_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[49];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 7.0; h+=1.0) {\n        for (float w = 0.0; w < 7.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n  Convolute_9_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[81];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 9.0; h+=1.0) {\n        for (float w = 0.0; w < 9.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_9_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[81];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 9.0; h+=1.0) {\n        for (float w = 0.0; w < 9.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n};\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/convolute';\n\nexport type ConvoluteOwnProps = {\n  opaque: boolean;\n  matrix: number[];\n};\n\nexport const convoluteDefaultValues: ConvoluteOwnProps = {\n  opaque: false,\n  matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n};\n\n/**\n * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n * @example <caption>Sharpen filter</caption>\n * const filter = new Convolute({\n *   matrix: [ 0, -1,  0,\n *            -1,  5, -1,\n *             0, -1,  0 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n * @example <caption>Blur filter</caption>\n * const filter = new Convolute({\n *   matrix: [ 1/9, 1/9, 1/9,\n *             1/9, 1/9, 1/9,\n *             1/9, 1/9, 1/9 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n * @example <caption>Emboss filter</caption>\n * const filter = new Convolute({\n *   matrix: [ 1,   1,  1,\n *             1, 0.7, -1,\n *            -1,  -1, -1 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n * @example <caption>Emboss filter with opaqueness</caption>\n * const filter = new Convolute({\n *   opaque: true,\n *   matrix: [ 1,   1,  1,\n *             1, 0.7, -1,\n *            -1,  -1, -1 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class Convolute extends BaseFilter<'Convolute', ConvoluteOwnProps> {\n  /*\n   * Opaque value (true/false)\n   */\n  declare opaque: ConvoluteOwnProps['opaque'];\n\n  /*\n   * matrix for the filter, max 9x9\n   */\n  declare matrix: ConvoluteOwnProps['matrix'];\n\n  static type = 'Convolute';\n\n  static defaults = convoluteDefaultValues;\n\n  static uniformLocations = ['uMatrix', 'uOpaque', 'uHalfSize', 'uSize'];\n\n  getCacheKey() {\n    return `${this.type}_${Math.sqrt(this.matrix.length)}_${\n      this.opaque ? 1 : 0\n    }` as keyof typeof fragmentSource;\n  }\n\n  getFragmentSource() {\n    return fragmentSource[this.getCacheKey()];\n  }\n\n  /**\n   * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d(options: T2DPipelineState) {\n    const imageData = options.imageData,\n      data = imageData.data,\n      weights = this.matrix,\n      side = Math.round(Math.sqrt(weights.length)),\n      halfSide = Math.floor(side / 2),\n      sw = imageData.width,\n      sh = imageData.height,\n      output = options.ctx.createImageData(sw, sh),\n      dst = output.data,\n      // go through the destination image pixels\n      alphaFac = this.opaque ? 1 : 0;\n    let r, g, b, a, dstOff, scx, scy, srcOff, wt, x, y, cx, cy;\n\n    for (y = 0; y < sh; y++) {\n      for (x = 0; x < sw; x++) {\n        dstOff = (y * sw + x) * 4;\n        // calculate the weighed sum of the source image pixels that\n        // fall under the convolution matrix\n        r = 0;\n        g = 0;\n        b = 0;\n        a = 0;\n\n        for (cy = 0; cy < side; cy++) {\n          for (cx = 0; cx < side; cx++) {\n            scy = y + cy - halfSide;\n            scx = x + cx - halfSide;\n\n            // eslint-disable-next-line max-depth\n            if (scy < 0 || scy >= sh || scx < 0 || scx >= sw) {\n              continue;\n            }\n\n            srcOff = (scy * sw + scx) * 4;\n            wt = weights[cy * side + cx];\n\n            r += data[srcOff] * wt;\n            g += data[srcOff + 1] * wt;\n            b += data[srcOff + 2] * wt;\n            // eslint-disable-next-line max-depth\n            if (!alphaFac) {\n              a += data[srcOff + 3] * wt;\n            }\n          }\n        }\n        dst[dstOff] = r;\n        dst[dstOff + 1] = g;\n        dst[dstOff + 2] = b;\n        if (!alphaFac) {\n          dst[dstOff + 3] = a;\n        } else {\n          dst[dstOff + 3] = data[dstOff + 3];\n        }\n      }\n    }\n    options.imageData = output;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject() {\n    return {\n      ...super.toObject(),\n      opaque: this.opaque,\n      matrix: [...this.matrix],\n    };\n  }\n}\n\nclassRegistry.setClass(Convolute);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform vec3 uGamma;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    vec3 correction = (1.0 / uGamma);\n    color.r = pow(color.r, correction.r);\n    color.g = pow(color.g, correction.g);\n    color.b = pow(color.b, correction.b);\n    gl_FragColor = color;\n    gl_FragColor.rgb *= color.a;\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/gamma';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\n\nconst GAMMA = 'Gamma' as const;\n\nexport type GammaInput = [number, number, number];\n\nexport type GammaOwnProps = {\n  gamma: GammaInput;\n};\n\nexport const gammaDefaultValues: GammaOwnProps = {\n  gamma: [1, 1, 1],\n};\n\n/**\n * Gamma filter class\n * @example\n * const filter = new Gamma({\n *   gamma: [1, 0.5, 2.1]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Gamma extends BaseFilter<typeof GAMMA, GammaOwnProps> {\n  /**\n   * Gamma array value, from 0.01 to 2.2.\n   * @param {Array} gamma\n   * @default\n   */\n  declare gamma: GammaOwnProps['gamma'];\n  declare rgbValues?: {\n    r: Uint8Array;\n    g: Uint8Array;\n    b: Uint8Array;\n  };\n\n  static type = GAMMA;\n\n  static defaults = gammaDefaultValues;\n\n  static uniformLocations = ['uGamma'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  constructor(options: { gamma?: GammaInput } = {}) {\n    super(options);\n    this.gamma =\n      options.gamma ||\n      ((\n        this.constructor as typeof Gamma\n      ).defaults.gamma.concat() as GammaInput);\n  }\n\n  /**\n   * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const gamma = this.gamma,\n      rInv = 1 / gamma[0],\n      gInv = 1 / gamma[1],\n      bInv = 1 / gamma[2];\n\n    if (!this.rgbValues) {\n      this.rgbValues = {\n        r: new Uint8Array(256),\n        g: new Uint8Array(256),\n        b: new Uint8Array(256),\n      };\n    }\n\n    // This is an optimization - pre-compute a look-up table for each color channel\n    // instead of performing these pow calls for each pixel in the image.\n    const rgb = this.rgbValues;\n    for (let i = 0; i < 256; i++) {\n      rgb.r[i] = Math.pow(i / 255, rInv) * 255;\n      rgb.g[i] = Math.pow(i / 255, gInv) * 255;\n      rgb.b[i] = Math.pow(i / 255, bInv) * 255;\n    }\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = rgb.r[data[i]];\n      data[i + 1] = rgb.g[data[i + 1]];\n      data[i + 2] = rgb.b[data[i + 2]];\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n  }\n\n  isNeutralState() {\n    const { gamma } = this;\n    return gamma[0] === 1 && gamma[1] === 1 && gamma[2] === 1;\n  }\n\n  toObject(): { type: typeof GAMMA; gamma: GammaInput } {\n    return {\n      type: GAMMA,\n      gamma: this.gamma.concat() as GammaInput,\n    };\n  }\n}\n\nclassRegistry.setClass(Gamma);\n","import type { TGrayscaleMode } from '../Grayscale';\n\nexport const fragmentSource: Record<TGrayscaleMode, string> = {\n  average: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = texture2D(uTexture, vTexCoord);\n      float average = (color.r + color.b + color.g) / 3.0;\n      gl_FragColor = vec4(average, average, average, color.a);\n    }\n    `,\n  lightness: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform int uMode;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 col = texture2D(uTexture, vTexCoord);\n      float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\n      gl_FragColor = vec4(average, average, average, col.a);\n    }\n    `,\n  luminosity: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform int uMode;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 col = texture2D(uTexture, vTexCoord);\n      float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\n      gl_FragColor = vec4(average, average, average, col.a);\n    }\n    `,\n};\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/grayscale';\n\nexport type TGrayscaleMode = 'average' | 'lightness' | 'luminosity';\n\ntype GrayscaleOwnProps = {\n  mode: TGrayscaleMode;\n};\n\nexport const grayscaleDefaultValues: GrayscaleOwnProps = {\n  mode: 'average',\n};\n\n/**\n * Grayscale image filter class\n * @example\n * const filter = new Grayscale();\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Grayscale extends BaseFilter<'Grayscale', GrayscaleOwnProps> {\n  declare mode: TGrayscaleMode;\n\n  static type = 'Grayscale';\n\n  static defaults = grayscaleDefaultValues;\n\n  static uniformLocations = ['uMode'];\n\n  /**\n   * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    for (let i = 0, value: number; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      switch (this.mode) {\n        case 'average':\n          value = (r + g + b) / 3;\n          break;\n        case 'lightness':\n          value = (Math.min(r, g, b) + Math.max(r, g, b)) / 2;\n          break;\n        case 'luminosity':\n          value = 0.21 * r + 0.72 * g + 0.07 * b;\n          break;\n      }\n\n      data[i + 2] = data[i + 1] = data[i] = value;\n    }\n  }\n\n  getCacheKey() {\n    return `${this.type}_${this.mode}`;\n  }\n\n  getFragmentSource() {\n    return fragmentSource[this.mode];\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const mode = 1;\n    gl.uniform1i(uniformLocations.uMode, mode);\n  }\n\n  /**\n   * Grayscale filter isNeutralState implementation\n   * The filter is never neutral\n   * on the image\n   **/\n  isNeutralState() {\n    return false;\n  }\n}\n\nclassRegistry.setClass(Grayscale);\n","import { cos } from '../util/misc/cos';\nimport { sin } from '../util/misc/sin';\nimport {\n  ColorMatrix,\n  type ColorMatrixOwnProps,\n  colorMatrixDefaultValues,\n} from './ColorMatrix';\nimport type { TWebGLPipelineState, T2DPipelineState } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\n\nexport type HueRotationOwnProps = ColorMatrixOwnProps & {\n  rotation: number;\n};\n\nexport type HueRotationSerializedProps = {\n  rotation: number;\n};\n\nexport const hueRotationDefaultValues: HueRotationOwnProps = {\n  ...colorMatrixDefaultValues,\n  rotation: 0,\n};\n\n/**\n * HueRotation filter class\n * @example\n * const filter = new HueRotation({\n *   rotation: -0.5\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class HueRotation extends ColorMatrix<\n  'HueRotation',\n  HueRotationOwnProps,\n  HueRotationSerializedProps\n> {\n  /**\n   * HueRotation value, from -1 to 1.\n   */\n  declare rotation: HueRotationOwnProps['rotation'];\n\n  static type = 'HueRotation';\n\n  static defaults = hueRotationDefaultValues;\n\n  calculateMatrix() {\n    const rad = this.rotation * Math.PI,\n      cosine = cos(rad),\n      sine = sin(rad),\n      aThird = 1 / 3,\n      aThirdSqtSin = Math.sqrt(aThird) * sine,\n      OneMinusCos = 1 - cosine;\n    this.matrix = [\n      cosine + OneMinusCos / 3,\n      aThird * OneMinusCos - aThirdSqtSin,\n      aThird * OneMinusCos + aThirdSqtSin,\n      0,\n      0,\n      aThird * OneMinusCos + aThirdSqtSin,\n      cosine + aThird * OneMinusCos,\n      aThird * OneMinusCos - aThirdSqtSin,\n      0,\n      0,\n      aThird * OneMinusCos - aThirdSqtSin,\n      aThird * OneMinusCos + aThirdSqtSin,\n      cosine + aThird * OneMinusCos,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n    ];\n  }\n\n  isNeutralState() {\n    return this.rotation === 0;\n  }\n\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    this.calculateMatrix();\n    super.applyTo(options);\n  }\n\n  toObject() {\n    return {\n      type: this.type,\n      rotation: this.rotation,\n    };\n  }\n}\n\nclassRegistry.setClass(HueRotation);\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/invert';\n\nexport type InvertOwnProps = {\n  alpha: boolean;\n  invert: boolean;\n};\n\nexport const invertDefaultValues: InvertOwnProps = {\n  alpha: false,\n  invert: true,\n};\n\n/**\n * @example\n * const filter = new Invert();\n * object.filters.push(filter);\n * object.applyFilters(canvas.renderAll.bind(canvas));\n */\nexport class Invert extends BaseFilter<'Invert', InvertOwnProps> {\n  /**\n   * Invert also alpha.\n   * @param {Boolean} alpha\n   * @default\n   **/\n  declare alpha: InvertOwnProps['alpha'];\n\n  /**\n   * Filter invert. if false, does nothing\n   * @param {Boolean} invert\n   * @default\n   */\n  declare invert: InvertOwnProps['invert'];\n\n  static type = 'Invert';\n\n  static defaults = invertDefaultValues;\n\n  static uniformLocations = ['uInvert', 'uAlpha'];\n\n  /**\n   * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = 255 - data[i];\n      data[i + 1] = 255 - data[i + 1];\n      data[i + 2] = 255 - data[i + 2];\n\n      if (this.alpha) {\n        data[i + 3] = 255 - data[i + 3];\n      }\n    }\n  }\n\n  protected getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  /**\n   * Invert filter isNeutralState implementation\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * @param {Object} options\n   **/\n  isNeutralState() {\n    return !this.invert;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1i(uniformLocations.uInvert, Number(this.invert));\n    gl.uniform1i(uniformLocations.uAlpha, Number(this.alpha));\n  }\n}\n\nclassRegistry.setClass(Invert);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform int uInvert;\n  uniform int uAlpha;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    if (uInvert == 1) {\n      if (uAlpha == 1) {\n        gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,1.0 -color.a);\n      } else {\n        gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\n      }\n    } else {\n      gl_FragColor = color;\n    }\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/noise';\n\nexport type NoiseOwnProps = {\n  noise: number;\n};\n\nexport const noiseDefaultValues: NoiseOwnProps = {\n  noise: 0,\n};\n\n/**\n * Noise filter class\n * @example\n * const filter = new Noise({\n *   noise: 700\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class Noise extends BaseFilter<'Noise', NoiseOwnProps> {\n  /**\n   * Noise value, from\n   * @param {Number} noise\n   * @default\n   */\n  declare noise: NoiseOwnProps['noise'];\n\n  static type = 'Noise';\n\n  static defaults = noiseDefaultValues;\n\n  static uniformLocations = ['uNoise', 'uSeed'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const noise = this.noise;\n    for (let i = 0; i < data.length; i += 4) {\n      const rand = (0.5 - Math.random()) * noise;\n      data[i] += rand;\n      data[i + 1] += rand;\n      data[i + 2] += rand;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n    gl.uniform1f(uniformLocations.uSeed, Math.random());\n  }\n\n  isNeutralState() {\n    return this.noise === 0;\n  }\n}\n\nclassRegistry.setClass(Noise);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uStepH;\n  uniform float uNoise;\n  uniform float uSeed;\n  varying vec2 vTexCoord;\n  float rand(vec2 co, float seed, float vScale) {\n    return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\n  }\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\n    gl_FragColor = color;\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/pixelate';\n\nexport type PixelateOwnProps = {\n  blocksize: number;\n};\n\nexport const pixelateDefaultValues: PixelateOwnProps = {\n  blocksize: 4,\n};\n\n/**\n * Pixelate filter class\n * @example\n * const filter = new Pixelate({\n *   blocksize: 8\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Pixelate extends BaseFilter<'Pixelate', PixelateOwnProps> {\n  declare blocksize: PixelateOwnProps['blocksize'];\n\n  static type = 'Pixelate';\n\n  static defaults = pixelateDefaultValues;\n\n  static uniformLocations = ['uBlocksize'];\n\n  /**\n   * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data, width, height } }: T2DPipelineState) {\n    for (let i = 0; i < height; i += this.blocksize) {\n      for (let j = 0; j < width; j += this.blocksize) {\n        const index = i * 4 * width + j * 4;\n        const r = data[index];\n        const g = data[index + 1];\n        const b = data[index + 2];\n        const a = data[index + 3];\n\n        for (let _i = i; _i < Math.min(i + this.blocksize, height); _i++) {\n          for (let _j = j; _j < Math.min(j + this.blocksize, width); _j++) {\n            const index = _i * 4 * width + _j * 4;\n            data[index] = r;\n            data[index + 1] = g;\n            data[index + 2] = b;\n            data[index + 3] = a;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Indicate when the filter is not gonna apply changes to the image\n   **/\n  isNeutralState() {\n    return this.blocksize === 1;\n  }\n\n  protected getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n  }\n}\n\nclassRegistry.setClass(Pixelate);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uBlocksize;\n  uniform float uStepW;\n  uniform float uStepH;\n  varying vec2 vTexCoord;\n  void main() {\n    float blockW = uBlocksize * uStepW;\n    float blockH = uBlocksize * uStepH;\n    int posX = int(vTexCoord.x / blockW);\n    int posY = int(vTexCoord.y / blockH);\n    float fposX = float(posX);\n    float fposY = float(posY);\n    vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\n    vec4 color = texture2D(uTexture, squareCoords);\n    gl_FragColor = color;\n  }\n`;\n","import { classRegistry } from '../ClassRegistry';\nimport { Color } from '../color/Color';\nimport { BaseFilter } from './BaseFilter';\nimport { fragmentShader } from './shaders/removeColor';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\n\nexport type RemoveColorOwnProps = {\n  color: string;\n  distance: number;\n  useAlpha: boolean;\n};\n\nexport const removeColorDefaultValues: RemoveColorOwnProps = {\n  color: '#FFFFFF',\n  distance: 0.02,\n  useAlpha: false,\n};\n\n/**\n * Remove white filter class\n * @example\n * const filter = new RemoveColor({\n *   threshold: 0.2,\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class RemoveColor extends BaseFilter<\n  'RemoveColor',\n  RemoveColorOwnProps\n> {\n  /**\n   * Color to remove, in any format understood by {@link Color}.\n   * @param {String} type\n   * @default\n   */\n  declare color: RemoveColorOwnProps['color'];\n\n  /**\n   * distance to actual color, as value up or down from each r,g,b\n   * between 0 and 1\n   **/\n  declare distance: RemoveColorOwnProps['distance'];\n\n  /**\n   * For color to remove inside distance, use alpha channel for a smoother deletion\n   * NOT IMPLEMENTED YET\n   **/\n  declare useAlpha: RemoveColorOwnProps['useAlpha'];\n\n  static type = 'RemoveColor';\n\n  static defaults = removeColorDefaultValues;\n\n  static uniformLocations = ['uLow', 'uHigh'];\n\n  getFragmentSource() {\n    return fragmentShader;\n  }\n\n  /**\n   * Applies filter to canvas element\n   * @param {Object} canvasEl Canvas element to apply filter to\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const distance = this.distance * 255,\n      source = new Color(this.color).getSource(),\n      lowC = [source[0] - distance, source[1] - distance, source[2] - distance],\n      highC = [\n        source[0] + distance,\n        source[1] + distance,\n        source[2] + distance,\n      ];\n\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n\n      if (\n        r > lowC[0] &&\n        g > lowC[1] &&\n        b > lowC[2] &&\n        r < highC[0] &&\n        g < highC[1] &&\n        b < highC[2]\n      ) {\n        data[i + 3] = 0;\n      }\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const source = new Color(this.color).getSource(),\n      distance = this.distance,\n      lowC = [\n        0 + source[0] / 255 - distance,\n        0 + source[1] / 255 - distance,\n        0 + source[2] / 255 - distance,\n        1,\n      ],\n      highC = [\n        source[0] / 255 + distance,\n        source[1] / 255 + distance,\n        source[2] / 255 + distance,\n        1,\n      ];\n    gl.uniform4fv(uniformLocations.uLow, lowC);\n    gl.uniform4fv(uniformLocations.uHigh, highC);\n  }\n}\n\nclassRegistry.setClass(RemoveColor);\n","export const fragmentShader = `\nprecision highp float;\nuniform sampler2D uTexture;\nuniform vec4 uLow;\nuniform vec4 uHigh;\nvarying vec2 vTexCoord;\nvoid main() {\n  gl_FragColor = texture2D(uTexture, vTexCoord);\n  if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\n    gl_FragColor.a = 0.0;\n  }\n}\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type {\n  T2DPipelineState,\n  TWebGLPipelineState,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport { classRegistry } from '../ClassRegistry';\nimport { createCanvasElement } from '../util/misc/dom';\nimport type { XY } from '../Point';\n\nexport type TResizeType = 'bilinear' | 'hermite' | 'sliceHack' | 'lanczos';\n\nexport type ResizeOwnProps = {\n  resizeType: TResizeType;\n  scaleX: number;\n  scaleY: number;\n  lanczosLobes: number;\n};\n\nexport const resizeDefaultValues: ResizeOwnProps = {\n  resizeType: 'hermite',\n  scaleX: 1,\n  scaleY: 1,\n  lanczosLobes: 3,\n};\n\ntype ResizeDuring2DResize = Resize & {\n  rcpScaleX: number;\n  rcpScaleY: number;\n};\n\ntype ResizeDuringWEBGLResize = Resize & {\n  rcpScaleX: number;\n  rcpScaleY: number;\n  horizontal: boolean;\n  width: number;\n  height: number;\n  taps: number[];\n  tempScale: number;\n  dH: number;\n  dW: number;\n};\n\n/**\n * Resize image filter class\n * @example\n * const filter = new Resize();\n * object.filters.push(filter);\n * object.applyFilters(canvas.renderAll.bind(canvas));\n */\nexport class Resize extends BaseFilter<'Resize', ResizeOwnProps> {\n  /**\n   * Resize type\n   * for webgl resizeType is just lanczos, for canvas2d can be:\n   * bilinear, hermite, sliceHack, lanczos.\n   * @default\n   */\n  declare resizeType: ResizeOwnProps['resizeType'];\n\n  /**\n   * Scale factor for resizing, x axis\n   * @param {Number} scaleX\n   * @default\n   */\n  declare scaleX: ResizeOwnProps['scaleX'];\n\n  /**\n   * Scale factor for resizing, y axis\n   * @param {Number} scaleY\n   * @default\n   */\n  declare scaleY: ResizeOwnProps['scaleY'];\n\n  /**\n   * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\n   * @param {Number} lanczosLobes\n   * @default\n   */\n  declare lanczosLobes: ResizeOwnProps['lanczosLobes'];\n\n  static type = 'Resize';\n\n  static defaults = resizeDefaultValues;\n\n  static uniformLocations = ['uDelta', 'uTaps'];\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    this: ResizeDuringWEBGLResize,\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform2fv(\n      uniformLocations.uDelta,\n      this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height],\n    );\n    gl.uniform1fv(uniformLocations.uTaps, this.taps);\n  }\n\n  getFilterWindow(this: ResizeDuringWEBGLResize) {\n    const scale = this.tempScale;\n    return Math.ceil(this.lanczosLobes / scale);\n  }\n\n  getCacheKey(this: ResizeDuringWEBGLResize): string {\n    const filterWindow = this.getFilterWindow();\n    return `${this.type}_${filterWindow}`;\n  }\n\n  getFragmentSource(this: ResizeDuringWEBGLResize): string {\n    const filterWindow = this.getFilterWindow();\n    return this.generateShader(filterWindow);\n  }\n\n  getTaps(this: ResizeDuringWEBGLResize) {\n    const lobeFunction = this.lanczosCreate(this.lanczosLobes),\n      scale = this.tempScale,\n      filterWindow = this.getFilterWindow(),\n      taps = new Array(filterWindow);\n    for (let i = 1; i <= filterWindow; i++) {\n      taps[i - 1] = lobeFunction(i * scale);\n    }\n    return taps;\n  }\n\n  /**\n   * Generate vertex and shader sources from the necessary steps numbers\n   * @param {Number} filterWindow\n   */\n  generateShader(filterWindow: number) {\n    const offsets = new Array(filterWindow);\n    for (let i = 1; i <= filterWindow; i++) {\n      offsets[i - 1] = `${i}.0 * uDelta`;\n    }\n    return `\n      precision highp float;\n      uniform sampler2D uTexture;\n      uniform vec2 uDelta;\n      varying vec2 vTexCoord;\n      uniform float uTaps[${filterWindow}];\n      void main() {\n        vec4 color = texture2D(uTexture, vTexCoord);\n        float sum = 1.0;\n        ${offsets\n          .map(\n            (offset, i) => `\n              color += texture2D(uTexture, vTexCoord + ${offset}) * uTaps[${i}] + texture2D(uTexture, vTexCoord - ${offset}) * uTaps[${i}];\n              sum += 2.0 * uTaps[${i}];\n            `,\n          )\n          .join('\\n')}\n        gl_FragColor = color / sum;\n      }\n    `;\n  }\n\n  applyToForWebgl(this: ResizeDuringWEBGLResize, options: TWebGLPipelineState) {\n    options.passes++;\n    this.width = options.sourceWidth;\n    this.horizontal = true;\n    this.dW = Math.round(this.width * this.scaleX);\n    this.dH = options.sourceHeight;\n    this.tempScale = this.dW / this.width;\n    this.taps = this.getTaps();\n    options.destinationWidth = this.dW;\n    super.applyTo(options);\n    options.sourceWidth = options.destinationWidth;\n\n    this.height = options.sourceHeight;\n    this.horizontal = false;\n    this.dH = Math.round(this.height * this.scaleY);\n    this.tempScale = this.dH / this.height;\n    this.taps = this.getTaps();\n    options.destinationHeight = this.dH;\n    super.applyTo(options);\n    options.sourceHeight = options.destinationHeight;\n  }\n\n  /**\n   * Apply the resize filter to the image\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      (this as unknown as ResizeDuringWEBGLResize).applyToForWebgl(options);\n    } else {\n      (this as unknown as ResizeDuring2DResize).applyTo2d(options);\n    }\n  }\n\n  isNeutralState() {\n    return this.scaleX === 1 && this.scaleY === 1;\n  }\n\n  lanczosCreate(lobes: number) {\n    return (x: number) => {\n      if (x >= lobes || x <= -lobes) {\n        return 0.0;\n      }\n      if (x < 1.1920929e-7 && x > -1.1920929e-7) {\n        return 1.0;\n      }\n      x *= Math.PI;\n      const xx = x / lobes;\n      return ((Math.sin(x) / x) * Math.sin(xx)) / xx;\n    };\n  }\n\n  applyTo2d(this: ResizeDuring2DResize, options: T2DPipelineState) {\n    const imageData = options.imageData,\n      scaleX = this.scaleX,\n      scaleY = this.scaleY;\n\n    this.rcpScaleX = 1 / scaleX;\n    this.rcpScaleY = 1 / scaleY;\n\n    const oW = imageData.width;\n    const oH = imageData.height;\n    const dW = Math.round(oW * scaleX);\n    const dH = Math.round(oH * scaleY);\n    let newData: ImageData;\n\n    if (this.resizeType === 'sliceHack') {\n      newData = this.sliceByTwo(options, oW, oH, dW, dH);\n    } else if (this.resizeType === 'hermite') {\n      newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n    } else if (this.resizeType === 'bilinear') {\n      newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n    } else if (this.resizeType === 'lanczos') {\n      newData = this.lanczosResize(options, oW, oH, dW, dH);\n    } else {\n      // this should never trigger, is here just for safety net.\n      newData = new ImageData(dW, dH);\n    }\n    options.imageData = newData;\n  }\n\n  /**\n   * Filter sliceByTwo\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  sliceByTwo(\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number,\n  ) {\n    const imageData = options.imageData;\n    const mult = 0.5;\n    let doneW = false;\n    let doneH = false;\n    let stepW = oW * mult;\n    let stepH = oH * mult;\n    const resources = options.filterBackend.resources;\n    let sX = 0;\n    let sY = 0;\n    const dX = oW;\n    let dY = 0;\n    if (!resources.sliceByTwo) {\n      resources.sliceByTwo = createCanvasElement();\n    }\n    const tmpCanvas = resources.sliceByTwo;\n    if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n      tmpCanvas.width = oW * 1.5;\n      tmpCanvas.height = oH;\n    }\n    const ctx = tmpCanvas.getContext('2d')!;\n    ctx.clearRect(0, 0, oW * 1.5, oH);\n    ctx.putImageData(imageData, 0, 0);\n\n    dW = Math.floor(dW);\n    dH = Math.floor(dH);\n\n    while (!doneW || !doneH) {\n      oW = stepW;\n      oH = stepH;\n      if (dW < Math.floor(stepW * mult)) {\n        stepW = Math.floor(stepW * mult);\n      } else {\n        stepW = dW;\n        doneW = true;\n      }\n      if (dH < Math.floor(stepH * mult)) {\n        stepH = Math.floor(stepH * mult);\n      } else {\n        stepH = dH;\n        doneH = true;\n      }\n      ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n      sX = dX;\n      sY = dY;\n      dY += stepH;\n    }\n    return ctx.getImageData(sX, sY, dW, dH);\n  }\n\n  /**\n   * Filter lanczosResize\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  lanczosResize(\n    this: ResizeDuring2DResize,\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number,\n  ): ImageData {\n    function process(u: number): ImageData {\n      let v, i, weight, idx, a, red, green, blue, alpha, fX, fY;\n      center.x = (u + 0.5) * ratioX;\n      icenter.x = Math.floor(center.x);\n      for (v = 0; v < dH; v++) {\n        center.y = (v + 0.5) * ratioY;\n        icenter.y = Math.floor(center.y);\n        a = 0;\n        red = 0;\n        green = 0;\n        blue = 0;\n        alpha = 0;\n        for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n          if (i < 0 || i >= oW) {\n            continue;\n          }\n          fX = Math.floor(1000 * Math.abs(i - center.x));\n          if (!cacheLanc[fX]) {\n            cacheLanc[fX] = {};\n          }\n          for (let j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n            if (j < 0 || j >= oH) {\n              continue;\n            }\n            fY = Math.floor(1000 * Math.abs(j - center.y));\n            if (!cacheLanc[fX][fY]) {\n              cacheLanc[fX][fY] = lanczos(\n                Math.sqrt(\n                  Math.pow(fX * rcpRatioX, 2) + Math.pow(fY * rcpRatioY, 2),\n                ) / 1000,\n              );\n            }\n            weight = cacheLanc[fX][fY];\n            if (weight > 0) {\n              idx = (j * oW + i) * 4;\n              a += weight;\n              red += weight * srcData[idx];\n              green += weight * srcData[idx + 1];\n              blue += weight * srcData[idx + 2];\n              alpha += weight * srcData[idx + 3];\n            }\n          }\n        }\n        idx = (v * dW + u) * 4;\n        destData[idx] = red / a;\n        destData[idx + 1] = green / a;\n        destData[idx + 2] = blue / a;\n        destData[idx + 3] = alpha / a;\n      }\n\n      if (++u < dW) {\n        return process(u);\n      } else {\n        return destImg;\n      }\n    }\n\n    const srcData = options.imageData.data,\n      destImg = options.ctx.createImageData(dW, dH),\n      destData = destImg.data,\n      lanczos = this.lanczosCreate(this.lanczosLobes),\n      ratioX = this.rcpScaleX,\n      ratioY = this.rcpScaleY,\n      rcpRatioX = 2 / this.rcpScaleX,\n      rcpRatioY = 2 / this.rcpScaleY,\n      range2X = Math.ceil((ratioX * this.lanczosLobes) / 2),\n      range2Y = Math.ceil((ratioY * this.lanczosLobes) / 2),\n      cacheLanc: Record<number, Record<number, number>> = {},\n      center: XY = { x: 0, y: 0 },\n      icenter: XY = { x: 0, y: 0 };\n\n    return process(0);\n  }\n\n  /**\n   * bilinearFiltering\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  bilinearFiltering(\n    this: ResizeDuring2DResize,\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number,\n  ) {\n    let a;\n    let b;\n    let c;\n    let d;\n    let x;\n    let y;\n    let i;\n    let j;\n    let xDiff;\n    let yDiff;\n    let chnl;\n    let color;\n    let offset = 0;\n    let origPix;\n    const ratioX = this.rcpScaleX;\n    const ratioY = this.rcpScaleY;\n    const w4 = 4 * (oW - 1);\n    const img = options.imageData;\n    const pixels = img.data;\n    const destImage = options.ctx.createImageData(dW, dH);\n    const destPixels = destImage.data;\n    for (i = 0; i < dH; i++) {\n      for (j = 0; j < dW; j++) {\n        x = Math.floor(ratioX * j);\n        y = Math.floor(ratioY * i);\n        xDiff = ratioX * j - x;\n        yDiff = ratioY * i - y;\n        origPix = 4 * (y * oW + x);\n\n        for (chnl = 0; chnl < 4; chnl++) {\n          a = pixels[origPix + chnl];\n          b = pixels[origPix + 4 + chnl];\n          c = pixels[origPix + w4 + chnl];\n          d = pixels[origPix + w4 + 4 + chnl];\n          color =\n            a * (1 - xDiff) * (1 - yDiff) +\n            b * xDiff * (1 - yDiff) +\n            c * yDiff * (1 - xDiff) +\n            d * xDiff * yDiff;\n          destPixels[offset++] = color;\n        }\n      }\n    }\n    return destImage;\n  }\n\n  /**\n   * hermiteFastResize\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  hermiteFastResize(\n    this: ResizeDuring2DResize,\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number,\n  ) {\n    const ratioW = this.rcpScaleX,\n      ratioH = this.rcpScaleY,\n      ratioWHalf = Math.ceil(ratioW / 2),\n      ratioHHalf = Math.ceil(ratioH / 2),\n      img = options.imageData,\n      data = img.data,\n      img2 = options.ctx.createImageData(dW, dH),\n      data2 = img2.data;\n    for (let j = 0; j < dH; j++) {\n      for (let i = 0; i < dW; i++) {\n        const x2 = (i + j * dW) * 4;\n        let weight = 0;\n        let weights = 0;\n        let weightsAlpha = 0;\n        let gxR = 0;\n        let gxG = 0;\n        let gxB = 0;\n        let gxA = 0;\n        const centerY = (j + 0.5) * ratioH;\n        for (let yy = Math.floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n          const dy = Math.abs(centerY - (yy + 0.5)) / ratioHHalf,\n            centerX = (i + 0.5) * ratioW,\n            w0 = dy * dy;\n          for (let xx = Math.floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n            let dx = Math.abs(centerX - (xx + 0.5)) / ratioWHalf;\n            const w = Math.sqrt(w0 + dx * dx);\n            /* eslint-disable max-depth */\n            if (w > 1 && w < -1) {\n              continue;\n            }\n            //hermite filter\n            weight = 2 * w * w * w - 3 * w * w + 1;\n            if (weight > 0) {\n              dx = 4 * (xx + yy * oW);\n              //alpha\n              gxA += weight * data[dx + 3];\n              weightsAlpha += weight;\n              //colors\n              if (data[dx + 3] < 255) {\n                weight = (weight * data[dx + 3]) / 250;\n              }\n              gxR += weight * data[dx];\n              gxG += weight * data[dx + 1];\n              gxB += weight * data[dx + 2];\n              weights += weight;\n            }\n            /* eslint-enable max-depth */\n          }\n        }\n        data2[x2] = gxR / weights;\n        data2[x2 + 1] = gxG / weights;\n        data2[x2 + 2] = gxB / weights;\n        data2[x2 + 3] = gxA / weightsAlpha;\n      }\n    }\n    return img2;\n  }\n}\n\nclassRegistry.setClass(Resize);\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/saturation';\n\nexport type SaturationOwnProps = {\n  saturation: number;\n};\n\nexport const saturationDefaultValues: SaturationOwnProps = {\n  saturation: 0,\n};\n\n/**\n * Saturate filter class\n * @example\n * const filter = new Saturation({\n *   saturation: 1\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Saturation extends BaseFilter<'Saturation', SaturationOwnProps> {\n  /**\n   * Saturation value, from -1 to 1.\n   * Increases/decreases the color saturation.\n   * A value of 0 has no effect.\n   *\n   * @param {Number} saturation\n   * @default\n   */\n  declare saturation: SaturationOwnProps['saturation'];\n\n  static type = 'Saturation';\n\n  static defaults = saturationDefaultValues;\n\n  static uniformLocations = ['uSaturation'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const adjust = -this.saturation;\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      const max = Math.max(r, g, b);\n      data[i] += max !== r ? (max - r) * adjust : 0;\n      data[i + 1] += max !== g ? (max - g) * adjust : 0;\n      data[i + 2] += max !== b ? (max - b) * adjust : 0;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n  }\n\n  isNeutralState() {\n    return this.saturation === 0;\n  }\n}\n\nclassRegistry.setClass(Saturation);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uSaturation;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    float rgMax = max(color.r, color.g);\n    float rgbMax = max(rgMax, color.b);\n    color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\n    color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\n    color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\n    gl_FragColor = color;\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/vibrance';\n\nexport type VibranceOwnProps = {\n  vibrance: number;\n};\n\nexport const vibranceDefaultValues: VibranceOwnProps = {\n  vibrance: 0,\n};\n\n/**\n * Vibrance filter class\n * @example\n * const filter = new Vibrance({\n *   vibrance: 1\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Vibrance extends BaseFilter<'Vibrance', VibranceOwnProps> {\n  /**\n   * Vibrance value, from -1 to 1.\n   * Increases/decreases the saturation of more muted colors with less effect on saturated colors.\n   * A value of 0 has no effect.\n   *\n   * @param {Number} vibrance\n   * @default\n   */\n  declare vibrance: VibranceOwnProps['vibrance'];\n\n  static type = 'Vibrance';\n\n  static defaults = vibranceDefaultValues;\n\n  static uniformLocations = ['uVibrance'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Vibrance operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const adjust = -this.vibrance;\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      const max = Math.max(r, g, b);\n      const avg = (r + g + b) / 3;\n      const amt = ((Math.abs(max - avg) * 2) / 255) * adjust;\n      data[i] += max !== r ? (max - r) * amt : 0;\n      data[i + 1] += max !== g ? (max - g) * amt : 0;\n      data[i + 2] += max !== b ? (max - b) * amt : 0;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {TWebGLUniformLocationMap} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uVibrance, -this.vibrance);\n  }\n\n  isNeutralState() {\n    return this.vibrance === 0;\n  }\n}\n\nclassRegistry.setClass(Vibrance);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uVibrance;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    float max = max(color.r, max(color.g, color.b));\n    float avg = (color.r + color.g + color.b) / 3.0;\n    float amt = (abs(max - avg) * 2.0) * uVibrance;\n    color.r += max != color.r ? (max - color.r) * amt : 0.00;\n    color.g += max != color.g ? (max - color.g) * amt : 0.00;\n    color.b += max != color.b ? (max - color.b) * amt : 0.00;\n    gl_FragColor = color;\n  }\n`;\n"],"names":["BaseConfiguration","constructor","_defineProperty","this","window","devicePixelRatio","config","super","configure","arguments","length","undefined","Object","assign","addFonts","paths","fontPaths","_objectSpread","removeFonts","forEach","fontFamily","clearFonts","restoreDefaults","keys","defaults","reduce","acc","key","log","severity","_len","optionalParams","Array","_key","console","FabricError","Error","message","options","concat","SignalAbortedError","context","GLProbe","WebGLProbe","testPrecision","gl","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","queryWebGL","canvas","getContext","maxTextureSize","getParameter","MAX_TEXTURE_SIZE","GLPrecision","find","getExtension","loseContext","isSupported","textureSize","copyPasteData","env","setEnv","value","getEnv","document","isTouchSupported","navigator","maxTouchPoints","dispose","getFabricDocument","getFabricWindow","getDevicePixelRatio","_config$devicePixelRa","Math","max","cache","getFontCache","_ref","fontStyle","fontWeight","toLowerCase","charWidthsCache","fontCache","cacheKey","clearFontCache","limitDimsByArea","ar","perfLimitSizeTotal","roughWidth","sqrt","floor","VERSION","noop","halfPI","PI","twoMathPi","PiBy180","iMatrix","freeze","DEFAULT_SVG_FONT_SIZE","kRect","CENTER","LEFT","TOP","BOTTOM","RIGHT","NONE","reNewline","MOVING","SCALING","ROTATING","ROTATE","SKEWING","RESIZING","MODIFY_POLY","MODIFY_PATH","CHANGED","SCALE","SCALE_X","SCALE_Y","SKEW_X","SKEW_Y","FILL","STROKE","MODIFIED","JSON","SVG","classRegistry","Map","has","classType","getClass","get","setClass","classConstructor","set","type","getSVGClass","SVGTagName","setSVGClass","runningAnimations","remove","index","indexOf","splice","cancelAll","animations","animation","abort","cancelByCanvas","filter","_animation$target","target","cancelByTarget","Observable","on","arg0","handler","__eventListeners","entries","eventName","off","push","once","disposers","_ref2","d","disposer","args","call","_removeEventListener","eventListener","_ref3","fire","_this$__eventListener","listenersForEvent","i","removeFromArray","array","idx","cos","angle","abs","sin","angleSlice","sign","Point","y","x","add","that","addEquals","scalarAdd","scalar","scalarAddEquals","subtract","subtractEquals","scalarSubtract","scalarSubtractEquals","multiply","scalarMultiply","scalarMultiplyEquals","divide","scalarDivide","scalarDivideEquals","eq","lt","lte","gt","gte","lerp","t","min","distanceFrom","dx","dy","midPointFrom","toString","setXY","setX","setY","setFromPoint","swap","clone","rotate","radians","origin","ZERO","sinus","cosinus","p","transform","ignoreOffset","isCollection","fabricObject","isArray","_objects","createCollectionMixin","Base","Collection","_onObjectAdded","object","_onObjectRemoved","_onStackOrderChanged","objects","size","insertAt","_len2","_key2","removed","_len3","_key3","forEachObject","callback","getObjects","_len4","types","_key4","o","isType","item","isEmpty","contains","deep","includes","some","obj","complexity","memo","current","sendObjectToBack","unshift","bringObjectToFront","sendObjectBackwards","intersecting","newIdx","findNewLowerIndex","bringObjectForward","findNewUpperIndex","moveObjectTo","isOverlapping","collectObjects","left","top","width","height","includeIntersecting","tl","br","selectable","visible","intersectsWithRect","isContainedWithinRect","containsPoint","CommonMethods","_setOptions","prop","_setObject","_set","toggle","property","requestAnimFrame","requestAnimationFrame","cancelAnimFrame","handle","cancelAnimationFrame","id","uid","createCanvasElement","element","createElement","createImage","createCanvasElementFor","newCanvas","toDataURL","canvasEl","format","quality","degreesToRadians","degrees","radiansToDegrees","isIdentityMatrix","mat","every","transformPoint","invertTransform","a","r","multiplyTransformMatrices","b","is2x2","multiplyTransformMatrixArray","matrices","reduceRight","product","curr","calcPlaneRotation","atan2","qrDecompose","denom","pow","scaleX","scaleY","skewX","skewY","translateX","translateY","createTranslateMatrix","createRotateMatrix","angleRadiant","cosValue","sinValue","createScaleMatrix","angleToSkew","tan","createSkewXMatrix","skewValue","createSkewYMatrix","calcDimensionsMatrix","flipX","flipY","matrix","composeMatrix","scaleMatrix","loadImage","url","signal","crossOrigin","Promise","resolve","reject","aborted","img","err","src","addEventListener","done","onload","onerror","removeEventListener","enlivenObjects","reviver","instances","all","map","fromObject","then","fabricInstance","catch","error","instance","finally","enlivenObjectEnlivables","serializedObject","promises","values","enlived","pick","source","pickBy","predicate","ColorNameMap","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","hue2rgb","q","rgb2Hsl","g","maxValue","minValue","h","s","l","round","fromAlphaToFloat","parseFloat","endsWith","hexify","toUpperCase","padStart","greyAverage","avg","Color","color","setSource","_source","_tryParsingColor","sourceFromHex","sourceFromRgb","sourceFromHsl","isUnrecognised","getSource","toRgb","toRgba","join","toHsl","toHsla","toHex","toHexa","slice","getAlpha","setAlpha","alpha","toGrayscale","toBlackWhite","threshold","average","bOrW","overlayWith","otherColor","otherSource","R","G","B","fromRgb","fromRgba","match","parsedValue","fromHsl","fromHsla","parseAngletoDegrees","fromHex","expandedValue","split","hex","hexCouple","parseInt","lowercase","numeric","toFixed","number","fractionDigits","Number","parseUnit","fontSize","unit","exec","dpi","DPI","parsePreserveAspectRatioAttribute","attribute","firstPart","secondPart","trim","alignX","alignY","align","meetOrSlice","matrixToSVG","NUM_FRACTION_DIGITS","colorPropToSVG","colorValue","opacityValue","inlineStyle","toLive","opacity","isFiller","filler","isSerializableFiller","toObject","isPattern","offsetX","isActiveSelection","getScrollLeftTop","doc","getDocumentFromElement","elementLoop","docElement","documentElement","body","scrollLeft","scrollTop","parentNode","host","nodeType","style","position","el","ownerDocument","getWindowFromElement","_el$ownerDocument","defaultView","setCanvasDimensions","ctx","retinaScaling","setAttribute","scale","setCSSDimensions","makeElementUnselectable","onselectstart","userSelect","StaticCanvasDOMManager","createLowerCanvas","lower","getElementById","hasAttribute","_originalCanvasStyle","cssText","classList","cleanupDOM","removeAttribute","setDimensions","calcOffset","_getWindowFromElement","offset","elemStyle","getComputedStyle","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","box","docElem","getBoundingClientRect","scrollLeftTop","clientLeft","clientTop","getElementOffset","staticCanvasDefaults","backgroundVpt","backgroundColor","overlayVpt","overlayColor","includeDefaultValues","svgViewportTransformation","renderOnAddRemove","skipOffscreen","enableRetinaScaling","imageSmoothingEnabled","controlsAboveOverlay","allowTouchScrolling","viewportTransform","StaticCanvas","lowerCanvasEl","_this$elements$lower","elements","contextContainer","_this$elements$lower2","getDefaults","ownDefaults","initElements","_setDimensionsImpl","skipControlsDrawing","calcViewportBoundaries","requestRenderAll","setCoords","getRetinaScaling","_offset","getWidth","getHeight","setWidth","setHeight","dimensions","cssOnly","backstoreOnly","hasLostContext","getZoom","setViewportTransform","vpt","zoomToPoint","point","before","newPoint","after","setZoom","absolutePan","relativePan","getElement","clearContext","clearRect","clear","backgroundImage","overlayImage","renderAll","cancelRequestedRender","destroyed","renderCanvas","renderAndReset","nextRenderHandle","disposed","iVpt","vptCoords","tr","bl","drawControls","_ctx","v","path","clipPath","patternQuality","_renderBackground","save","_renderObjects","restore","shouldCache","_transformDone","renderCache","forClipping","drawClipPathOnCanvas","_renderOverlay","__cleanupTask","globalCompositeOperation","zoomX","zoomY","drawImage","_cacheCanvas","cacheTranslationX","cacheTranslationY","len","render","_renderBackgroundOrOverlay","fill","needsVpt","isAFiller","beginPath","moveTo","lineTo","closePath","fillStyle","offsetY","m","gradientTransform","patternTransform","getCenter","getCenterPoint","centerObjectH","_centerObject","centerObjectV","centerObject","viewportCenterObject","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","center","toDatalessJSON","propertiesToInclude","toDatalessObject","_toObjectMethod","toJSON","methodName","clipPathData","excludeFromExport","_toObject","version","__serializeBgOverlay","originalValue","data","bgImage","bgColor","background","overlay","toSVG","markup","_setSVGPreamble","_setSVGHeader","clipPathId","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","optViewBox","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","createSVGClipPathMarkup","toClipPathSVG","shouldTransform","additionalTransform","fontList","_renderText","styles","styleRow","fontListMarkup","_setSVGObject","bgOrOverlay","repeat","finalWidth","finalHeight","loadFromJSON","json","serialized","parse","enlivedMap","properties","cloneWithoutData","multiplier","finalMultiplier","toCanvasElement","scaledWidth","scaledHeight","zoom","originalWidth","originalHeight","originalSkipControlsDrawing","newZoom","vp","newVp","originalRetina","objectsToRender","task","destroy","kill","touchEvents","getPointer","event","scroll","_evt","touchProp","changedTouches","getTouchInfo","clientX","clientY","isTouchEvent","pointerType","stopEvent","e","preventDefault","stopPropagation","makeBoundingBoxFromPoints","points","addTransformToObject","applyTransformToObject","calcOwnMatrix","_qrDecompose","otherOptions","_objectWithoutProperties","_excluded","setPositionByOrigin","resetObjectTransform","saveObjectTransform","sizeAfterTransform","dimX","dimY","bbox","calcPlaneChangeMatrix","from","sendPointToPlane","to","sendVectorToPlane","sendObjectToPlane","fireEvent","_target$canvas","originOffset","bottom","right","resolveOrigin","originValue","NOT_ALLOWED_CURSOR","isTransformCentered","originX","originY","invertOrigin","isLocked","lockingKey","commonEventInfo","eventData","pointer","findCornerQuadrant","control","cornerAngle","getTotalAngle","getLocalPoint","corner","controls","padding","localPoint","getRelativeCenterPoint","translateToGivenOrigin","normalizePoint","dragHandler","newLeft","newTop","moveX","moveY","FabricObjectSVGExportMixin","getSvgStyles","skipShadow","fillRule","strokeWidth","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","visibility","getSvgFilter","stroke","shadow","getSvgCommons","getSvgTransform","full","calcTransformMatrix","svgTransform","_toSVG","_reviver","_createBaseSVGMarkup","_createBaseClipPathSVGMarkup","objectMarkup","commonPieces","noStyle","withShadow","styleInfo","shadowInfo","vectorEffect","strokeUniform","absoluteClipPath","absolutePositioned","clipPathMarkup","addPaintOrder","paintFirst","getSvgRegex","arr","RegExp","reNum","String","raw","_templateObject","_taggedTemplateLiteral","svgNS","reFontDeclaration","attributesMap","cx","cy","display","fSize","cPath","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgValidParentsRegEx","reViewBoxAttrValue","unitVectorX","zero","rotateVector","vector","createVector","magnitude","calcAngleBetweenVectors","crossProduct","dotProduct","calcVectorRotation","getUnitVector","getOrthonormalVector","counterClockwise","isBetweenVectors","AxB","AxT","BxT","shadowOffsetRegex","reOffsetsAndBlur","Shadow","parseShadow","shadowStr","blur","replace","fBoxX","fBoxY","affectStroke","nonScaling","capValue","stateProperties","cacheProperties","fabricObjectDefaultValues","minScaleLimit","objectCaching","inverted","centeredRotation","centeredScaling","dirty","normalize","c","asin","elastic","defaultEasing","easeOutBounce","easeInBounce","easeInCirc","easeInCubic","easeInElastic","normA","normS","normP","easeInExpo","easeInOutBounce","easeInOutCirc","easeInOutCubic","easeInOutElastic","normC","easeInOutExpo","easeInOutQuad","easeInOutQuart","easeInOutQuint","easeInOutSine","easeInQuad","easeInQuart","easeInQuint","easeInSine","easeOutCirc","easeOutCubic","easeOutElastic","easeOutExpo","easeOutQuad","easeOutQuart","easeOutQuint","easeOutSine","defaultAbort","AnimationBase","startValue","byValue","duration","delay","easing","onStart","onChange","onComplete","tick","bind","_onStart","_onChange","_onComplete","_abort","endValue","calculate","state","_state","isDone","start","firstTick","timestamp","startTime","Date","register","setTimeout","durationMs","boundDurationMs","durationProgress","valueProgress","unregister","ValueAnimation","timeElapsed","ArrayAnimation","defaultColorEasing","wrapColorCallback","rgba","ColorAnimation","startColor","endColor","animate","isArrayAnimation","animateColor","Intersection","status","append","isPointContained","T","A","infinite","AB","isPointInPolygon","other","hits","inter","intersectSegmentSegment","intersectLineLine","a1","a2","b1","b2","aInfinite","bInfinite","a2xa1x","a2ya1y","b2xb1x","b2yb1y","a1xb1x","a1yb1y","uaT","ubT","uB","ua","ub","segmentsCoincide","intersectSegmentLine","s1","s2","l1","l2","intersectLinePolygon","result","intersectSegmentPolygon","intersectPolygonPolygon","points1","points2","coincidences","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","ObjectGeometry","getX","getXY","getY","getRelativeX","setRelativeX","getRelativeY","setRelativeY","relativePosition","getRelativeXY","group","setRelativeXY","isStrokeAccountedForInDimensions","getCoords","aCoords","calcACoords","coords","intersectsWithObject","intersection","isContainedWithinObject","getBoundingRect","isOnScreen","isPartiallyOnScreen","getScaledWidth","_getTransformedDimensions","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","getCanvasRetinaScaling","_this$canvas","getViewportTransform","_this$canvas2","rotateMatrix","tMatrix","finalMatrix","dim","w","transformMatrixKey","skipGroup","prefix","matrixCache","ownMatrixCache","_getNonTransformedDimensions","_calculateCurrentDimensions","dimOptions","preScalingStrokeValue","postScalingStrokeValue","finalDimensions","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","translateToOriginPoint","relCenter","getPointByOrigin","pos","_getLeftTopCoords","FabricObject","name","setOptions","_createCacheCanvas","_cacheContext","_updateCacheCanvas","_limitCacheSize","dims","maxCacheSideLimit","minCacheSideLimit","limX","limY","capped","_getCacheCanvasDimensions","objectScale","getTotalObjectScaling","neededX","neededY","ceil","dimensionsChanged","zoomChanged","setTransform","drawingWidth","drawingHeight","translate","needFullTransform","contextTop","getObjectScaling","retina","getObjectOpacity","_constrainScale","isChanged","parent","isNotVisible","_setupCompositeOperation","drawSelectionBackground","_setOpacity","_setShadow","drawCacheOnCanvas","_removeCacheCanvas","drawObject","isCacheDirty","parentClipPaths","hasStroke","hasFill","needsItsOwnCache","ownCaching","isOnACache","willDrawShadow","drawClipPathOnCache","canvasWithClipPath","originalFill","originalStroke","_setClippingProperties","_render","_drawClipPath","createClipPathLayer","prevClipPath","skipCanvas","fillRect","_removeShadow","globalAlpha","_setStrokeStyles","decl","lineWidth","lineCap","lineDashOffset","lineJoin","miterLimit","gradientUnits","_applyPatternForTransformedGradient","strokeStyle","_applyPatternGradientTransform","_setFillStyles","_setLineDash","dashArray","setLineDash","sx","sy","multX","multY","scaling","shadowColor","shadowBlur","browserShadowBlurConstant","shadowOffsetX","shadowOffsetY","_renderPaintInOrder","_renderStroke","_renderFill","_pCtx$createPattern","pCanvas","pCtx","createPattern","_findCenterFromElement","objectForm","cloneAsImage","origParams","originalGroup","originalShadow","canvasProvider","withoutTransform","withoutShadow","boundingRect","shadowOffset","originalCanvas","setOnGroup","animatable","_animate","propIsColor","colorProperties","animationOptions","isDescendantOf","getAncestors","ancestors","findCommonAncestors","fork","otherFork","common","otherAncestors","ancestor","j","hasCommonAncestors","commonAncestors","isInFrontOf","ancestorData","firstCommonAncestor","headOfFork","pop","headOfOtherFork","thisIndex","otherIndex","propertiesToSerialize","customProperties","toFixedBound","val","_removeDefaultValues","baseValues","getPrototypeOf","baseValue","_fromObject","serializedObjectOptions","_ref4","extraParam","_excluded2","enlivedObjectOptions","wrapWithFireEvent","actionHandler","extraEventInfo","actionPerformed","wrapWithFixedAnchor","centerPoint","constraint","changeWidth","changeObjectWidth","strokePadding","oldWidth","newWidth","renderMultiPointControl","styleOverride","actionName","renderRoundedPointControl","apply","renderPointControl","xSize","sizeX","cornerSize","ySize","sizeY","myLeft","myTop","cornerSecondColor","cornerStrokeColor","arc","renderCircleControl","transparentCorners","cornerColor","renderSquareControl","xSizeBy2","ySizeBy2","strokeRect","Control","shouldActivate","controlKey","_fabricObject$canvas","getActiveObject","isControlVisible","getActionHandler","getMouseDownHandler","mouseDownHandler","getMouseUpHandler","mouseUpHandler","cursorStyleHandler","cursorStyle","getActionName","getVisibility","_fabricObject$_contro","_fabricObject$_contro2","_controlsVisibility","setVisibility","positionHandler","currentControl","calcCornerCoords","objectCornerSize","centerX","centerY","isTouch","touchSizeX","touchSizeY","cornerStyle","rotationStyleHandler","lockRotation","rotationWithSnapping","rotateObjectWithSnapping","ex","ey","theta","pivotPoint","lastAngle","curAngle","snapAngle","snapThreshold","rightAngleLocked","leftAngleLocked","hasRotated","scaleIsProportional","uniformIsToggled","uniScaleKey","uniformScaling","scalingIsForbidden","by","scaleProportionally","lockX","lockY","scaleMap","scaleCursorStyleHandler","n","scaleObject","signX","signY","gestureScale","distance","original","oldScaleX","oldScaleY","scalingEqually","scaleObjectFromCorner","scalingX","scaleObjectX","scalingY","scaleObjectY","AXIS_KEYS","counterAxis","skew","lockSkewing","flip","skewMap","skewCursorStyleHandler","skewHandler","axis","originKey","lockSkewingKey","skewKey","flipKey","counterOriginKey","counterFlipKey","counterOriginFactor","skewingSide","finalHandler","skewingBefore","skewingStart","shearingStart","shearing","skewing","atan","changed","dimBefore","dimAfter","compensationFactor","skewObject","skewHandlerX","skewHandlerY","isAltAction","altActionKey","scaleOrSkewActionName","isAlternative","scaleSkewCursorStyleHandler","scalingXOrSkewingY","scalingYOrSkewingX","createObjectDefaultControls","ml","mr","mb","mt","mtr","withConnection","mlr","mbr","mrr","createResizeControls","createTextboxDefaultControls","InteractiveFabricObject","createControls","targetCanvas","noScaleCache","_currentTransform","action","startsWith","getActiveControl","__corner","coord","oCoords","findControl","forTouch","hasControls","cornerEntries","touchCorner","calcOCoords","rMatrix","positionMatrix","startMatrix","transformOptions","forEachControl","_calcCornerCoords","touchCornerSize","fn","selectionBackgroundColor","_activeObject","wh","strokeBorders","_drawBorders","borderColor","borderDashArray","drawControlsConnectingLines","_renderControls","hasBorders","styleOptions","shouldDrawBorders","shouldDrawControls","borderScaleFactor","isMoving","borderOpacityWhenMoving","drawBorders","forActiveSelection","shouldStroke","cornerDashArray","setControlVisible","setControlsVisibility","clearContextTop","restoreManually","onDeselect","_options","onSelect","shouldStartDragging","_e","onDragStart","canDrop","renderDragSourceEffect","renderDropTargetEffect","applyMixins","derivedCtor","constructors","baseCtor","getOwnPropertyNames","prototype","defineProperty","getOwnPropertyDescriptor","create","lockMovementX","lockMovementY","lockScalingX","lockScalingY","lockSkewingX","lockSkewingY","lockScalingFlip","evented","perPixelTargetFind","activeOn","hoverCursor","moveCursor","isTransparent","tolerance","getImageData","StrokeProjectionsBase","strokeProjectionMagnitude","strokeUniformScalar","createSideVector","projectOrthogonally","applySkew","calcOrthogonalProjection","isSkewed","scaleUnitVector","unitVector","zeroVector","StrokeLineJoinProjections","getOrthogonalRotationFactor","vector1","vector2","C","AC","bisector","orthogonalProjection","correctSide","projectBevel","projections","projectMiter","hypotUnitScalar","miterVector","projectRoundNoSkew","startCircle","endCircle","projectRoundWithSkew","circleRadius","newY","furthestY","newX","furthestX","projectRound","isStraightLine","newOrigin","proj0","proj1","comparisonVector","isProj0Start","projectPoints","project","originPoint","projectedPoint","StrokeLineCapProjections","projectButt","projection","projectSquare","strokePointingOut","projectedA","projectStrokeOnPoints","openPath","reduced","findIndexRight","cloneStyles","newObj","keyInner","escapeXml","string","graphemeSplit","textstring","graphemes","chr","getWholeChar","str","code","charCodeAt","isNaN","charAt","next","prev","firstLetterOnly","hasStyleChanged","prevStyle","thisStyle","forTextSpans","textBackgroundColor","deltaY","overline","underline","linethrough","stylesToArray","text","textLines","stylesArray","charIndex","chars","end","stylesFromArray","stylesObject","styleIndex","SHARED_ATTRIBUTES","selectorMatches","selector","nodeName","classNames","getAttribute","azAz","matcher","splitClassNames","elementMatchesRule","selectors","parentMatching","firstMatching","parentElement","doesSomeParentMatch","normalizeAttr","attr","_attributesMap","regex","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","transforms","transformList","_templateObject7","reTransformList","reTransform","reTransformAll","parseTransformAttribute","attributeValue","cleanupSvgAttribute","test","matchAll","transformMatch","matchedParams","operation","rawArgs","arg1","arg2","arg3","arg4","arg5","arg","normalizeValue","parentAttributes","parsed","ouputValue","transformMatrix","fillIndex","strokeIndex","parseFontDeclaration","oStyle","lineHeight","parseStyleString","chunk","parseStyleAttribute","parseStyleObject","colorAttributesMap","parseAttributes","attributes","cssRules","parentFontSize","ownAttributes","rule","getGlobalStylesForElement","normalizedStyle","normalizedAttr","normalizedValue","font","mergedAttrs","colorAttr","setStrokeFillOpacity","RECT_PROPS","Rect","_initRxRy","rx","ry","isRounded","bezierCurveTo","fromElement","_parseAttributes","ATTRIBUTE_NAMES","restOfparsedAttributes","Boolean","LAYOUT_TYPE_INITIALIZATION","LAYOUT_TYPE_ADDED","LAYOUT_TYPE_REMOVED","LAYOUT_TYPE_IMPERATIVE","getObjectBounds","destinationGroup","currentGroup","objectCenter","accountForStroke","strokeUniformVector","scalingStrokeWidth","sizeVector","LayoutStrategy","calcLayoutResult","shouldPerformLayout","calcBoundingBox","prevStrategy","strategy","shouldLayoutClipPath","getInitialSize","overrides","bboxSize","bboxCenter","actualSize","relativeCorrection","FitContentLayout","LAYOUT_MANAGER","LayoutManager","_subscriptions","performLayout","strictContext","bubbles","_prevLayoutStrategy","onBeforeLayout","layoutResult","getLayoutResult","commitLayout","onAfterLayout","attachHandlers","trigger","subscribe","unsubscribe","_context","delete","unsubscribeTargets","targets","subscribeTargets","tricklingContext","layoutManager","prevCenter","nextCenter","correction","_context$x","_context$y","layoutObjects","layoutObject","_","bubblingContext","NoopLayoutManager","Group","groupInit","_options$layoutManage","__objectSelectionTracker","__objectSelectionMonitor","__objectSelectionDisposer","enterGroup","canEnterGroup","_filterObjectsBeforeEnteringGroup","allowedObjects","_onAfterObjectsChange","removeParentTransform","exitGroup","_shouldSetNestedCoords","subTargetCheck","removeAll","_activeObjects","selected","activeObjects","_watchObject","watch","_enterGroup","activeObject","_exitGroup","ownCache","preserveObjectStacking","triggerLayout","__serializeObjects","method","_includeDefaultValues","originalDefaults","_createSVGBgRect","fillStroke","commons","svgString","bg","abortable","hydratedOptions","layoutClass","strategyClass","interactive","findScaleToFit","destination","findScaleToCover","commaWsp","reArcCommandPoints","repeatedCommands","M","segmentToBezier","theta1","theta2","cosTh","sinTh","cx1","cy1","mT","fromX","fromY","costh1","sinth1","costh2","sinth2","toX","toY","calcVectorAngle","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","begx","begy","cp1x","cp1y","cp2x","cp2y","endx","endy","argsString","cachesBoundsOfCurve","boundsOfCurveCache","tvalues","bounds","b2ac","sqrtb2ac","t1","t2","jlen","iterator","getPointOnCubicBezierIterator","fromArcToBeziers","fx","fy","rot","large","sweep","tx","ty","segsNorm","arcToSegments","rotateX","root","sinTheta","px","py","rx2","ry2","py2","px2","pl","_rx","_ry","mTheta","dtheta","segments","mDelta","th3","makePathSimpler","x1","y1","destinationPath","previous","controlX","controlY","parsedCommand","converted","calcLineLength","x2","y2","pct","c1","c2","CB2","c3","CB3","c4","CB4","QB1","QB2","QB3","getTangentCubicIterator","p1x","p1y","p2x","p2y","p3x","p3y","p4x","p4y","qb1","qb2","qb3","tangentX","tangentY","getPointOnQuadraticBezierIterator","getTangentQuadraticIterator","invT","pathIterator","tempP","tmpLen","perc","findPercentageForDistance","segInfo","nextLen","nextStep","lastPerc","angleFinder","getPathSegmentsInfo","tempInfo","totalLength","info","basicInfo","command","destX","destY","getPointOnPath","infos","segPercent","segment","rePathCmdAll","regExpArcCommandPoints","reMyNum","commandLengths","parsePath","pathString","_pathString$match","chain","matchStr","commandLetter","commandLength","paramArr","lastIndex","out","newCommand","transformedCommand","getSmoothPathFromPoints","p1","p2","multSignX","multSignY","manyPoints","midPoint","joinPath","pathData","setStyle","elementStyle","setProperty","getRandomInt","random","request","xhr","removeListener","ontimeout","onreadystatechange","readyState","open","send","removeTransformMatrixForSvgParsing","preserveAspectRatioOptions","_assignTransformMatrixProps","cropX","cropY","offsetLeft","offsetTop","_newCanvas$getContext","getRegularPolygonPath","numVertexes","radius","interiorAngle","rotationAdjustment","rad","commonAttributes","groupSVGElements","mergeClipPaths","_b$group","removeTransformFromObject","finalTransform","rotatePoint","transformPath","pathOffset","pathSegment","newSegment","CanvasDOMManager","containerClass","upperCanvasEl","createUpperCanvas","upper","applyCanvasStyle","container","createContainerElement","replaceChild","className","removeChild","SelectableCanvas","_this$elements$upper","_this$elements$upper2","wrapperEl","_objectsToRender","deselected","_discardActiveObject","_hoveredTarget","_hoveredTargets","_chooseObjectsToRender","contextTopDirty","_groupSelector","isDrawingMode","renderTopLayer","_isCurrentlyDrawing","freeDrawingBrush","selection","_drawSelection","renderTop","setTargetFindTolerance","targetFindTolerance","pixelFindCanvasEl","pixelFindContext","isTargetTransparent","selectionBgc","enhancedTolerance","_isSelectionKeyPressed","sKey","selectionKey","_shouldClearSelection","getActiveObjects","_shouldCenterTransform","modifierKeyPressed","centerTransform","_getOriginFromCorner","controlName","_setupCurrentTransform","alreadySelected","_control$getActionHan","getScenePoint","getActionFromCorner","altKey","centeredKey","lastX","lastY","shiftKey","setCursor","cursor","deltaX","extent","strokeOffset","selectionLineWidth","minX","minY","maxX","maxY","selectionColor","selectionBorderColor","selectionDashArray","findTarget","skipTargetFind","getViewportPoint","aObjects","searchPossibleTargets","subTargets","altSelectionKey","_pointIsInObjectSelectionArea","viewportZoom","angleRadians","cosP","sinP","cosPSinP","cosPMinusSinP","_checkTarget","isEditing","_searchPossibleTargets","subTarget","_pointer","_absolutePointer","fromViewport","boundsWidth","boundsHeight","cssScale","_resetTransformEventData","_setBrushStyles","willReadFrequently","getTopContext","getSelectionContext","getSelectionElement","active","_fireSelectionEvents","oldObjects","somethingChanged","invalidate","added","setActiveObject","currentActives","_setActiveObject","prevActiveObject","endCurrentTransform","discardActiveObject","discarded","_finalizeCurrentTransform","_scaling","originalProperties","_realizeGroupTransformOnObject","originalValues","selectionFullyContained","defaultCursor","freeDrawingCursor","notAllowedCursor","stopContextMenu","fireRightClick","fireMiddleClick","enablePointerEvents","TextEditingManager","cb","hiddenTextarea","focus","__disposer","exitTextEditing","exitEditing","onMouseMove","_this$target","updateSelectionOnMouseMove","addEventOptions","passive","getEventPoints","viewportPoint","scenePoint","absolutePointer","addListener","syntheticEventConfig","mouse","in","targetIn","targetOut","canvasIn","canvasOut","drag","Canvas","eventHandler","addOrRemove","_getEventPrefix","functor","_eventjsFunctor","canvasElement","eventTypePrefix","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDoubleClick","_onDragStart","_onDragEnd","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","_onTouchStart","removeListeners","_onMouseUp","_onTouchEnd","clearTimeout","_willAddMouseDown","__onMouseWheel","shared","nestedTarget","_isClick","_dragSource","_onDragProgress","_renderDragEffects","dropTarget","_dropTarget","didDrop","dataTransfer","dropEffect","dragSource","_draggedoverTarget","findDragTargets","eventType","_fireEnterLeaveEvents","_basicEventHandler","_cacheTransformEventData","_handleEvent","getPointerId","evt","identifier","pointerId","_isMainEvent","isPrimary","touches","mainTouchId","shouldPreventScrolling","currentActiveObject","__onMouseDown","_target","__onMouseUp","__onMouseMove","_shouldRender","_this$_activeObject","isClick","button","_onMouseUpInDrawingMode","shouldRender","targetWasActive","handleSelection","found","originalControl","originalMouseUpHandler","_setCursorFromEvent","currentTarget","currentSubTargets","_onMouseDownInDrawingMode","onMouseDown","_onMouseMoveInDrawingMode","onMouseUp","grouped","handleMultiSelection","groupSelector","_transformObject","_fireOverOutEvents","textEditingManager","fireSyntheticInOutEvents","oldTarget","fireCanvas","draggedoverTarget","targetChanged","outOpt","nextTarget","inOpt","previousTarget","localPointer","_performTransformAction","activeSelection","reverse","isAS","prevActiveObjects","multiSelectAdd","newActiveSelection","point1","point2","collectedObjects","klass","linearDefaultCoords","radialDefaultCoords","ifNaN","valueIfNaN","RE_PERCENT","isPercent","parsePercent","NaN","RE_KEY_VALUE_PAIRS","RE_KEY_VALUE","parseColorStop","keyValuePairs","parseColorStops","opacityAttr","colorStops","colorStopEls","getElementsByTagName","parseType","parseGradientUnits","getValue","parseCoords","valuesToConvert","finalValue","propValue","convertPercentUnitsToValues","parseLinearCoords","parseRadialCoords","Gradient","addColorStop","colorStop","preTransform","sort","_renderPathCommands","needsSwap","minRadius","percentageShift","gradient","createLinearGradient","createRadialGradient","svgOptions","viewBoxWidth","viewBoxHeight","Pattern","isImageSource","isCanvasSource","sourceToString","complete","naturalWidth","naturalHeight","patternSource","patternOffsetX","patternOffsetY","patternWidth","patternHeight","BaseBrush","_saveAndTransform","needsFullRender","_resetShadow","_isOutSideCanvas","Path","_setPath","adjustPosition","setBoundingBox","_calcBoundsFromPath","quadraticCurveTo","pathCmd","sourcePath","_getOffsetTransform","digits","_calcDimensions","subpathStartX","subpathStartY","parsedAttributes","PencilBrush","_points","_hasStraightLine","drawSegment","drawStraightLine","straightLineKey","_prepareForDrawing","_addPoint","limitedToCanvasSize","oldEnd","_finalizeAndAddPath","_reset","convertPointsToSVGPath","createPath","decimatePoints","cDistance","lastPoint","adjustedDistance","newPoints","decimate","isEmptySVGPath","CIRCLE_PROPS","Circle","setRadius","startAngle","endAngle","getRadiusX","getRadiusY","startX","startY","endX","endY","largeFlag","sweepFlag","CircleBrush","drawDot","addPoint","dot","originalRenderOnAddRemove","circles","circle","pointerPoint","SprayBrush","sprayChunks","sprayChunk","addSprayChunk","renderChunck","rects","chunck","rect","optimizeOverlapping","uniqueRects","uniqueRectsArray","getUniqueRects","sprayChunck","density","dotWidthVariance","dotWidth","randomOpacity","PatternBrush","getPatternSrc","patternCanvas","patternCtx","getPattern","pattern","topLeft","coordProps","Line","_setWidthHeight","calcLinePoints","origStrokeStyle","_this$stroke","_x1","_x2","_y1","_y2","xMult","yMult","Triangle","widthBy2","heightBy2","ELLIPSE_PROPS","Ellipse","getRx","getRy","parsePointsAttribute","pointsSplit","parsedPoints","polylineDefaultValues","exactBoundingBox","Polyline","initialized","isOpen","_projectStrokeOnPoints","strokeDiff","bboxNoStroke","layoutProperties","_options$width","_options$height","_options$width2","_options$height2","output","diffX","diffY","Polygon","fontProperties","textDecorationProperties","textLayoutProperties","additionalProps","styleProperties","textDefaultValues","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","superscript","baseline","subscript","pathStartOffset","pathSide","pathAlign","_fontSizeFraction","offsets","_fontSizeMult","charSpacing","direction","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","JUSTIFY","JUSTIFY_LEFT","JUSTIFY_RIGHT","JUSTIFY_CENTER","StyledText","isEmptyStyles","lineIndex","line","p3","styleHas","cleanStyle","letterCount","stylePropertyValue","stylesCount","allStyleObjectPropertiesMatch","graphemeCount","styleObject","_textLines","removeStyle","lineNum","charNum","_extendStyles","get2DCursorLocation","_getLineStyle","_setLineStyle","newStyle","_getStyleDeclaration","_setStyleDeclaration","getSelectionStyles","startIndex","endIndex","getStyleAtPosition","getCompleteStyleDeclaration","setSelectionStyles","_forceClearCache","_lineStyle$charIndex","lineStyle","_styleProperties","_deleteStyleDeclaration","_deleteLineStyle","multipleSpacesRegex","dblQuoteRegex","createSVGInlineRect","svgColor","createSVGRect","measuringContext","FabricText","setPathInfo","initDimensions","segmentsInfo","_splitText","newLines","_splitTextIntoLines","lines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","calcTextHeight","enlargeSpaces","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","charBound","spaces","isEndOfWrapping","getLineWidth","__charBounds","kernedWidth","missingNewlineOffset","_lineIndex","selectionStart","skipWrapping","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","leftOffset","_getLeftOffset","lineTopOffset","_getTopOffset","heightOfLine","getHeightOfLine","lineLeftOffset","_getLineLeftOffset","drawStart","currentColor","boxWidth","boxStart","lastColor","getValueOfPropertyAt","charBox","renderLeft","_measureChar","_char","previousChar","prevCharStyle","fontDeclaration","couple","stylesAreEqual","fontMultiplier","coupleWidth","previousWidth","getMeasuringContext","measureText","getHeightOfChar","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","prevGrapheme","graphemeInfo","llength","lineBounds","grapheme","_getGraphemeBox","positionInPath","totalPathLength","_setGraphemeOnPath","numOfSpaces","centerPosition","skipLeft","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","isJustify","shortCut","isLtr","currentDirection","actualStyle","nextStyle","timeToRender","drawingLeft","charsToRender","_renderChar","_applyPatternGradientTransformText","handleFiller","fullDecl","shouldFill","fillOffsets","fillText","strokeOffsets","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","lineDiff","__lineWidths","_charStyle$property","topOffset","currentDecoration","currentFill","lastDecoration","lastFill","currentSize","currentDy","parsedFontFamily","genericFonts","newLine","newText","needsDims","isAddingPath","_options$parsedAttrib","textAnchor","textDecoration","restOfOptions","textContent","textHeightScaleFactor","scaledDiff","textHeight","offX","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","textBgRects","textSpans","getSvgTextDecoration","textTopOffset","textLeftOffset","lineOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","char","styleDecl","styleProps","getSvgSpanStyles","fillStyles","dySpan","_getSVGLineTopOffset","lastHeight","useWhiteSpace","decoration","DraggableTextDelegate","dragEnterHandler","dragOverHandler","dragLeaveHandler","dragEndHandler","dropHandler","_dispose","isPointerOverSelection","newSelection","getSelectionStartFromPointer","selectionEnd","__mouseDownInPlace","isActive","__dragStartFired","setCursorByClick","initDelayedCursor","__isDraggingOver","getDragStartSelection","__dragStartSelection","setDragImage","_e$dataTransfer","flipFactor","boundaries","_getCursorBoundaries","diff","bgc","dragImage","border","__dragImageDisposer","appendChild","setData","stringify","effectAllowed","abortCursorAnimation","editable","defaultPrevented","dragStartSelection","targetCanDrop","ev","_e$dataTransfer2","insert","getData","trailing","selectionStartOffset","removeChars","trimEnd","insertChars","enterEditing","_updateTextarea","_e$dataTransfer3","reNonWord","ITextBehavior","initBehavior","_tick","_onTickComplete","_animateCursor","toValue","_currentCursorOpacity","renderCursorOrSelection","_currentTickState","cursorDuration","_this$_currentTickCom","_currentTickCompleteState","restart","cursorDelay","shouldClear","cursorAnimation","restartCursorIfNeeded","selectAll","_fireSelectionChanged","getSelectedText","findWordBoundaryLeft","startFrom","_reSpace","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditingImpl","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","activeElement","currentStart","currentEnd","__selectionStartOnMouseDown","editingBorderColor","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","fromGraphemeToStringSelection","cursorOffsetCache","inCompositionMode","updateTextareaPosition","updateFromTextArea","textarea","_calcTextareaPosition","desiredPosition","compositionStart","cursorLocation","charHeight","upperCanvas","upperCanvasWidth","upperCanvasHeight","clientWidth","clientHeight","_savedProps","_restoreEditingProps","_exitEditing","exitEditingImpl","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","lineStart","charStart","lineEnd","charEnd","styleObj","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","newLineStyles","originalLineLength","isEndOfLine","someStyleIsCarryingOver","currentCharStyle","numIndex","styleCarriedOver","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLength","setSelectionStartEndWithShift","_selectionDirection","ITextKeyBehavior","autocapitalize","autocorrect","autocomplete","spellcheck","wrap","hiddenTextareaContainer","keydown","keyup","input","copy","cut","paste","compositionstart","compositionupdate","compositionend","onKeyDown","keyMap","keysMapRtl","keysMap","keyCode","ctrlKeysMapDown","ctrlKey","metaKey","stopImmediatePropagation","onKeyUp","_copyDone","ctrlKeysMapUp","onInput","fromPaste","updateAndFire","nextText","charCount","nextCharCount","removedText","removeFrom","removeTo","charDiff","textareaSelection","backDelete","copiedText","disableStyleCopyPaste","copiedTextStyle","onCompositionStart","onCompositionEnd","onCompositionUpdate","compositionEnd","_getWidthBeforeCursor","bound","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","newValue","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","moveCursorRight","moveCursorRightWithShift","moveCursorRightWithoutShift","notALeftClick","ITextClickBehavior","_mouseDownHandler","_mouseDownHandlerBefore","doubleClickHandler","tripleClickHandler","__lastClickTime","__lastLastClickTime","__lastPointer","draggableTextDelegate","__newClickTime","newPointer","isTripleClick","__lastSelected","didDrag","mouseOffset","charLength","widthAfter","MOVE_CURSOR_UP","MOVE_CURSOR_DOWN","MOVE_CURSOR_LEFT","MOVE_CURSOR_RIGHT","EXIT_EDITING","iTextDefaultValues","cursorColor","caching","IText","setSelectionStart","_updateAndFire","setSelectionEnd","renderSelection","renderCursor","skipCaching","_getCursorBoundariesOffsets","__getCursorBoundariesOffsets","renderCursorAt","_renderCursor","getCursorRenderingData","_renderSelection","dragSelection","startLine","endLine","startChar","endChar","realLineHeight","boxEnd","drawHeight","extraTop","drawWidth","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","cursorPosition","Textbox","dynamicMinWidth","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","splitByGrapheme","isWrapping","nextOffset","nextLineIndex","shouldLimit","mapNextLine","p2Number","_wrapText","desiredWidth","getGraphemeDataForRender","wrapped","wordsData","_wrapLine","infix","largestWordWidth","wordsOrGraphemes","wordSplit","word","graphemeArray","_measureWord","charOffset","_wordJoiners","reservedSpace","additionalSpace","infixWidth","lineJustStarted","wordWidth","getMinWidth","minWidth","linesToKeep","propNumber","ClipPathLayout","clipPathCenter","FixedLayout","ActiveSelectionLayoutManager","parents","Set","selectedObjects","ActiveSelection","multiSelectionStacking","findIndex","groups","childrenOverride","Canvas2dFilterBackend","applyFilters","filters","sourceElement","sourceWidth","sourceHeight","pipelineState","imageData","originalEl","originalImageData","filterBackend","applyTo","imageDataPostFilter","putImageData","WebGLFilterBackend","tileSize","Float32Array","setupGLContext","captureGPUInfo","createWebGLCanvas","premultipliedAlpha","depth","stencil","antialias","clearColor","cachedTexture","getCachedTexture","destinationWidth","destinationHeight","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","aPosition","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","dWidth","dHeight","resizeCanvasIfNeeded","copyGLTo2D","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","clearWebGLCaches","textureCache","textureImageSource","NEAREST","RGBA","UNSIGNED_BYTE","CLAMP_TO_EDGE","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texture","texParameteri","texImage2D","uniqueId","evictCachesForKey","glCanvas","sourceY","copyGLTo2DPutImageData","numBytes","u8","Uint8Array","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","imgData","ImageData","gpuInfo","renderer","vendor","ext","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","initFilterBackend","enableGLFiltering","getFilterBackend","setFilterBackend","backend","IMAGE_PROPS","FabricImage","setElement","_element","removeTexture","_originalElement","CSS_CANVAS","resizeFilter","applyResizeFilters","elementKey","getCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","imageMarkup","strokeSvg","imageRendering","imageSmoothing","getSvgSrc","origFill","filtered","srcFromAttribute","setSrc","minimumScale","minimumScaleTrigger","elementToFilter","_filteredEl","_filterScalingX","_filterScalingY","_lastScaleX","_lastScaleY","isNeutralState","imgElement","_needsResize","elementToDraw","elWidth","elHeight","sX","sY","sW","sH","maxDestW","maxDestH","_resetWidthHeight","pAR","preserveAspectRatio","pWidth","pHeight","rWidth","rHeight","f","rf","hydratedProps","fromURL","imageOptions","applyViewboxTransform","viewBoxAttr","widthAttr","heightAttr","missingViewBox","missingDimAttr","translateMatrix","widthDiff","heightDiff","parsedDim","pasedViewBox","createElementNS","firstChild","getTagName","node","tagName","svgInvalidAncestorsRegEx","getMultipleNodes","nodeNames","nodeList","nodeArray","getElementsByTagNameNS","gradientsAttrs","xlinkAttr","recursivelyParseGradientsXlink","_gradient$getAttribut","xLink","referencedGradient","children","referenceClone","cloneNode","tagArray","getCSSRules","allRules","styleContents","ruleObj","propertyValuePairs","pair","_rule","findTag","ElementsParser","clipPaths","regexUrl","gradientDefs","elList","getGradientDefs","createObject","resolveGradient","resolveClipPath","extractPropertyDefinition","storage","gradientDef","usingElement","exactOwner","clipPathElements","objTransformInv","clipPathTag","clipPathOwner","clipPathElement","enlivedClippath","clipRule","gTransform","isValidSvgTag","async","parseSVGDocument","allElements","nodelist","skipAttributes","useElement","useAttributes","useAttrMap","xlink","href","referencedElement","clonedOriginal","originalAttributes","originalAttrMap","currentTrans","el3","setAttributeNS","childNodes","styleRecord","mergedStyles","entry","parseUseDirectives","descendants","hasInvalidAncestor","createEmptyResponse","localClipPaths","elementParser","loadSVGFromString","parseFromString","loadSVGFromURL","xml","responseXML","parsedDoc","ACTION_NAME","createPolyPositionHandler","pointIndex","polyObject","polyActionHandler","poly","mouseLocalPosition","factoryPolyActionHandler","anchorPoint","anchorPointInParentPlane","createPolyActionHandler","calcPathPointPosition","pathObject","commandIndex","pathPositionHandler","pathActionHandler","movePathPoint","anchorCommand","PathPointControl","controlFill","controlStroke","PathControlPointControl","connectToCommandIndex","connectToPointIndex","connectionDashArray","commandType","createControl","commandIndexPos","pointIndexPos","isControlPoint","controlPointStyle","pointStyle","previousCommandType","indexFromPrevCommand","isWebGLPipelineState","isPutImageFaster","testContext","ArrayBuffer","testPipelineState","performance","now","drawImageTime","highPsourceCode","identityFragmentShader","BaseFilter","getFragmentSource","getVertexSource","createProgram","vertexSource","vertexShader","VERTEX_SHADER","program","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","attributeLocations","getAttributeLocations","getAttribLocation","locations","sendAttributeData","aPositionData","attributeLocation","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","finish","_swapTextures","temp","applyToWebGL","applyTo2d","getCacheKey","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","_gl","_uniformLocations","createHelpLayer","helpLayer","defaultKeys","blendColorFragmentSource","screen","difference","lighten","darken","exclusion","tint","BlendColor","mode","tg","alpha1","oR","oG","oB","uniform4fv","uColor","mask","BlendImage","image","TEXTURE1","calculateMatrix","resources","blendImage","canvas1","blendData","uniform1i","uImage","uniformMatrix3fv","uTransformMatrix","filterOptions","enlivedImage","Blur","aspectRatio","horizontal","simpleBlur","blurLayer1","blurLayer2","canvas2","ctx1","ctx2","nSamples","percent","newImageData","delta","chooseRightDelta","uniform2fv","uDelta","blurScale","Brightness","brightness","uBrightness","colorMatrixDefaultValues","colorsOnly","ColorMatrix","constants","uniformMatrix4fv","uColorMatrix","uConstants","createColorMatrixFilter","_Class","newClass","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","Composed","subFilters","enlivedFilters","Contrast","contrast","contrastF","uContrast","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","Convolute","opaque","weights","side","halfSide","sw","sh","createImageData","dst","alphaFac","dstOff","scx","scy","srcOff","wt","uniform1fv","uMatrix","GAMMA","Gamma","gamma","rInv","gInv","bInv","rgbValues","rgb","uniform3fv","uGamma","lightness","luminosity","Grayscale","uMode","hueRotationDefaultValues","rotation","HueRotation","cosine","sine","aThird","aThirdSqtSin","OneMinusCos","Invert","invert","uInvert","uAlpha","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","uBlocksize","RemoveColor","lowC","highC","uLow","uHigh","useAlpha","Resize","uTaps","taps","getFilterWindow","tempScale","lanczosLobes","filterWindow","generateShader","getTaps","lobeFunction","lanczosCreate","applyToForWebgl","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","oW","oH","newData","resizeType","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","mult","doneW","doneH","stepW","stepH","dX","dY","tmpCanvas","srcData","destImg","destData","lanczos","ratioX","ratioY","rcpRatioX","rcpRatioY","range2X","range2Y","cacheLanc","icenter","process","u","weight","fX","fY","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","yy","w0","Saturation","adjust","saturation","uSaturation","Vibrance","vibrance","amt","uVibrance"],"mappings":"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"}